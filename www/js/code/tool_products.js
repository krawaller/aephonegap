(function(){var And,Eq,Err,FALSE,Frac,Fraction,Geq,Gt,Leq,Lt,Neg,Neq,Not,Num,OK,Or,Pow,Power,Prod,Product,Sum,TRUE,absorbProductFacs,arrsplit,biSumToProd,collapseSumBaseSquare,deepcopy,distribute,distributeFacs,divideBy,exhumeFacTactic,exportTo,exposeFacInNumber,extractFacsFromDenomAndPowify,extractFacsFromExpression,extractFacsFromTerms,extractNumFacFromExpression,facPath,faclistGradeNumber,faclistNumber,factoriseNumber,findCommonNumberFacs,findLargestCommonDivisor,findSmallestCommonDivisor,five,four,funcs,getCollectOpts,getExtractInstruction,getFacOptions,getFacPossibilities,getFacs,getPotentialFacs,getUnitFacOpts,k,makeCheck,mergeFracFacs,mergeSumFacs,mixin,multiplication,multiplyAllNumFacs,multiplyByOne,multiplyNumFacs,multiplyPosNegNum,numToPow,numToProd,one,printObj,purgeOneFacs,splitFacsToProduct,three,toNegPath,toPosPath,toProdPath,two,v,x,y,z,zero,zeroFacExprToZero,zeroFacProdToZero,zeroToZeroFacProd,_ref,__indexOf=[].indexOf||function(item){for(var i=0,l=this.length;i<l;i++){if(i in this&&this[i]===item)return i}return-1};_ref=typeof require==="undefined"?this.CATS.math.toolhelpers:require("./toolhelpers"),arrsplit=_ref.arrsplit,mixin=_ref.mixin,deepcopy=_ref.deepcopy,Prod=_ref.Prod,Frac=_ref.Frac,Pow=_ref.Pow,Eq=_ref.Eq,Leq=_ref.Leq,Gt=_ref.Gt,Geq=_ref.Geq,Lt=_ref.Lt,Neq=_ref.Neq,four=_ref.four,five=_ref.five,And=_ref.And,Or=_ref.Or,Not=_ref.Not,TRUE=_ref.TRUE,FALSE=_ref.FALSE,makeCheck=_ref.makeCheck,x=_ref.x,y=_ref.y,z=_ref.z,Neg=_ref.Neg,Product=_ref.Product,Sum=_ref.Sum,Power=_ref.Power,Fraction=_ref.Fraction,Num=_ref.Num,zero=_ref.zero,one=_ref.one,two=_ref.two,three=_ref.three,Err=_ref.Err,OK=_ref.OK,printObj=_ref.printObj;getUnitFacOpts=function(obj,denom){var forbiddenword,forbidding,n,opt,opts,_i,_j,_len,_len1,_ref1,_ref2;forbidding={self:["negchild"],facs:["self"],negchildfacs:["self","negchild"],numerself:["self","numernegchild"],numerfacs:["numerself"],numernegchildfacs:["numerself","numernegchild"],negchildnumerself:["self","negchild"],negchildnumerfacs:["negchildnumerself"],denomself:["self","numerself","numerfacs","numernegchild","numernegchildfacs","negchildnumerself","negchildnumerfacs","denomnegchild"],negchilddenomself:["self","numerself","numerfacs","numernegchild","numernegchildfacs","negchildnumerself","negchildnumerfacs"],denomfacs:["denomself"],denomnegchildfacs:["denomnegchild"],negchilddenomfacs:["negchilddenomself"]};opts=getFacOptions(obj,denom);_ref1=deepcopy(opts);for(_i=0,_len=_ref1.length;_i<_len;_i++){opt=_ref1[_i];_ref2=forbidding[opt]||[];for(_j=0,_len1=_ref2.length;_j<_len1;_j++){forbiddenword=_ref2[_j];opts=function(){var _k,_ref3,_results;_results=[];for(n=_k=0,_ref3=opts.length;0<=_ref3?_k<_ref3:_k>_ref3;n=0<=_ref3?++_k:--_k){if(opts[n]!==forbiddenword){_results.push(opts[n])}}return _results}()}}return opts};numToPow=function(_arg){var all,base,deps,fac,facs,kind,kinds,num,obj,times,_i,_j,_len,_len1,_ref1;obj=_arg.obj,deps=_arg.deps;facs=deps.factoriseNumber(obj);kinds=[];all={};for(_i=0,_len=facs.length;_i<_len;_i++){fac=facs[_i];if(!all[fac.val]){all[fac.val]=0}all[fac.val]+=1}for(num in all){times=all[num];kinds.push({num:num,times:times})}base=1;_ref1=kinds.slice(1);for(_j=0,_len1=_ref1.length;_j<_len1;_j++){kind=_ref1[_j];if(kind.times!==kinds[0].times){return false}else{base*=parseFloat(kind.val)}}console.log(base,kinds[0].times);console.log(kinds);return{base:Num(base),exp:Num(parseFloat(kinds[0].times))}};getFacPossibilities=function(_arg){var allowdenom,allowpowbase,choice,collapseStubList,collectopt,data,deps,facPath,facaddr,facs,getCollectOpts,getFacOptions,getFacs,lookUp,n,nonegdig,obj,oneatatime,path,pick,remainingfacs,result,ret,_i,_j,_k,_len,_len1,_ref1,_ref2,_ref3;obj=_arg.obj,oneatatime=_arg.oneatatime,allowdenom=_arg.allowdenom,nonegdig=_arg.nonegdig,allowpowbase=_arg.allowpowbase,deps=_arg.deps;facPath=deps.facPath,lookUp=deps.lookUp,getFacOptions=deps.getFacOptions,getFacs=deps.getFacs,getCollectOpts=deps.getCollectOpts,collapseStubList=deps.collapseStubList;ret=[];_ref1=getFacOptions(obj,allowdenom,nonegdig,allowpowbase);for(_i=0,_len=_ref1.length;_i<_len;_i++){choice=_ref1[_i];facs=getFacs(obj,choice);for(pick=_j=1,_ref2=oneatatime?1:Math.max(1,facs.length-1);1<=_ref2?_j<=_ref2:_j>=_ref2;pick=1<=_ref2?++_j:--_j){_ref3=getCollectOpts(pick,facs.length);for(_k=0,_len1=_ref3.length;_k<_len1;_k++){collectopt=_ref3[_k];result=collapseStubList(Prod(function(){var _l,_len2,_results;_results=[];for(_l=0,_len2=collectopt.length;_l<_len2;_l++){n=collectopt[_l];_results.push(facs[n])}return _results}()));remainingfacs=facs.filter(function(fac,n){return!(__indexOf.call(collectopt,n)>=0)});data=[choice,collectopt,result,remainingfacs];facaddr={powbase:1,negchildpowbase:1,numerself:1,numerfacs:2,numernegchild:2,numernegchildfacs:3,negchildnumerself:1,negchildnumerfacs:2}[choice];if(facaddr){path=facPath(choice,collectopt[0]);data.push(lookUp(obj,facPath(choice,collectopt[0]).slice(0,-facaddr)).objs[1])}ret.push(data)}}}return ret};getCollectOpts=function(pick,from){var arr,coll,pos,safety,_i,_j,_ref1,_ref2,_results,_results1;arr=function(){_results=[];for(var _i=0;0<=pick?_i<pick:_i>pick;0<=pick?_i++:_i--){_results.push(_i)}return _results}.apply(this);coll=[arr.slice(0)];safety=0;while(safety<200){pos=pick-1;while(arr[pos]<pos+from-pick){arr[pos]++;coll.push(arr.slice(0))}while(pos>-1&&arr[pos]===pos+from-pick){pos--}if(pos===-1){return coll}arr[pos]++;arr=arr.slice(0,+pos+1||9e9).concat(function(){_results1=[];for(var _j=_ref1=arr[pos]+1,_ref2=arr[pos]+pick-pos-1;_ref1<=_ref2?_j<=_ref2:_j>=_ref2;_ref1<=_ref2?_j++:_j--){_results1.push(_j)}return _results1}.apply(this));coll.push(arr.slice(0));safety++}throw"GETCOLLECTOPTS ERR"};getExtractInstruction=function(_arg){var collect,collectopt,collectopts,collectprod,deps,haystack,needle,needleparts,numneedleparts,numstackparts,pos,stackopt,stackparts,stackprod,_i,_j,_len,_len1,_ref1;needle=_arg.needle,haystack=_arg.haystack,deps=_arg.deps;needleparts=deps.getFacs(needle);numneedleparts=needleparts.length;_ref1=deps.getFacOptions(haystack);for(_i=0,_len=_ref1.length;_i<_len;_i++){stackopt=_ref1[_i];stackparts=deps.getFacs(haystack,stackopt);stackprod=deps.collapseStubList(Prod(stackparts));numstackparts=stackparts.length;if(numstackparts>=numneedleparts){collectopts=deps.getCollectOpts(numneedleparts,numstackparts);for(_j=0,_len1=collectopts.length;_j<_len1;_j++){collectopt=collectopts[_j];collect=function(){var _k,_len2,_results;_results=[];for(_k=0,_len2=collectopt.length;_k<_len2;_k++){pos=collectopt[_k];_results.push(stackparts[pos])}return _results}();collectprod=deps.collapseStubList(Prod(collect));if(deps.isKindredSpirits({obj1:needle,obj2:collectprod,deps:deps}).result){return[stackopt,collectopt]}}}}return"NOFOUND"};getFacs=function(target,option,sel){switch(option){case"none":return[];case"self":return[target];case"negchild":case"numerself":case"powbase":return[target.objs[0]];case"denomself":return[target.objs[1]];case"negchildfacs":case"numerfacs":return getFacs(target.objs[0]);case"denomfacs":return getFacs(target.objs[1]);case"numernegchild":case"negchildnumerself":case"negchildpowbase":return[target.objs[0].objs[0]];case"denomnegchild":return[target.objs[1].objs[0]];case"negchilddenomself":return[target.objs[0].objs[1]];case"numernegchildfacs":case"negchildnumerfacs":return getFacs(target.objs[0].objs[0]);case"denomnegchildfacs":return getFacs(target.objs[1].objs[0]);case"negchilddenomfacs":return getFacs(target.objs[0].objs[1]);case"facpowbase":return[target.objs[sel].objs[0]];case"negchildfacpowbase":return[target.objs[0].objs[sel].objs[0]];case"negchildnumerpowbase":case"numernegchildpowbase":return[target.objs[0].objs[0].objs[0]];case"numernegchildfacpowbase":case"negchildnumerfacpowbase":return[target.objs[0].objs[0].objs[sel].objs[0]];default:if(target.type==="product"){return target.objs}else{return[target]}}};facPath=function(choice,sel){switch(choice){case"self":return[];case"negchild":case"numerself":case"powbase":return[0];case"negchildfacs":case"numerfacs":return[0,sel];case"numernegchild":case"negchildnumerself":case"negchildpowbase":return[0,0];case"numernegchildfacs":case"negchildnumerfacs":return[0,0,sel];case"denomself":return[1];case"denomfacs":return[1,sel];case"denomnegchild":return[1,0];case"denomnegchildfacs":return[1,0,sel];case"negchilddenomself":return[0,1];case"negchilddenomfacs":return[0,1,sel];case"facs":return[sel];case"facpowbase":return[sel,0];case"negchildfacpowbase":return[0,sel,0];case"negchildnumerfacpowbase":case"numernegchildfacpowbase":return[0,0,sel,0];default:throw"No facchoice!"}};toProdPath=function(choice){switch(choice){case"self":return"facs";case"powbase":return"facs";case"negchild":return"negchildfacs";case"numerself":return"numerfacs";case"denomself":return"denomfacs";case"negchildnumerself":return"negchildnumerfacs";case"negchilddenomself":return"negchilddenomfacs";case"numernegchild":case"numernegchildself":return"numernegchildfacs";case"denomnegchild":case"denomnegchildself":return"denomnegchildfacs";default:return choice}};toNegPath=function(choice){switch(choice){case"self":return"negchild";case"facs":return"negchildfacs";case"numerself":return"negchildnumerself";case"numerfacs":return"negchildnumerfacs";case"denomself":return"negchilddenomself";case"denomfacs":return"negchilddenomfacs";default:return choice}};toPosPath=function(choice){switch(choice){case"negchild":return"self";case"negchildfacs":return"facs";case"negchildnumerself":return"numerself";case"negchildnumerfacs":return"numerfacs";case"negchilddenomself":return"denomself";case"negchilddenomfacs":return"denomfacs";default:return choice}};getFacOptions=function(o,allowdenom,nonegdig,allowpowbase){var d,floor,name,opts,pre,_i,_len,_ref1;opts=["self"];if(o.type==="negation"&&!nonegdig){opts.push("negchild");pre="negchild";o=o.objs[0]}else{pre=""}if(o.type==="product"){opts.push(pre+"facs")}if(o.type==="power"&&allowpowbase){opts.push(pre+"powbase")}if(o.type==="fraction"){_ref1=[["numer",0],["denom",1]];for(_i=0,_len=_ref1.length;_i<_len;_i++){d=_ref1[_i];name=d[0],floor=d[1];if(!(floor&&!allowdenom)){opts.push(pre+name+"self");if(o.objs[floor].type==="product"){opts.push(pre+name+"facs")}if(!(pre||nonegdig)){if(o.objs[floor].type==="negation"){opts.push(name+"negchild")}if(o.objs[floor].type==="negation"&&o.objs[floor].objs[0].type==="product"){opts.push(name+"negchildfacs")}}}}}return opts};faclistGradeNumber=function(num,grade){var count,highest,highparts,n,rest,val,_ref1;grade=parseInt(grade.val||grade);highparts={};_ref1=faclistNumber(num);for(val in _ref1){count=_ref1[val];if(count>=grade){highparts[parseInt(val)]=Math.floor(count/grade)}}highest=1;for(val in highparts){count=highparts[val];highest*=Math.pow(val,count)}if(highest>1){rest=parseFloat(num.val)/Math.pow(highest,grade);if(rest>1){return function(){var _i,_results;_results=[];for(n=_i=0;0<=grade?_i<grade:_i>grade;n=0<=grade?++_i:--_i){_results.push(Num(highest))}return _results}().concat(Num(rest))}else{return null}}else{return null}};faclistNumber=function(num){var count,fac,_i,_len,_name,_ref1,_ref2;count={};_ref1=factoriseNumber(num);for(_i=0,_len=_ref1.length;_i<_len;_i++){fac=_ref1[_i];if((_ref2=count[_name=fac.val])==null){count[_name]=0}count[fac.val]++}return count};factoriseNumber=function(num,notself,pure){var div,facs,val;if(num.type==="negation"){num=num.objs[0]}if(num.type!=="number"){return[num]}val=parseFloat(num.val);div=1;facs=[];while(++div<Math.sqrt(val+1)){if(val/div===Math.floor(val/div)){facs.push(pure?div:Num(div));val=val/div;div=1}}facs.push(pure?val:Num(val));if(facs.length===1&&notself){return[]}else{return facs}};findCommonNumberFacs=function(num1,num2){var fac,newnum,res,_i,_len,_ref1;res=[];_ref1=factoriseNumber(num1);for(_i=0,_len=_ref1.length;_i<_len;_i++){fac=_ref1[_i];if(newnum=divideBy(num2,fac)){num2=newnum;res.push(fac)}}return res};findLargestCommonDivisor=function(num1,num2){var fac,val,_i,_len,_ref1;val=1;_ref1=findCommonNumberFacs(num1,num2);for(_i=0,_len=_ref1.length;_i<_len;_i++){fac=_ref1[_i];val*=parseFloat(fac.val)}return Num(val)};findSmallestCommonDivisor=function(num1,num2){var f,fac,facs1,facs2,fixed,n,otherfac,smallest,_i,_j,_k,_len,_len1,_len2,_ref1;facs1=factoriseNumber(num1,false,true);facs2=factoriseNumber(num2,false,true);findSmallestCommonDivisor;for(_i=0,_len=facs1.length;_i<_len;_i++){fac=facs1[_i];fixed=false;for(n=_j=0,_len1=facs2.length;_j<_len1;n=++_j){otherfac=facs2[n];if(!fixed){if(fac===otherfac){facs2.splice(n,1);fixed=true}}}}smallest=1;_ref1=facs1.concat(facs2);for(_k=0,_len2=_ref1.length;_k<_len2;_k++){f=_ref1[_k];smallest*=f}return Num(smallest)};divideBy=function(num,fac){var num1,num2,res;num1=parseFloat(num.type==="negation"?num.objs[0].val:num.val);num2=parseFloat(fac.type==="negation"?fac.objs[0].val:fac.val);res=num1/num2;if(res===Math.floor(res)){return Num(res)}else{return false}};exhumeFacTactic=function(_arg){var deps,fac,target;target=_arg.target,fac=_arg.fac,deps=_arg.deps;switch(target.type){case"product":return[{DONEAT:1}]}};getPotentialFacs=function(_arg){var deps,fac,pf,pos,pre,ret,target,_i,_len,_ref1;target=_arg.target,deps=_arg.deps,pre=_arg.pre;if(pre==null){pre=[]}ret=[{fac:target,method:pre}];switch(target.type){case"product":_ref1=target.objs;for(pos=_i=0,_len=_ref1.length;_i<_len;pos=++_i){fac=_ref1[pos];ret=ret.concat(deps.getPotentialFacs({target:fac,deps:deps,pre:pre.concat("fac"+pos)}))}return ret;case"negation":return ret.concat([{method:pre.concat("negger"),fac:Neg(one)}].concat(deps.getPotentialFacs({target:target.objs[0],deps:deps,pre:pre.concat("negee")})));case"fraction":return ret.concat(deps.getPotentialFacs({target:target.objs[0],deps:deps,pre:pre.concat("fracnumer")}).concat(deps.getPotentialFacs({target:target.objs[1],deps:deps,pre:pre.concat("fracdenom")})));case"power":return ret.concat(deps.getPotentialFacs({target:target.objs[0],deps:deps,pre:pre.concat("powbase")}));case"number":return ret.concat(function(){var _j,_len1,_ref2,_results;_ref2=deps.factoriseNumber(target,true);_results=[];for(_j=0,_len1=_ref2.length;_j<_len1;_j++){pf=_ref2[_j];_results.push({fac:pf,method:pre.concat("primefac")})}return _results}());default:return ret}};absorbProductFacs={info:{name:"absorbProductFacs",effect:"simplifying",opposite:"splitFacsToProduct",example:{str:"x*(y*2)*z",selection:[[1]]},tags:["product","productfactor","associativity","flatten"],lesson:"product101"},prints:{errors:["mustselectproduct"]},target:"product",selection:{filter:"product"},perform:function(_arg){var at,child,chosenfacs,fac,facs,marks,pos,target,tfacs,_i,_j,_len,_len1,_ref1,_ref2;target=_arg.target,_ref1=_arg.selection,chosenfacs=_ref1[0];tfacs=target.objs;facs=[];marks=[];at=0;for(pos=_i=0,_len=tfacs.length;_i<_len;pos=++_i){fac=tfacs[pos];if(__indexOf.call(chosenfacs,pos)>=0){_ref2=tfacs[pos].objs;for(_j=0,_len1=_ref2.length;_j<_len1;_j++){child=_ref2[_j];facs.push(child);marks.push([at++])}}else{at++;facs.push(fac)}}return{result:Prod(facs),beforemarks:function(){var _k,_len2,_results;_results=[];for(_k=0,_len2=chosenfacs.length;_k<_len2;_k++){pos=chosenfacs[_k];_results.push([pos])}return _results}(),aftermarks:marks}}};purgeOneFacs={info:{name:"purgeOneFacs",effect:"simplifying",opposite:"multiplyByOne",example:{str:"x*1*y",selection:[[1]]},tags:["product","number1","remove","neutralelement"],lesson:"product101"},target:"product",selection:{minleft:1,filter:"one"},perform:function(_arg){var deps,fac,facs,pos,sel,selection,target,_i,_len,_ref1;deps=_arg.deps,target=_arg.target,selection=_arg.selection;sel=selection[0];facs=[];_ref1=target.objs;for(pos=_i=0,_len=_ref1.length;_i<_len;pos=++_i){fac=_ref1[pos];if(__indexOf.call(sel,pos)<0){facs.push(fac)}}return{result:deps.collapseStubList(Prod(facs)),beforemarks:function(){var _j,_len1,_results;_results=[];for(_j=0,_len1=sel.length;_j<_len1;_j++){pos=sel[_j];_results.push([pos])}return _results}()}}};zeroFacProdToZero={info:{name:"zeroFacProdToZero",effect:"simplifying",opposite:"zeroToZeroFacProd",example:{str:"x*0*y",selection:[[1]]},tags:["product","number0","collapse","zeroprod"],lesson:"product101"},prints:{errors:["mustcontainzero","mustselectzero"]},target:{type:"product",validate:function(_arg){var deps,target;target=_arg.target,deps=_arg.deps;if(deps.contains(target,zero)){return OK}else{return Err("mustcontainzero")}}},selection:{max:1,filter:"zero"},perform:function(_arg){var selection;selection=_arg.selection;return{result:zero,beforemarks:selection}}};distribute={info:{name:"distribute",effect:"simplifying",example:{str:"x(y+z)",selection:[[1]]},tags:["product","sumfactor","distribution","sum"],lesson:"product102",opposite:"biSumToProd"},prints:{instructions:["choosefacsides"]},target:"product",selection:{max:1,filter:"sum"},direction:"choosefacside",perform:function(_arg){var direction,fac,facs,selection,sumpos,term,_ref1;selection=_arg.selection,direction=_arg.direction,_ref1=_arg.target,facs=_ref1.objs;sumpos=selection[0][0];fac=facs[sumpos===1?0:1];return{result:Sum(function(){var _i,_len,_ref2,_results;_ref2=facs[sumpos].objs;_results=[];for(_i=0,_len=_ref2.length;_i<_len;_i++){term=_ref2[_i];_results.push(Prod(direction==="right"?[term,fac]:[fac,term]))}return _results}())}}};multiplication={info:{name:"multiplication",effect:"simplifying",example:"2*3",opposite:"numToProd",tags:["product","naturalnum","merge","multiplication"],lesson:"product101"},prints:{errors:["mustbebiprod","mustbenumfacs"]},target:{type:"product",validate:function(_arg){var deps,fac1,fac2,fac3,_ref1,_ref2;deps=_arg.deps,_ref1=_arg.target,_ref2=_ref1.objs,fac1=_ref2[0],fac2=_ref2[1],fac3=_ref2[2];if(fac3){return Err("mustbebiprod")}else if(fac1.type!=="number"){return Err("mustbenumfacs",[0])}else if(fac2.type!=="number"){return Err("mustbenumfacs",[1])}else{return OK}}},perform:function(_arg){var fac1,fac2,_ref1;_ref1=_arg.target.objs,fac1=_ref1[0],fac2=_ref1[1];return{result:Num(parseFloat(fac1.val)*parseFloat(fac2.val)),beforemarks:[[0],[1]]}}};splitFacsToProduct={info:{name:"splitFacsToProduct",effect:"complicating",opposite:"absorbProductFacs",example:{str:"1*2*3*4*5",selection:[[1,4]]},tags:["product","productfactor","associativity"],lesson:"product101"},target:"product",selection:{minleft:1,min:2},perform:function(_arg){var chosen,deps,remaining,s,sel,selection,target,_ref1;deps=_arg.deps,target=_arg.target,selection=_arg.selection;sel=selection[0];_ref1=arrsplit(target.objs,function(o,pos){return __indexOf.call(sel,pos)>=0}),chosen=_ref1[0],remaining=_ref1[1];remaining.splice(sel[0],0,Prod(chosen));return{result:deps.collapseStubList(Prod(remaining)),beforemarks:function(){var _i,_len,_results;_results=[];for(_i=0,_len=sel.length;_i<_len;_i++){s=sel[_i];_results.push([s])}return _results}(),aftermarks:[[sel[0]]]}}};multiplyByOne={info:{name:"multiplyByOne",effect:"complicating",opposite:"purgeOneFacs",example:"x",tags:["factorise","number1","product","introduce","neutralelement"],lesson:"product101"},prints:{instructions:["choosefacside"]},target:"math",direction:"choosefacside",perform:function(_arg){var direction,target;target=_arg.target,direction=_arg.direction;if(direction==="right"){return{result:Product(target,Num(1)),aftermarks:[[1]]}}else{return{result:Product(Num(1),target),aftermarks:[[0]]}}}};zeroToZeroFacProd={info:{name:"zeroToZeroFacProd",effect:"complicating",opposite:"zeroFacProdToZero",example:{str:"0",argument:"x*0*y"},tags:["product","number0","factorise","zeroprod"],lesson:"product101"},prints:{errors:["mustcontainzero"],instructions:["enterzerofacprod"]},target:"zero",argument:{instruction:"enterzerofacprod",validate:function(_arg){var argument,deps;argument=_arg.argument,deps=_arg.deps;if(deps.contains(argument,zero)){return OK}else{return Err("mustcontainzero")}}},perform:function(_arg){var argument,deps,pos;deps=_arg.deps,argument=_arg.argument;return{result:argument,aftermarks:function(){var _i,_len,_ref1,_results;_ref1=deps.find(argument,zero);_results=[];for(_i=0,_len=_ref1.length;_i<_len;_i++){pos=_ref1[_i];_results.push([pos])}return _results}()}}};biSumToProd={info:{name:"biSumToProd",effect:"complicating",example:{str:"xy+zx",selection:[[0],[1]]},tags:["product","productterm","sum","factorise"],lesson:"product102",opposite:"distribute"},prints:{errors:["mustbebisum","bothtermsmustbeprod","mustselectequalfacs"],instructions:["choosefacside"]},target:{type:"sum",validate:function(_arg){var term1,term2,term3,_ref1;_ref1=_arg.target.objs,term1=_ref1[0],term2=_ref1[1],term3=_ref1[2];if(term3){return Err("mustbebisum")}else if(term1.type!=="product"){return Err("bothtermsmustbeprod",[0])}else if(term2.type!=="product"){return Err("bothtermsmustbeprod",[1])}else{return OK}}},direction:"choosefacside",selection:{max:1,questions:[{},{}],validate:function(_arg){var deps,first,second,target,term1,term2,_ref1,_ref2,_ref3,_ref4;deps=_arg.deps,_ref1=_arg.selection,_ref2=_ref1[0],first=_ref2[0],_ref3=_ref1[1],second=_ref3[0],target=_arg.target;_ref4=target.objs,term1=_ref4[0],term2=_ref4[1];if(!deps.equal(term1.objs[first],term2.objs[second])){return Err("mustselectequalfacs")}else{return OK}}},perform:function(_arg){var deps,direction,fac,sel1,sel2,target,term1,term1facs,term2,term2facs,_ref1,_ref2,_ref3,_ref4,_ref5,_ref6;deps=_arg.deps,direction=_arg.direction,_ref1=_arg.selection,_ref2=_ref1[0],sel1=_ref2[0],_ref3=_ref1[1],sel2=_ref3[0],target=_arg.target;_ref4=target.objs,_ref5=_ref4[0],term1facs=_ref5.objs,_ref6=_ref4[1],term2facs=_ref6.objs;fac=term1facs[sel1];term1=deps.collapseStubList(Prod(term1facs.filter(function(i,pos){return pos!==sel1})));term2=deps.collapseStubList(Prod(term2facs.filter(function(i,pos){return pos!==sel2})));if(direction==="right"){return{result:Product(Sum(term1,term2),fac),aftermarks:[[1]],beforemarks:[[0,sel1],[1,sel2]]}}else{return{result:Product(fac,Sum(term1,term2)),aftermarks:[[0]],beforemarks:[[0,sel1],[1,sel2]]}}}};numToProd={info:{name:"numToProd",effect:"complicating",example:{str:"6",argument:Product(Num(2),Num(3))},tags:["product","naturalnum","factorise","multiplication"],opposite:"multiplication",lesson:"factorise"},prints:{errors:["mustbesamevalueprod"],instructions:["entersamevalueprod"]},target:"number",argument:{instruction:"entersamevalueprod",type:"product",validate:function(o){var fac,prod,_i,_len,_ref1;prod=1;_ref1=o.argument.objs;for(_i=0,_len=_ref1.length;_i<_len;_i++){fac=_ref1[_i];prod*=o.deps.numberValue(fac)}if(prod!==o.deps.numberValue(o.target)){return Err("mustbesamevalueprod")}else{return OK}}},perform:function(_arg){var argument;argument=_arg.argument;return{result:argument}}};distributeFacs={info:{name:"distributeFacs",effect:"simplifying",example:{str:"x*y*(a+b)*z",selection:[[2],[0,3]]},uses:["splitFacsToProduct","distribute","absorbProductFacs"],tags:["product","sumfactor","distribution","sum"],lesson:"product102"},prints:{steps:["groupselfacs","groupfacsandsum","multinfacs","flattentermprod"],instructions:["choosefacside"]},target:"product",selection:{makefirstunique:true,questions:[{filter:"sum",max:1},{}]},direction:"choosefacside",perform:function(o){var facspos,num,path,sel,selfacs,selnum,sumpos,termnum,termnums,_i,_j,_k,_l,_len,_ref1,_ref2,_ref3;_ref1=o.selection,_ref2=_ref1[0],sumpos=_ref2[0],selfacs=_ref1[1];for(_i=0,_len=selfacs.length;_i<_len;_i++){sel=selfacs[_i];o.beforemark([sel])}termnums=o.target.objs[sumpos].objs.length;if(selfacs.length>1){o["do"]("splitFacsToProduct","groupselfacs",{selection:[selfacs]});sumpos-=selfacs.slice(1).filter(function(p){return p<sumpos}).length}facspos=selfacs[0];path=[];if(o.target.objs.length>2){o["do"]("splitFacsToProduct","groupfacsandsum",{selection:[[sumpos,facspos].sort()]});path=[Math.min(sumpos,facspos)]}o["do"]("distribute","multinfacs",{aim:path,selection:[[sumpos<facspos?0:1]]});if(selfacs.length>1){for(num=_j=0;0<=termnums?_j<termnums:_j>termnums;num=0<=termnums?++_j:--_j){o["do"]("absorbProductFacs","flattentermprod",{aim:path.concat([num]),selection:[[o.direction==="right"?1:0]]})}}for(termnum=_k=0;0<=termnums?_k<termnums:_k>termnums;termnum=0<=termnums?++_k:--_k){for(selnum=_l=0,_ref3=selfacs.length;0<=_ref3?_l<_ref3:_l>_ref3;selnum=0<=_ref3?++_l:--_l){o.aftermark(path.concat(termnum,selnum+(o.direction==="right"?1:0)))}}return o}};multiplyNumFacs={info:{name:"multiplyNumFacs",effect:"simplifying",example:{str:"2*x*8",selection:[[0,2]]},uses:["splitFacsToProduct","multiplication"],tags:["product","naturalnum","merge","multiplication"],lesson:"product101"},prints:{steps:["groupmultpair","multpair","multpaircollapseproduct"]},target:"product",selection:{min:2,filter:"number"},perform:function(o){var n,s,sel,_i,_ref1;sel=o.selection[0].sort(function(a,b){if(a>b){return 1}else{return-1}});for(n=_i=_ref1=sel.length-1;_ref1<=1?_i<=1:_i>=1;n=_ref1<=1?++_i:--_i){if(o.target.objs.length>2){o["do"]("splitFacsToProduct","groupmultpair",{selection:[[sel[n-1],sel[n]]]});o["do"]("multiplication","multpair",{aim:[sel[n-1]]})}else{o["do"]("multiplication","multpaircollapseproduct")}}if(o.target.type==="product"){o.aftermark([[sel[0]]])}return o.beforemark(function(){var _j,_len,_results;_results=[];for(_j=0,_len=sel.length;_j<_len;_j++){s=sel[_j];_results.push([s])}return _results}())}};extractFacsFromTerms={info:{name:"extractFacsFromTerms",effect:"complicating",example:{str:"xy+x+y+zyx",selection:[[0],[0],[],[]],choices:["facs","self","none","none"]},uses:["extractFacsFromExpression","makeEqual","splitTermsToSum","biSumToProd","absorbSumTerms"],tags:["factorise","product","sum"],lesson:"factorise"},prints:{errors:["mustselectkindredfacs"],instructions:["choosefacside"],steps:["extractfacsfromterm","makefacsequal","groupbereftterms","grouptargetpair","extractingselpair","groupextractedterms"]},direction:"choosefacside",target:"sum",selection:{totalmin:2,or0:true,questions:function(_arg){var choices,deps,n,target,term,_i,_len,_ref1,_results;target=_arg.target,deps=_arg.deps,choices=_arg.choices;_ref1=target.objs;_results=[];for(n=_i=0,_len=_ref1.length;_i<_len;n=++_i){term=_ref1[n];_results.push({options:deps.getFacs(target.objs[n],choices!=null?choices[n]:void 0)})}return _results}},choices:{questions:function(o){var n,ret,_i,_ref1;ret=[];for(n=_i=0,_ref1=o.target.objs.length;0<=_ref1?_i<_ref1:_i>_ref1;n=0<=_ref1?++_i:--_i){ret.push({options:["none"].concat(o.deps.getFacOptions(o.target.objs[n],true,false,true))})}return ret}},validate:function(o){var chosen,facpos,prod,sel,termfacs,termnum,_i,_j,_len,_len1,_ref1,_ref2;chosen=[];_ref1=o.selection;for(termnum=_i=0,_len=_ref1.length;_i<_len;termnum=++_i){sel=_ref1[termnum];if(!sel.length){continue}termfacs=o.deps.getFacs(o.target.objs[termnum],o.choices[termnum]);chosen.push(o.deps.collapseStubList(Prod(function(){var _j,_len1,_results;_results=[];for(_j=0,_len1=sel.length;_j<_len1;_j++){facpos=sel[_j];_results.push(termfacs[facpos])}return _results}())))}_ref2=chosen.slice(1);for(_j=0,_len1=_ref2.length;_j<_len1;_j++){prod=_ref2[_j];if(o.deps.isKindredSpirits(mixin({obj1:prod,obj2:chosen[0]},o)).result===false){return Err("mustselectkindredfacs")}}return OK},perform:function(o){var addr,bereft,blueprint,blueprintterm,choices,dir,facpositions,n,others,pos,s,sel,sels,subaddr,termnum,_i,_j,_len,_len1,_ref1;bereft=[];others=[];facpositions=[];dir=o.direction;pos=dir==="right"?1:0;blueprint=void 0;sels=o.selection;choices=o.choices;for(termnum=_i=0,_len=sels.length;_i<_len;termnum=++_i){sel=sels[termnum];if(sel&&sel.length){bereft.push(termnum);_ref1=sels[termnum];for(_j=0,_len1=_ref1.length;_j<_len1;_j++){s=_ref1[_j];o.beforemark([termnum].concat(o.deps.facPath(choices[termnum],s)))}o.doIf("extractFacsFromExpression","extractfacsfromterm",{aim:[termnum],selection:[sels[termnum]],choices:[choices[termnum]],direction:dir,REPORT:true});if(!blueprint){blueprint=o.target.objs[termnum].objs[pos];blueprintterm=termnum}else{if(!o.deps.equal(blueprint,o.target.objs[termnum].objs[pos])){o["do"]("makeEqual","makefacsequal",{hunt:[[blueprintterm,pos],[termnum,pos]]})}}}else{others.push(termnum)}}if(others.length){o["do"]("splitTermsToSum","groupbereftterms",{selection:[bereft]});addr=[bereft[0]]}else{addr=[]}n=0;while(n<bereft.length-1){subaddr=n<bereft.length-2?[0]:[];if(n<bereft.length-2){o["do"]("splitTermsToSum","grouptargetpair",{aim:addr,selection:[[0,1]]})}o["do"]("biSumToProd","extractingselpair",{aim:addr.concat(subaddr),direction:dir,selection:[[pos],[pos]]});if(n){o["do"]("absorbSumTerms","groupextractedterms",{selection:[[0]],aim:addr.concat(subaddr.concat([dir==="right"?0:1]))})}n++}return o.aftermark([addr.concat(dir==="right"?1:0)])}};mergeFracFacs={info:{name:"mergeFracFacs",effect:"simplifying",example:{str:"(a/b)*x*(c/d)",selection:[[0,2]]},uses:["splitFacsToProduct","biFracProdToBiProdFrac","absorbProductFacs","purgeOneFacs"],tags:["fractionfactor","product","merge","flatten"],lesson:"fraction1015"},prints:{steps:["groupfracpair","mergefracpair","flattenmergednumer","flattenmergeddenom","removeonenumers"]},target:"product",selection:{min:2,filter:"fraction"},perform:function(o){var n,partpath,pos,sel,_i,_j,_len,_len1,_ref1;sel=o.selection[0];for(_i=0,_len=sel.length;_i<_len;_i++){pos=sel[_i];o.beforemark([pos])}if(sel.length<o.target.objs.length){o.aftermark(sel[0])}sel=sel.slice(0).reverse();_ref1=sel.slice(0,-1);for(n=_j=0,_len1=_ref1.length;_j<_len1;n=++_j){pos=_ref1[n];if(o.target.objs.length!==2){partpath=[sel[n+1]];o["do"]("splitFacsToProduct","groupfracpair",{selection:[[sel[n+1],sel[n]]]})}else{partpath=[]}o["do"]("biFracProdToBiProdFrac","mergefracpair",{aim:partpath});if(n!==0){o["do"]("absorbProductFacs","flattenmergednumer",{aim:partpath.concat(0),selection:[[1]]});o["do"]("absorbProductFacs","flattenmergeddenom",{aim:partpath.concat(1),selection:[[1]]})}}o["try"]("purgeOneFacs","removeonenumers",{aim:o.target.type==="fraction"?[0]:[sel.reverse()[0],0]});return o}};multiplyPosNegNum={info:{name:"multiplyPosNegNum",effect:"simplifying",example:{str:"2*x*-3",selection:[[0],[2]]},uses:["multiplyNumFacs","expandNegFacs","negOneFacBiProdToNeg","collapseNegOneFac"],tags:["product","integer","merge","multiplication"],lesson:"negation102"},prints:{steps:["firstexpandthenegnum","thenmultiplynums","finallynegifyanswer"]},target:"product",selection:{max:1,makefirstunique:true,questions:[{filter:"number"},{filter:"negnum"}]},perform:function(o){var neg,negone,pos,resultpos,_ref1,_ref2,_ref3;_ref1=o.selection,_ref2=_ref1[0],pos=_ref2[0],_ref3=_ref1[1],neg=_ref3[0];o.beforemark(o.selection);o["do"]("expandNegFacs","firstexpandthenegnum",{selection:[[neg]],direction:"right"});negone=neg+1;if(neg<pos){pos++}o["do"]("multiplyNumFacs","thenmultiplynums",{selection:[[neg,pos].sort()]});if(pos<neg){negone--}resultpos=Math.min(neg,pos);if(o.target.objs.length===2){o["do"]("negOneFacBiProdToNeg","finallynegifyanswer")}else{o["do"]("collapseNegOneFac","finallynegifyanswer",{selection:[[negone],[resultpos]]});o.aftermark([Math.min(negone,resultpos)])}return o}};multiplyAllNumFacs={info:{name:"multiplyAllNumFacs",effect:"simplifying",example:{str:"2*x*3*-4",selection:[[0,2,3]]},uses:["collapseTwoNegFacs","multiplyNumFacs","multiplyPosNegNum"],tags:["product","integer","merge","multiplication"],lesson:"negation102"},prints:{steps:["collapsethenegs","wemultiplyallpositivenumbers","wemultiplyposandnegnumbers"]},target:"product",selection:{min:2,filter:"numeric"},perform:function(o){var negnums,pos,sel,_i,_len,_ref1;_ref1=o.selection[0];for(_i=0,_len=_ref1.length;_i<_len;_i++){sel=_ref1[_i];o.beforemark([sel])}o.aftermark([o.selection[0].sort()[0]]);negnums=function(){var _j,_k,_len1,_ref2,_ref3,_results,_results1;_ref3=function(){_results1=[];for(var _k=0,_ref2=o.target.objs.length;0<=_ref2?_k<_ref2:_k>_ref2;0<=_ref2?_k++:_k--){_results1.push(_k)}return _results1}.apply(this).filter(function(p){return o.target.objs[p].type==="negation"&&o.target.objs[p].objs[0].type==="number"});_results=[];for(_j=0,_len1=_ref3.length;_j<_len1;_j++){pos=_ref3[_j];_results.push(pos)}return _results}();if(negnums.length>=2){o["do"]("collapseTwoNegFacs","collapsethenegs",{selection:[negnums.slice(0,2)]})
}o["try"]("multiplyNumFacs","wemultiplyallpositivenumbers");return o["try"]("multiplyPosNegNum","wemultiplyposandnegnumbers")}};mergeSumFacs={info:{name:"mergeSumFacs",effect:"simplifying",example:{str:"(x+y)(x-y)",selection:[[0,1]]},uses:["distributeFacs","distribute","absorbProductFacs","absorbSumTerms"],tags:["sumfactor","merge","product","distribution"],lesson:"product102"},prints:{instructions:["SELsumfacstomerge"],steps:["multin","multinside","evenoutprod","evenoutpart"]},selection:{instruction:"SELsumfacstomerge",min:2,filter:"sum"},target:"product",perform:function(o){var base,newtermnum,path,sel,sumtermpath,target,termnum,_i,_len,_ref1;sel=o.selection[0];base=sel[0];_ref1=sel.slice(1).reverse();for(_i=0,_len=_ref1.length;_i<_len;_i++){target=_ref1[_i];o["do"]("distributeFacs","multin",{selection:[[base],[target]],direction:"right"});sumtermpath=o.target.type==="sum"?[]:[0];termnum=o.deps.lookUp(o.target,sumtermpath).objs.length;while(termnum--){path=sumtermpath.concat(termnum);o["do"]("distribute","multinside",{aim:path,selection:[[1]]});newtermnum=o.deps.lookUp(o.target,path).objs.length;while(newtermnum--){o["try"]("absorbProductFacs","evenoutprod",{aim:path.concat(newtermnum)})}}o["try"]("absorbSumTerms","evenoutpart",{aim:sumtermpath})}return o}};extractFacsFromDenomAndPowify={info:{name:"extractFacsFromDenomAndPowify",effect:"complicating",example:{str:"2/(3x)",choices:["facs"],selection:[[1]]},tags:["factorise","fraction"],uses:["extractFacsFromFrac","oneNumerFracToNegExpPow","powBasePowToProdExp","negOneFacBiProdToNeg","collapseDoubleNeg"],lesson:"powernegexp"},target:{type:"fraction"},choices:{instruction:"CHOdenomfactac",options:function(o){var frac;frac=o.target.type==="fraction"?o.target:o.target.objs[0];return o.deps.getFacOptions(frac.objs[1],false,false,true)}},direction:"DIRsideforextractedfacs",selection:{instruction:"SELfactoextractfromdenom",from:function(o){var frac;frac=o.target.type==="fraction"?o.target:o.target.objs[0];return o.deps.getFacs(frac.objs[1],o.choices[0])}},validate:function(o){var sel;sel=o.selection[0];if(o.choices[0]==="facs"&&o.target.objs[1].objs.length===2&&sel.length===1&&(o.direction==="right"&&sel[0]===1||o.direction!=="right"&&sel[0]===0)){return Err("facalreadyatdesiredlocation")}else{return OK}},perform:function(o){var choice,dirnum,sel,sels,_i,_len;choice=o.choices[0];sels=o.selection[0];for(_i=0,_len=sels.length;_i<_len;_i++){sel=sels[_i];o.beforemark([1].concat(o.deps.facPath(choice,sel)))}dirnum=o.direction==="right"?1:0;o["do"]("extractFacsFromFrac","extractfacsfromfrac",{choices:["self",choice],selection:[[],sels],direction:o.direction});o["do"]("oneNumerFracToNegExpPow","fractopow",{aim:[dirnum]});o["try"]("powBasePowToProdExp","morenegbit",{aim:[dirnum]});o["try"]("negOneFacBiProdToNeg","morenegbit",{aim:[dirnum,1]});o["try"]("collapseDoubleNeg","collapsedoubleneg",{aim:[dirnum,1]});return o.aftermark([dirnum])}};extractFacsFromExpression={info:{name:"extractFacsFromExpression",effect:"complicating",example:{str:"(-(xz))/y",choices:["numernegchildfacs"],selection:[[1]]},uses:["multiplyByOne","negToNegOneFacProd","flattenNegProd","extractFacsFromFrac","extractFacsFromDenomAndPowify","absorbProductFacs","collapseNegOneFac","splitFacsToProduct","rearrangeFacs","collapseDoubleNeg","extractPartFromPow"],tags:["factorise"],circle:["extractFacsFromDenomAndPowify","extractPartFromPow","extractFacsFromFrac"],lesson:"factorise"},prints:{instructions:["DIRsideforextractedfacs","CHOexpressionextracttactic","SELfacstoextractfromexpression"],steps:["maketoproduct","removeneg","extractfacsfromfrac","integrateresult","putnegback","groupselfacs","groupotherfacs","moveordertomatch"],errors:["facalreadyatdesiredlocation"]},target:"math",direction:"DIRsideforextractedfacs",choices:{instruction:"CHOexpressionextracttactic",options:function(o){return o.deps.getFacOptions(o.target,true,false,true)}},selection:{instruction:"SELfacstoextractfromexpression",from:function(o){return o.deps.getFacs(o.target,o.choices[0])}},validate:function(o){var sel;sel=o.selection[0];if(o.choices[0]==="facs"&&o.target.objs.length===2&&sel.length===1&&(o.direction==="right"&&sel[0]===1||o.direction!=="right"&&sel[0]===0)){return Err("facalreadyatdesiredlocation")}else{return OK}},perform:function(o){var choice,dir,dirnum,extractchoice,floor,leaveneg,otherdir,otherdirnum,rest,s,sel,_i,_j,_len,_ref1,_ref2,_results;leaveneg=0;sel=o.selection[0];choice=o.choices[0];_ref1=o.direction==="right"?["right","left",1,0]:["left","right",0,1],dir=_ref1[0],otherdir=_ref1[1],dirnum=_ref1[2],otherdirnum=_ref1[3];for(_i=0,_len=sel.length;_i<_len;_i++){s=sel[_i];o.beforemark(o.deps.facPath(choice,s))}switch(choice){case"self":o["do"]("multiplyByOne","maketoproduct",{direction:otherdir});sel=[dirnum];break;case"negchild":o["do"]("negToNegOneFacProd","removeneg",{direction:otherdir});sel=[dirnum];break;case"negchildfacs":o["do"]("flattenNegProd","removeneg",{direction:"right"});leaveneg=1;break;case"numerself":case"numerfacs":case"numernegchild":case"numernegchildfacs":case"negchildnumerself":case"negchildnumerfacs":case"denomself":case"denomfacs":case"denomnegchild":case"denomnegchildfacs":case"negchilddenomself":case"negchilddenomfacs":extractchoice=choice;if(extractchoice.slice(0,8)==="negchild"){extractchoice=extractchoice.slice(8);o["do"]("negToNegOneFacProd","removeneg",{direction:"right"});leaveneg=1}floor=extractchoice.slice(0,5);extractchoice=extractchoice.slice(5);if(floor==="numer"){o["do"]("extractFacsFromFrac","extractfacsfromfrac",{aim:leaveneg?[0]:[],choices:[extractchoice,"self"],selection:[sel,[]],direction:dir})}else{o["do"]("extractFacsFromDenomAndPowify","digfromdenom",{aim:leaveneg?[0]:[],choices:[extractchoice],selection:[sel],direction:dir})}if(leaveneg){o["do"]("absorbProductFacs","integrateresult",{selection:[[0]]});o["do"]("collapseNegOneFac","putnegback",{selection:[[2],[otherdirnum]]});leaveneg=0}sel=[dirnum];break;case"powbase":o["do"]("extractPartFromPow","extractfacfrompowbase",{direction:dir,argument:one});break;case"facpowbase":o["do"]("extractPartFromPow","extractfacfrompowbase",{aim:[sel[0]],direction:dir,argument:one});o["do"]("absorbProductFacs","integrateresult",{selection:[[sel[0]]]});break;case"negchildpowbase":o["do"]("negToNegOneFacProd","removeneg",{direction:"right"});o["do"]("extractPartFromPow","extractfacfrompowbase",{aim:[0],direction:dir,argument:one});o["do"]("absorbProductFacs","integrateresult",{selection:[[sel[0]]]});leaveneg=1;break;case"negchildfacpowbase":o["do"]("flattenNegProd","removeneg",{direction:"right"});o["do"]("extractPartFromPow","extractfacfrompowbase",{aim:[0,sel[0]],direction:dir,argument:one});o["do"]("absorbProductFacs","integrateresult",{aim:[0],selection:[[sel[0]]]});leaveneg=1;break;default:if(sel.length===o.target.objs.length){o["do"]("multiplyByOne","maketoproduct",{direction:otherdir});sel=[dirnum]}}if(sel.length>1&&sel.length<o.target.objs.length){o["do"]("splitFacsToProduct","groupselfacs",{selection:[sel]});sel=[sel[0]]}rest=function(){_results=[];for(var _j=0,_ref2=o.target.objs.length-leaveneg;0<=_ref2?_j<_ref2:_j>_ref2;0<=_ref2?_j++:_j--){_results.push(_j)}return _results}.apply(this).filter(function(pos){return pos!==sel[0]});if(o.target.objs.length-leaveneg>2){o["do"]("splitFacsToProduct","groupotherfacs",{selection:[rest]});sel=rest[0]===0?[1]:[0]}if(leaveneg){o["do"]("collapseNegOneFac","putnegback",{selection:[[2],[rest[0]]]})}if(dirnum!==sel[0]){o["do"]("rearrangeFacs","moveordertomatch",{rearrange:[o.target.objs[1],o.target.objs[0]]})}return o.aftermark([dirnum])}};extractNumFacFromExpression={info:{name:"extractNumFacFromExpression",effect:"complicating",example:{str:"x",argument:three},uses:["multiplyByOne","divideByOne","extractFacsFromExpression","moveNegBetweenFacs","numToProd","absorbProductFacs","moveNegFromProdToFac","prolongFraction","purgeOneFacs","extractFacsFromFrac"],tags:["factorise","integer"],lesson:"factorise"},prints:{instructions:["ARGenterfactoexpose","DIRselectsideforexposedfac"],errors:["ARGcannotexposefaczero"],steps:["multonotherside","dividingbyone"]},target:"math",argument:{type:"numeric",instruction:"ARGenterfactoexpose",validate:function(o){var arg;arg=o.deps.digIfNeg(o.argument);if(o.deps.numberValue(arg)===0){return Err("ARGcannotexposefaczero")}else{return OK}}},direction:"DIRselectsideforexposedfac",perform:function(o){var arg,check,dir,dirword,m,negpath,oppdir,oppdirword,pathto,poss,possibs,_i,_j,_k,_l,_len,_len1,_len2,_len3,_ref1;arg=o.argument;_ref1=o.direction==="right"?[1,0,"right","left"]:[0,1,"left","right"],dir=_ref1[0],oppdir=_ref1[1],dirword=_ref1[2],oppdirword=_ref1[3];if(o.deps.equal(arg,o.target)){return o["do"]("multiplyByOne","multonotherside",{direction:oppdirword})}possibs=o.deps.getFacPossibilities({obj:o.target,oneatatime:true,allowpowbase:true,deps:o.deps});for(_i=0,_len=possibs.length;_i<_len;_i++){poss=possibs[_i];if(o.deps.equal(arg,poss[2])){return o.doIf("extractFacsFromExpression","liftingoutarg",{choices:[poss[0]],selection:[poss[1]],direction:dirword})}}for(_j=0,_len1=possibs.length;_j<_len1;_j++){poss=possibs[_j];if(!(poss[2].type==="negation"&&o.deps.equal(arg,poss[2].objs[0]))){continue}o.doIf("extractFacsFromExpression","liftingoutnegarg",{choices:[poss[0]],selection:[poss[1]],direction:dirword});negpath=o.deps.facPath(poss[0],poss[1][0]);o["do"]("moveNegBetweenFacs","moveawayneg",{selection:[[dir],[oppdir]]});return o}for(_k=0,_len2=possibs.length;_k<_len2;_k++){poss=possibs[_k];m=poss[2];if(m.type==="number"){check=o.deps.divideCheck({obj1:m,obj2:arg,deps:o.deps});if(check.found){pathto=o.deps.facPath(poss[0],poss[1][0]);o["do"]("numToProd","factorisingnumber",{aim:pathto,argument:Prod(dir?[check.minrest,arg]:[arg,check.minrest])});o.doIf("absorbProductFacs","flattening",{aim:pathto.slice(0,-1),selection:[poss[1]]});poss[0]=o.deps.toProdPath(poss[0]);poss[1][0]+=dir;pathto=o.deps.facPath(poss[0],poss[1][0]);return o.doIf("extractFacsFromExpression","liftingoutfreedarg",{choices:[poss[0]],selection:[poss[1]],direction:dirword})}}}for(_l=0,_len3=possibs.length;_l<_len3;_l++){poss=possibs[_l];m=poss[2];if(m.type==="negation"&&m.objs[0].type==="number"){check=o.deps.divideCheck({obj1:m.objs[0],obj2:arg,deps:o.deps});if(check.found){pathto=o.deps.facPath(poss[0],poss[1][0]);o["do"]("numToProd","factorisingnegnumber",{aim:pathto.concat([0]),argument:Prod(dir?[check.minrest,arg]:[arg,check.minrest])});o["do"]("moveNegFromProdToFac","negtootherfac",{aim:pathto,selection:[[oppdir]]});o.doIf("absorbProductFacs","flattening",{aim:pathto.slice(0,-1),selection:[poss[1]]});poss[0]=o.deps.toProdPath(poss[0]);poss[1][0]+=dir;pathto=o.deps.facPath(poss[0],poss[1][0]);o.doIf("extractFacsFromExpression","liftingoutfreedarg",{choices:[poss[0]],selection:[poss[1]],direction:dirword});return o}}}if(o.target.type!=="fraction"){o["do"]("divideByOne","maketofraction")}o["do"]("prolongFraction","prolonging",{argument:arg,direction:"left"});o.doIf("purgeOneFacs","fixdenom",{aim:[1],selection:[[1]]});o["do"]("extractFacsFromFrac","liftingoutcreatedprolfac",{selection:[[0],[]],choices:["facs","self"],direction:dirword});return o}};exposeFacInNumber={info:{name:"exposeFacInNumber",effect:"complicating",example:{str:"6",argument:three},uses:["negToNegOneFacProd","addTwoNegOneFacsToExpression","numToProd","absorbProductFacs","collapseNegOneFac"],tags:["naturalnum","factorise","split","multiplication"],lesson:"factorise"},prints:{instructions:["selectsideforexposedfac","enterfactoexpose"],errors:["cannotexposefaczero","argumentdoesnotdividetarget"],steps:["denegifytargettooperate","factorisetargetnumbertoexposefac","flattenprodwithprodandneg","putnegoverexposedfac","putnegbackoverremain","addnegonestousefornegating"]},target:"numeric",argument:{type:"numeric",instruction:"enterfactoexpose",validate:function(o){var arg,targ;arg=o.deps.digIfNeg(o.argument);targ=o.deps.digIfNeg(o.target);if(o.deps.numberValue(arg)===0){return Err("cannotexposefaczero")}else if(!o.deps.divideCheck(mixin({obj1:targ,obj2:arg},o)).found){return Err("argumentdoesnotdividetarget")}else{return OK}}},direction:"selectsideforexposedfac",perform:function(o){var arg,argplace,dir,negarg,negtarget,remain,remainplace;dir=o.direction;arg=o.argument;negarg=arg.type==="negation";arg=o.deps.digIfNeg(arg);remain=o.deps.divideCheck(mixin({obj1:o.deps.digIfNeg(o.target),obj2:arg},o)).minrest;argplace=dir==="right"?1:0;remainplace=dir==="right"?0:1;if(o.target.type==="negation"){negtarget=true;o["do"]("negToNegOneFacProd","denegifytargettooperate",{direction:"right"})}o["do"]("numToProd","factorisetargetnumbertoexposefac",{aim:negtarget?[0]:[],argument:Prod(dir==="right"?[remain,arg]:[arg,remain])});if(negtarget){o["do"]("absorbProductFacs","flattenprodwithprodandneg",{selection:[[0]]});if(negarg){o["do"]("collapseNegOneFac","putnegoverexposedfac",{selection:[[2],[argplace]]})}else{o["do"]("collapseNegOneFac","putnegoverremain",{selection:[[2],[remainplace]]})}}else if(negarg){o["do"]("addTwoNegOneFacsToExpression","addnegonestousefornegating",{direction:"right"});o["do"]("collapseNegOneFac","putnegoverexposedfac",{selection:[[3],[argplace]]});o["do"]("collapseNegOneFac","putnegoverremain",{selection:[[2],[remainplace]]})}return o.aftermark([argplace])}};collapseSumBaseSquare={info:{name:"collapseSumBaseSquare",effect:"simplifying",example:"(x+3)2",tags:["product","power","sumbase","flatten","exponent2"],uses:["collapseSumBasePow","multiplyAllNumFacs","mergeSameBaseFacs","addExpressions","absorbProductFacs"],opposite:"backwardsQuadrify",lesson:"power102"},target:{type:"power",validate:function(o){if(o.target.objs[0].type==="sum"&&o.target.objs[0].objs.length===2&&o.deps.equal(o.target.objs[1],two)){return OK}else{return Err("TARexpmustbetwo")}}},perform:function(o){var term,_i;o["do"]("collapseSumBasePow","firsttosum");o["try"]("addExpressions","addsameys");for(term=_i=0;_i<=3;term=++_i){o["try"]("absorbProductFacs","flattenterm",{aim:[term]});o["try"]("multiplyAllNumFacs","multterm",{aim:[term]});o["try"]("mergeSameBaseFacs","smackfacs",{aim:[term]})}return o}};zeroFacExprToZero={info:{name:"zeroFacExprToZero",effect:"simplifying",example:{str:"-((3*0)/2)",selection:[[1]],choices:["negchildnumerfacs"]},tags:["number0","collapse"],uses:["extractFacsFromExpression","zeroFacProdToZero"],lesson:"factorise"},prints:{instructions:["CHOzerofactactic","SELzerofac"]},choices:{instruction:"CHOzerofactactic",options:function(o){return o.deps.getFacOptions(o.target,false,false,true)}},selection:{instruction:"SELzerofac",from:function(o){return o.deps.getFacs(o.target,o.choices[0])}},auto:function(o){var analysis,facposs,_i,_len;analysis=o.deps.getFacPossibilities(mixin({obj:o.target,oneatatime:true,allowpowbase:true},o));for(_i=0,_len=analysis.length;_i<_len;_i++){facposs=analysis[_i];if(!(facposs[0]!=="self"&&o.deps.equal(facposs[2],zero))){continue}console.log("OMG OMG OMG");printObj(facposs[3]);return{choices:[facposs[0]],selection:[facposs[1]]}}return Err("AUTOnozerofac")},perform:function(o){o.beforemark(o.deps.facPath(o.choices[0],o.selection[0][0]));o["try"]("zeroFacProdToZero","tozerodirectly");o.doIf("extractFacsFromExpression","weliftzeroout",{selection:o.selection,choices:o.choices,direction:"left"});return o.doIf("zeroFacProdToZero","thentozero",{selection:[[0]]})}};if(typeof exports==="undefined"){exportTo=this.CATS.math}else{exportTo=exports}funcs={extractFacsFromDenomAndPowify:extractFacsFromDenomAndPowify,zeroFacExprToZero:zeroFacExprToZero,collapseSumBaseSquare:collapseSumBaseSquare,faclistGradeNumber:faclistGradeNumber,faclistNumber:faclistNumber,extractNumFacFromExpression:extractNumFacFromExpression,mergeSumFacs:mergeSumFacs,toPosPath:toPosPath,toNegPath:toNegPath,getUnitFacOpts:getUnitFacOpts,numToPow:numToPow,toProdPath:toProdPath,extractFacsFromExpression:extractFacsFromExpression,exposeFacInNumber:exposeFacInNumber,multiplyAllNumFacs:multiplyAllNumFacs,findSmallestCommonDivisor:findSmallestCommonDivisor,getFacPossibilities:getFacPossibilities,getCollectOpts:getCollectOpts,getExtractInstruction:getExtractInstruction,multiplyPosNegNum:multiplyPosNegNum,multiplyNumFacs:multiplyNumFacs,getPotentialFacs:getPotentialFacs,exhumeFacTactic:exhumeFacTactic,facPath:facPath,divideBy:divideBy,getFacOptions:getFacOptions,numToProd:numToProd,multiplication:multiplication,findLargestCommonDivisor:findLargestCommonDivisor,findCommonNumberFacs:findCommonNumberFacs,factoriseNumber:factoriseNumber,extractFacsFromTerms:extractFacsFromTerms,biSumToProd:biSumToProd,distributeFacs:distributeFacs,distribute:distribute,getFacs:getFacs,mergeFracFacs:mergeFracFacs,absorbProductFacs:absorbProductFacs,splitFacsToProduct:splitFacsToProduct,purgeOneFacs:purgeOneFacs,multiplyByOne:multiplyByOne,zeroFacProdToZero:zeroFacProdToZero,zeroToZeroFacProd:zeroToZeroFacProd};for(k in funcs){v=funcs[k];exportTo[k]=v}}).call(this);