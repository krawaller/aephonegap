CATS.texts.tools={expandAbsPartInRelAndFix:{id:282,sv:{name:"expandera absolutled och förenkla",explanation:"För att utreda en  <span>relation</span> där ena ledet är ett  <span>absolutbelopp</span> så expanderar vi  <span>absolutbeloppet</span> och städar i den uppkomna  <span>logiken</span>. ",targets:"en  <span>relation</span> där ena ledet är ett  <span>absolutbelopp</span> ",returns:"en  <span>disjunktion</span>,  <span>konjunktion</span> eller  <span>relation</span> med  <span>plus minus</span>, beroende på ursprungsrelationens typ ",effect:"Detta är en  <span>förenklande operation</span>, för oavsett om vi lyckas städa eller inte så har vi inte längre något  <span>absolutbelopp</span>. ",steps:{expandabsineq:"Vi expanderar  <span>absolutbeloppet</span>.",expandabsincombsmall:"Vi expanderar  <span>absolutbeloppet</span> i  <span>jämförelsen</span>. Eftersom  <span>absolutbeloppet</span> var mindre så blir resultatet en  <span>konjunktion</span>.",expandabsincombbig:"Vi expanderar  <span>absolutbeloppet</span> i  <span>jämförelsen</span>. Eftersom  <span>absolutbeloppet</span> var större så blir resultatet en  <span>disjunktion</span>.",fixzerocond:"Vi utvärderar huruvida det andra ledet är större än  <span>0</span>.",cleanfromzerocond:"Det andra ledet var större än  <span>0</span>, och vi  <span>tar bort</span> sanningsresten av den  <span>jämförelsen</span>.",thiswenttoshit:"Det andra ledet var mindre än  <span>0</span>, vilket gör hela  <span>konjunktionen</span>  <span>falsk</span>!"}},en:{name:"expand asbolute value in relation and simplify",explanation:"In order to examine a  <span>relation</span> where one side is an asbolute value, we expand the  <span>absolute value</span> and clean up the created  <span>logic</span>. ",targets:"a  <span>relation</span> where one side is an  <span>absolute value</span> ",returns:"a  <span>disjunction</span>,  <span>conjunction</span> or  <span>relation</span> with  <span>plus minus</span>, depending on the type of the original  <span>relation</span> ",effect:"This is a  <span>simplifying operation</span>, since no matter if we manage to clean up the  <span>logic</span> or not, we still got rid of the  <span>absolute value</span>. ",steps:{expandabsineq:"We expand the  <span>absolute value</span>.",expandabsincombsmall:"We expand the  <span>absolute value</span> in the  <span>comparison</span>. Because the  <span>absolute value</span> was smaller, the result is a  <span>conjunction</span>.",expandabsincombbig:"We expand the  <span>absolute value</span> in the  <span>comparison</span>. Because the  <span>absolute value</span> was bigger, the result is a  <span>disjunction</span>.",fixzerocond:"We evaluate whether or not the other side is bigger than  <span>0</span>.",cleanfromzerocond:"It wasn't smaller than  <span>0</span>, so we can  <span>remove</span> the truth residue of the  <span>comparison</span>.",thiswenttoshit:"The other side was smaller than  <span>0</span>, which makes the whole  <span>conjunction</span>  <span>false</span>!"}}},expandAbsInCombSmaller:{id:281,sv:{name:"jämför med mindre absolutbelopp",explanation:"Om ett  <span>uttryck</span> är större än ett  <span>absolutbelopp</span> så gäller tre saker: För det första så är  <span>uttrycket</span> större än innehållet i  <span>absolutbeloppet</span>. För det andra så är en  <span>negation</span> av  <span>uttrycket</span> mindre än innehållet i  <span>absolutbeloppet</span>. För det tredje så är  <span>uttrycket</span> större än  <span>0</span>, eftersom  <span>absolutbeloppet</span> inte kan vara mindre än  <span>0</span>. ",targets:"en  <span>jämförelse</span> där  <span>absolutbeloppet</span> är mindre ",returns:"en  <span>konjunktion</span> av de tre slutsatserna ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi inte längre har något  <span>absolutbelopp</span>. "},en:{name:"compare with smaller absolute value",explanation:"If an  <span>expression</span> is larger than an  <span>absolute value</span>, we know three things: First, the  <span>expression</span> is larger than the contents of the  <span>absolute value</span>. Second, a  <span>negation</span> of the  <span>expression</span> is smaller than the contents of the  <span>absolute value</span>. Third, the  <span>expression</span> must be larger than  <span>0</span>, since the  <span>absolute value</span> cannot be less than  <span>0</span>. ",targets:"a  <span>comparison</span> where the  <span>absolute value</span> is larger ",returns:"a  <span>conjunction</span> with the three conclusions ",effect:"This is a  <span>simplifying operation</span> since we no longer have an  <span>absolute value</span>. "}},expandAbsInCombLarger:{id:311,sv:{name:"jämför med större absolutbelopp",explanation:"Om ett  <span>uttryck</span> är mindre än ett  <span>absolutbelopp</span> så finns det två alternativ: antingen är  <span>uttrycket</span> mindre än innehållet i  <span>absolutbeloppet</span>, eller så är en  <span>negation</span> av  <span>uttrycket</span> större än innehållet i  <span>absolutbeloppet</span>. ",targets:"en  <span>jämförelse</span> där  <span>absolutbeloppet</span> är större ",returns:"en  <span>disjunktion</span> med de två alternativen ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi inte längre har något  <span>absolutbelopp</span>. "},en:{name:"compare with larger absolute value",explanation:"If an  <span>expression</span> is smaller than an  <span>absolute value</span>, there are two alternatives: either the  <span>expression</span> is smaller than the contents of the  <span>absolute value</span>, or a  <span>negation</span> of the  <span>expression</span> is larger than the contents of the  <span>absolute value</span>. ",targets:"a  <span>comparison</span> where the  <span>absolute value</span> is larger ",returns:"a  <span>disjunction</span> of the two alternatives ",effect:"This is a  <span>simplifying operation</span> since we no longer have an  <span>absolute value</span>. "}},killAbsInPlusMinus:{id:265,sv:{name:"kollapsa absolutbelopp i plusminus",explanation:"Om  <span>plus minus</span> har en absolutbeloppsfaktor så påverkar inte  <span>absolutbeloppet</span>, eftersom  <span>plus minus</span> innebär just att hela  <span>uttrycket</span> är både positivt och negativt. Därför kan  <span>absolutbelopp</span> inne i  <span>plus minus</span>  <span>tas bort</span>! ",targets:" <span>plus minus</span> med absolutebeloppsfaktor ",returns:" <span>plus minus</span> utan  <span>absolutbelopp</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi slipper ett  <span>absolutbelopp</span>. ",steps:{expandabs:"Först gör vi en  <span>logisk förgrening</span> över  <span>absolutbeloppets</span> två alternativ. Målet är att visa att alternativen är likvärdiga.",expandfirstplusminus:"Vi expanderar  <span>plus minus</span> till en  <span>disjunktion</span> i  <span>så-grenen</span>.",expandsecondplusminus:"Nu expanderar vi  <span>plus minus</span> i  <span>annars-grenen</span>.",makefirstprodneg:"Vi flyttar ut den inre  <span>negationen</span> i den första  <span>disjunktionens</span> ena  <span>utsaga</span>.",makesecondprodneg:"Vi gör likadant i den andra  <span>utsagan</span>, vilket ger oss en dubbel  <span>negation</span>.",collapsedouble:"Nu  <span>kollapsar</span> vi den dubbla  <span>negationen</span>, vilket gör hela den andra  <span>utsagan</span> positiv.",nowmovearound:"Genom att byta plats på  <span>utsagorna</span> så är den första  <span>disjunktionen</span> nu helt identisk med den andra!",nowcollapseifelse:"Eftersom  <span>så-grenen</span> är identisk med  <span>annars-grenen</span> så kan vi  <span>kollapsa</span> den logiska förgreningen!",andplusminusify:"Slutligen skriver vi  <span>uttrycket</span> med  <span>plus minus</span> igen."}},en:{name:"collapse absolute value in plusminus",explanation:"If  <span>plus minus</span> contains an  <span>absolute value</span>  <span>factor</span> the  <span>absolute value</span> serves no purpose, as  <span>plus minus</span> dictates that the whole  <span>expression</span> is both positive and  <span>negative</span>. The  <span>absolute value</span> can therefore be  <span>removed</span>! ",targets:" <span>plus minus</span> with  <span>absolute value</span>  <span>factor</span> ",returns:" <span>plus minus</span> without  <span>absolute value</span> ",effect:"This is a  <span>simplifying operation</span> since we get rid of an  <span>absolute value</span>. ",steps:{expandabs:"First we make a  <span>logic branching</span> of the two options for the  <span>absolute value</span>. Our goal is to show that the two alternatives are actually the same.",expandfirstplusminus:"We expand the  <span>plus minus</span> in the  <span>then-branch</span> to a  <span>disjunction</span>.",expandsecondplusminus:"We do the same in the  <span>else-branch</span>.",makefirstprodneg:"We move out the  <span>negation</span> from the first statement in the first  <span>disjunction</span>.",makesecondprodneg:"We do the same in the second statement, which gives us a double  <span>negation</span>.",collapsedouble:"After collapsing that double  <span>negation</span> the entire second statement is now positive.",nowmovearound:"By moving the statements around in the first  <span>disjunction</span>, it is now completely identical to the second  <span>disjunction</span>!",nowcollapseifelse:"That means the  <span>then-branch</span> is identical to the  <span>else-branch</span>, and the  <span>logic branching</span> can be  <span>collapsed</span>!",andplusminusify:"Finally we write our  <span>expression</span> using  <span>plus minus</span> again."}}},expandAbsToIfElse:{id:261,sv:{name:"utred absolutbelopp",explanation:"Ett  <span>absolutbelopp</span> representerar det positiva värdet av sitt innehåll. Vill vi skriva detta utan att använda  <span>absolutbelopp</span> så får vi två alternativ: antingen är innehållet positivt, och kan skrivas som det står. Eller så är det negativt, och då måste vi sätta en  <span>negation</span> runt för att göra det positivt. Dessa två alternativ kan vi uttrycka med en  <span>logisk förgrening</span>! ",targets:"ett  <span>uttryck</span> med  <span>absolutbelopp</span> ",returns:"en  <span>logisk förgrening</span> som har  <span>uttryckets</span> innehåll med och utan  <span>negation</span> ",effect:"Detta räknas som en  <span>förenklande operation</span>! Trots att  <span>absolutbeloppet</span> är ett smidigare sätt att uttrycka detta på så innebär den nya formen med  <span>logisk förgrening</span> att det är lättare att förenkla vidare. "},en:{name:"explore absolute value",explanation:"An  <span>absolute value</span> represents the positive value of its contents. If we want to represent this without using  <span>absolute value</span> markers we get two cases: either the content is positve and can be written as it is, or it is  <span>negative</span> and must be wrapped in a  <span>negation</span>. These two cases can be represented as a  <span>logic branching</span>! ",targets:"an  <span>expression</span> with an  <span>absolute value</span> ",returns:"a  <span>logic branching</span> containing the content of the  <span>absolute value</span> with and without  <span>negation</span> ",effect:"This counts as a  <span>simplifying operation</span>!  <span>Even though</span> the  <span>absolute value</span> is a more succinct way to represent the positive value, this new form with a  <span>logic branching</span> is easier to  <span>simplify</span> further. "}},simplifier:{id:0,sv:{name:"Förenkla",explanation:"Att förenkla ett  <span>uttryck</span> innebär att vi tillämpar  <span>förenklande operationer</span> på det, enda tills ingen förenklingsmöjlighet återstår. ",targets:"Alla  <span>uttryck</span> som kan förenklas ",returns:"Maximalt  <span>förenklad</span> version av  <span>uttrycket</span> ",effect:" <span>Förenklande</span> :) ",steps:{simpltoundef:" <span>Uttrycket</span> innehöll delar som är  <span>odefinierade</span>, och därför kunde hela  <span>uttrycket</span> skrivas om till att vara  <span>odefinierat</span>.",simplifysinglebutnodec:"En enda  <span>förenkling</span> kunde utföras på  <span>uttrycket</span>:",simplifysingleanddec:"En enda  <span>förenkling</span> kunde utföras på  <span>uttrycket</span> (som sedan också kunde skrivas om på  <span>decimalform</span>):",simplifymultibutnodec:"Flertalet  <span>förenklingar</span> kunde utföras på  <span>uttrycket</span>, vilket fick följande resultat:",simplifymultianddec:"Flertalet  <span>förenklingar</span> kunde utföras på  <span>uttrycket</span> (som sedan också kunde skrivas om på  <span>decimalform</span>):",inputexample:"Efter att ha tillämpat alla möjliga  <span>förenklingar</span> så har  <span>uttrycket</span> förenklats enligt följande:"}},en:{name:"Simplify",explanation:" <span>Simplifying</span> an  <span>expression</span> means that we apply  <span>simplifying operations</span>, until no further opportunities for  <span>simplification</span> exists. ",targets:"Any  <span>expression</span> that can be  <span>simplified</span> ",returns:"A maximally  <span>simplified</span> version ",effect:" <span>Simplifying</span> :) ",steps:{simpltoundef:"The  <span>expression</span> contained parts which were  <span>undefined</span>, and therefore the whole  <span>expression</span> could be rephrased into being  <span>undefined</span>.",simplifysinglebutnodec:"One single  <span>simplification</span> could be done on the  <span>expression</span>:",simplifysingleanddec:"One single  <span>simplification</span> could be done on the  <span>expression</span> (which could also be expressed in  <span>decimal form</span>):",simplifymultibutnodec:"Several  <span>simplifications</span> could be performed on the  <span>expression</span>, yielding the following result:",simplifymultianddec:"Several  <span>simplifications</span> could be performed on the  <span>expression</span> (which could then also be expressed in  <span>decimal form</span>):",inputexample:"After having applied all possible  <span>simplifications</span>, the  <span>expression</span> was  <span>simplified</span> like thus:"}}},decimalifier:{id:-1,sv:{name:"Omvandla till decimalform",explanation:"Dec dec bla ",targets:"dectar ",returns:"decform ",effect:" <span>Förenklande</span> :) ",steps:{decimalifyapproxmultibutnosimpl:" <span>Uttrycket</span> kunde inte förenklas, men det kunde skrivas om till  <span>approximativ</span>  <span>decimalform</span> enligt följande:",decimalifyapproxsinglebutnosimpl:" <span>Uttrycket</span> kunde inte förenklas, men det kunde skrivas om till  <span>approximativ</span>  <span>decimalform</span> enligt följande:",decimalifyapproxmultiaftersimpl:"Det  <span>förenklade</span>  <span>uttrycket</span> kunde skrivas om till  <span>approximativ</span>  <span>decimalform</span> enligt följande:",decimalifyapproxsingleaftersimpl:"Det  <span>förenklade</span>  <span>uttrycket</span> kunde skrivas om till  <span>approximativ</span>  <span>decimalform</span> enligt följande:",decimalifymultibutnosimpl:" <span>Uttrycket</span> kunde inte förenklas, men det kunde skrivas om till exakt  <span>decimalform</span> enligt följande:",decimalifysinglebutnosimpl:" <span>Uttrycket</span> kunde inte förenklas, men det kunde skrivas om till exakt  <span>decimalform</span> enligt följande:",decimalifymultiaftersimpl:"Det  <span>förenklade</span>  <span>uttrycket</span> kunde skrivas om till exakt  <span>decimalform</span> enligt följande:",decimalifysingleaftersimpl:"Det  <span>förenklade</span>  <span>uttrycket</span> kunde skrivas om till exakt  <span>decimalform</span> enligt följande:"}},en:{name:"Turn to decimal form",explanation:"Dec dec bla ",targets:"dectar ",returns:"decform ",effect:" <span>Simplifying</span> :) ",steps:{decimalifyapproxmultibutnosimpl:"The  <span>expression</span> could not be  <span>simplified</span>, but it could be rewritten into  <span>approximate</span>  <span>decimal form</span> like thus:",decimalifyapproxsinglebutnosimpl:"The  <span>expression</span> could not be  <span>simplified</span>, but it could be rewritten into  <span>approximate</span>  <span>decimal form</span> like thus:",decimalifyapproxmultiaftersimpl:"The  <span>simplified</span>  <span>expression</span> could be rewritten into  <span>approximate</span>  <span>decimal form</span> like thus:",decimalifyapproxsingleaftersimpl:"The  <span>simplified</span>  <span>expression</span> could be rewritten into  <span>approximate</span>  <span>decimal form</span> like thus:",decimalifymultibutnosimpl:"The  <span>expression</span> could not be  <span>simplified</span>, but it could be rewritten into exact  <span>decimal form</span> like thus:",decimalifysinglebutnosimpl:"The  <span>expression</span> could not be  <span>simplified</span>, but it could be rewritten into exact  <span>decimal form</span> like thus:",decimalifymultiaftersimpl:"The  <span>simplified</span>  <span>expression</span> could be rewritten into exact  <span>decimal form</span> like thus:",decimalifysingleaftersimpl:"The  <span>simplified</span>  <span>expression</span> could be rewritten into exact  <span>decimal form</span> like thus:"}}},numRootToDec:{id:212,sv:{name:"approximera rot",explanation:"En  <span>rot</span> där både  <span>radikand</span> och grad är  <span>heltal</span> kan approximeras. ",targets:"en  <span>rot</span> av  <span>heltal</span> ",returns:"en  <span>decimal</span> approximation ",effect:"Detta är en omskrivning på  <span>decimalform</span>. ",steps:{writeaspow:"Först skriver vi om  <span>roten</span> på potensform.",turnexptodec:"Sedan approximerar vi  <span>potensens</span>  <span>exponent</span>...",finallypowtodec:"...och sedan hela  <span>potensen</span>!"}},en:{name:"approximate root",explanation:"A  <span>root</span> where  <span>the radicand</span> and degree are both  <span>integers</span> can be approximated. ",targets:"a  <span>root</span> of  <span>integers</span> ",returns:"a  <span>decimal number</span> ",effect:"This  <span>operation</span>  <span>rewrites to decimal form</span>. ",steps:{writeaspow:"First we rewrite the  <span>root</span> on  <span>power</span> form.",turnexptodec:"Then we  <span>approximate</span> the  <span>exponent</span>...",finallypowtodec:"...and finally the whole  <span>power</span>!"}}},piToDec:{id:207,sv:{name:"approximera pi",explanation:" <span>Konstanten</span>  <span>pi</span> kan ersättas med ett  <span>ungefärligt</span>  <span>decimaltal</span>. ",targets:" <span>konstanten</span>  <span>pi</span> ",returns:"ett  <span>decimaltal</span> ",effect:"Denna  <span>operation</span>  <span>skriver om på decimalform</span>. "},en:{name:"approximate pi",explanation:"The  <span>constant</span>  <span>pi</span> can be substituted for an  <span>approximate</span>  <span>decimal number</span> ",targets:"the  <span>constant</span>  <span>pi</span> ",returns:"a  <span>decimal number</span> ",effect:"This  <span>operation</span>  <span>rewrites to decimal form</span>. "}},eToDec:{id:214,sv:{name:"approximera e",explanation:" <span>Konstanten</span>  <span>e</span> kan ersättas med ett  <span>ungefärligt</span>  <span>decimaltal</span>. ",targets:" <span>konstanten</span>  <span>e</span> ",returns:"ett  <span>decimaltal</span> ",effect:"Denna  <span>operation</span>  <span>skriver om på decimalform</span>. "},en:{name:"approximate e",explanation:"The  <span>constant</span>  <span>e</span> can be substituted for an  <span>approximate</span>  <span>decimal number</span> ",targets:"the  <span>constant</span>  <span>e</span> ",returns:"a  <span>decimal number</span> ",effect:"This  <span>operation</span>  <span>rewrites to decimal form</span>. "}},fracToDecNum:{id:208,sv:{name:"omvandla kvot till decimaltal",explanation:"En  <span>kvot</span> kan via  <span>division</span> ersättas med ett  <span>decimaltal</span>. Detta  <span>decimaltal</span> kan vara både exakt eller  <span>ungefärligt</span>, beroende på om decimalutveckligen är oändlig eller inte. ",targets:"en  <span>kvot</span> av positiva  <span>heltal</span> ",returns:"ett  <span>decimaltal</span> ",effect:"Denna  <span>operation</span>  <span>skriver om på decimalform</span>. "},en:{name:"turn fraction to decimal number",explanation:"A  <span>fraction</span> of positive  <span>numbers</span> can through  <span>division</span> be replaced with a  <span>decimal number</span>. This  <span>decimal number</span> can be both exact or  <span>approximate</span>. ",targets:"a  <span>fraction</span> of positive  <span>integers</span> ",returns:" <span>Decimal number</span> ",effect:"This  <span>operation</span>  <span>rewrites to decimal form</span>. "}},fracWithNegNumToDecNum:{id:209,sv:{name:"omvandla negativ kvot till decimaltal",explanation:"En  <span>kvot</span> av två  <span>heltal</span> där ett är negativt kan omvandlas till ett negativt  <span>decimaltal</span> genom att  <span>negationen</span> först flyttas till att omfatta hela  <span>kvoten</span>. ",targets:"en  <span>kvot</span> av  <span>heltal</span> där ett är negativt ",returns:"ett negativt  <span>decimaltal</span> ",effect:"Denna  <span>operation</span>  <span>skriver om på decimalform</span>. ",steps:{movenegtofrac:"Först flyttar vi  <span>negationen</span> till att omfatta hela  <span>kvoten</span>.",thendecimalifyfrac:"Det gav oss en  <span>kvot</span> av två positiva  <span>heltal</span>, vilket vi kan omvandla till ett  <span>decimaltal</span>."}},en:{name:"turn negative fraction to decimal",explanation:"A  <span>fraction</span> of two  <span>integers</span>, one of which being  <span>negative</span>, can be  <span>merged</span> into a single  <span>negative</span>  <span>decimal number</span>. ",targets:"a  <span>fraction</span> of  <span>integers</span>, one  <span>negative</span> ",returns:"a  <span>negative</span>  <span>decimal number</span> ",effect:"This  <span>operation</span>  <span>rewrites to decimal form</span>. ",setps:{movenegtofrac:"First we move the negation to envelop the whole fraction.",thendecimalifyfrac:"That gave us a fraction of two positive integers, which we can rewrite to decimal form."}}},decimalifyFracFacs:{id:211,sv:{name:"slå ihop till decimaltal i kvot",explanation:"Vi kan  <span>slå ihop</span> samtliga  <span>talfaktorer</span> i en  <span>kvot</span> till ett enda  <span>decimaltal</span>. ",targets:"en  <span>kvot</span> med  <span>talfaktorer</span> varav minst en i  <span>nämnaren</span>. ",returns:"en  <span>produkt</span> (eller  <span>kvot</span>, om det återstod  <span>faktorer</span> i  <span>nämnaren</span>) med decimalfaktor ",effect:"Denna  <span>operation</span>  <span>skriver om på decimalform</span>. ",steps:{firstweextractfacs:"Först bryter vi ut alla  <span>talfaktorer</span>.",thenturnfractodec:"Sedan slår vi ihop dessa  <span>faktorer</span> till ett  <span>decimaltal</span>.",sincefracmultin:"Vi multiplicerar in  <span>decimaltalet</span> i  <span>kvoten</span> som återstår."}},en:{name:"merge to decimal in fraction",explanation:"We can  <span>merge</span> all numeric  <span>factors</span> in a  <span>fraction</span> into a single  <span>decimal number</span>  <span>factor</span>. ",targets:"a  <span>fraction</span> with  <span>integer</span>  <span>factors</span>, at least one in the  <span>denominator</span> ",returns:"a  <span>product</span> (or  <span>fraction</span>, if  <span>factors</span> remained in the  <span>denominator</span>) with  <span>decimal</span>  <span>factor</span> ",effect:"This  <span>operation</span>  <span>rewrites to decimal form</span>. ",steps:{firstweextractfacs:"First we extract all  <span>integer</span>  <span>factors</span> from the  <span>fraction</span>.",thenturnfractodec:"Then we  <span>merge</span> them together into a  <span>decimal number</span>.",sincefracmultin:"Finally we multiply that  <span>decimal</span>  <span>factor</span> back into the  <span>fraction</span>."}}},approxLog:{id:210,sv:{name:"omvandla logaritm till decimaltal",explanation:"En  <span>logaritm</span> kan ersättas med en  <span>ungefärlig</span> representation i form av ett  <span>decimaltal</span>. ",targets:"en  <span>logaritm</span> där målet och  <span>basen</span> är  <span>heltal</span> eller  <span>decimaltal</span> ",returns:"ett  <span>decimaltal</span> ",effect:"Denna  <span>operation</span>  <span>skriver om på decimalform</span>. ",steps:{rewritetobase10:"Först skriver vi om  <span>logaritmen</span> till en  <span>kvot</span> av  <span>logaritmer</span> på  <span>basen</span> 10, som vi sedan kan beräkna.",approxnumer:"Vi tar fram ett närmevärde på  <span>logaritmen</span> i  <span>täljaren</span>...",approxdenom:"...och på  <span>nämnaren</span>.",approxfrac:"Nu har vi en  <span>kvot</span> av två  <span>decimaltal</span>, vilket vi approximerar till ett enda  <span>decimaltal</span> som alltså utgör ett närmevärde på den ursprungliga  <span>logaritmen</span>."}},en:{name:"write logarithm as decimal number",explanation:"A  <span>logarithm</span> can be replaced by an  <span>approximate</span> representation in  <span>decimal form</span>. ",targets:"a  <span>logarithm</span> where the  <span>base</span> and target are  <span>integers</span> or  <span>decimal</span>  <span>numbers</span> ",returns:"a  <span>decimal number</span> ",effect:"This  <span>operation</span>  <span>rewrites to decimal form</span>. ",steps:{rewritetobase10:"We begin by rewriting the  <span>logarithm</span> as a  <span>fraction</span> of  <span>logarithms</span> on  <span>base</span> 10, which we can then  <span>approximate</span>.",approxnumer:"Now we  <span>approximate</span> the  <span>numerator</span>  <span>logarithm</span>...",approxdenom:"...and the  <span>denominator</span>  <span>logarithm</span>.",approxfrac:"This gave us a  <span>fraction</span> of  <span>decimal</span>  <span>numbers</span>, which we can  <span>approximate</span> to a single  <span>decimal</span> value, which is an approximation of our original  <span>logarithm</span>."}}},approxLogBase10:{id:238,sv:{name:"approximera tiologaritm",explanation:"Genom att använda John Napiers logaritmtabell från 1614 (eller log-knappen på miniräknaren, vilket denna  <span>operation</span> motsvarar) kan vi approximera en numerisk  <span>logaritm</span> på  <span>basen</span> 10 till ett  <span>ungefärligt</span> närmevärde. ",targets:"en numerisk  <span>logaritm</span> på  <span>bas</span> 10 ",returns:"ett  <span>decimaltal</span> ",effect:"Denna  <span>operation</span>  <span>skriver om på decimalform</span>. "},en:{name:"approximate base 10 logarithm",explanation:"By using John Napier's  <span>logarithm</span> table from 1614 (or the log button on a calculator, which this  <span>operation</span> essentially is), we can  <span>approximate</span> a numeric  <span>logarithm</span> with  <span>base</span> 10 to a  <span>decimal</span> value. ",targets:"a numeric  <span>logarithm</span> with  <span>base</span> 10 ",returns:"a  <span>decimal number</span> ",effect:"This  <span>operation</span>  <span>rewrites to decimal form</span>. "}},collapseSecretNumLog:{id:237,sv:{name:"kollapsa logaritm till kvot",explanation:"En  <span>logaritm</span>, där  <span>basen</span> kan skrivas om som en  <span>potens</span> med föremålet för  <span>logaritmen</span> som  <span>bas</span>, kan förenklas till en  <span>kvot</span>. Det blir lite som omvänt  <span>roten</span> ur! ",targets:"en numerisk  <span>logaritm</span> där  <span>basen</span> är en  <span>potens</span> av föremålet för  <span>logaritmen</span> ",returns:"en  <span>kvot</span> med  <span>täljare</span>  <span>1</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi ersätter en  <span>logaritm</span> med en  <span>kvot</span>. ",steps:{splitlogtofrac:"Vi börjar med att dela upp  <span>logaritmen</span> till en  <span>kvot</span> av  <span>logaritmer</span> på  <span>basen</span> 10.  <span>Nämnaren</span> är nu en  <span>logaritm</span> av ursprungslogaritmens  <span>bas</span>.",factorisetofacpow:"Det  <span>talet</span>  <span>faktoriserar</span> vi nu för att kunna skriva om det till en  <span>potens</span>.",mergefacstopower:"Vi slutför omskrivningen till en  <span>potens</span>.",splitdenomlog:"Nu har vi i  <span>nämnaren</span> en  <span>logaritm</span> av en  <span>potens</span>, vilket vi kan skriva om till en  <span>produkt</span>.",elimlogs:" <span>Logaritmerna</span> i  <span>täljaren</span> och  <span>nämnaren</span> är nu identiska och kan  <span>elimineras</span>! Kvar återstår endast den tidigare  <span>potensens</span>  <span>exponent</span> i  <span>nämnaren</span>."}},en:{name:"collapse logarithm to fraction",explanation:"A  <span>logarithm</span>, where the  <span>base</span> can be rewritten as a  <span>power</span> with the  <span>logarithm</span> target as  <span>base</span>, can be rewritten as a  <span>fraction</span>. This is sort of an inversed  <span>root</span>  <span>operation</span>! ",targets:"a numeric  <span>logarithm</span> where the  <span>base</span> is a  <span>power</span> of the  <span>logarithm</span> target ",returns:"a  <span>fraction</span> with  <span>numerator</span>  <span>1</span> ",effect:"This is a  <span>simplifying operation</span>, since we replace a  <span>logarithm</span> with a  <span>fraction</span> ",steps:{splitlogtofrac:"We begin by  <span>splitting</span> the  <span>logarithm</span> to a  <span>fraction</span> of  <span>logarithms</span> on  <span>base</span> 10. The  <span>denominator</span> is now a  <span>logarithm</span> of the  <span>base</span> of the original  <span>logarithm</span>.",factorisetofacpow:"Now we  <span>factorise</span> that  <span>number</span> in order to be able to rewrite it as a  <span>power</span>.",mergefacstopower:"We finalise the rewrite to a  <span>power</span>.",splitdenomlog:"The  <span>denominator</span> is now a  <span>logarithm</span> of a  <span>power</span>, which we can rewrite to a  <span>product</span>.",elimlogs:"The  <span>logarithms</span> in the  <span>numerator</span> and  <span>denominator</span> are now identical and can be  <span>eliminated</span>! All that remains is the former  <span>power</span>  <span>exponent</span> in the  <span>denominator</span>."}}},forbidLogBaseZero:{id:236,sv:{name:"förbjud logaritm med bas 0",explanation:"Eftersom en  <span>logaritm</span> representerar den  <span>exponent</span> som  <span>basen</span> skall upphöjas till för att bli  <span>talet</span> som  <span>logaritmeras</span>, så kan en  <span>logaritm</span> inte ha  <span>0</span> som  <span>bas</span>.  <span>Talet 0</span> blir ju alltid  <span>0</span> oavsett hur många gånger det multipliceras med sig själv. ",targets:"en  <span>logaritm</span> med  <span>basen</span>  <span>0</span> ",returns:" <span>odefinierad</span> ",effect:"Detta är en  <span>integritetsoperation</span>, eftersom vi ersätter en förbjuden  <span>logaritm</span> med  <span>odefinierad</span>. ",steps:{firstmakefrac:"Vi börjar med att skriva om  <span>logaritmen</span> till en  <span>kvot</span> av  <span>logaritmer</span>.  <span>Nämnaren</span> blir då en  <span>logaritm</span> av ursprungslogaritmens  <span>bas</span>, det vill säga  <span>talet 0</span>.",denomtoundef:"En  <span>logaritm</span> av  <span>0</span> vet vi sedan tidigare är  <span>odefinierad</span>.",fractoundef:"Eftersom vi nu har ett  <span>uttryck</span> med en odefierad del är hela  <span>uttrycket</span>  <span>odefinierat</span>!"}},en:{name:"forbid logarithm with base 0",explanation:"Since a  <span>logarithm</span> represents the  <span>exponent</span> that the  <span>base</span> must be raised to in order to become the target value, we cannot have  <span>0</span> as a  <span>logarithm</span>  <span>base</span>. The  <span>number 0</span> is always  <span>0</span> no matter how many times we multiply it by itself. ",targets:"a  <span>logarithm</span> with  <span>base</span>  <span>0</span> ",returns:" <span>undefined</span> ",effect:"This is an integrity checking  <span>operation</span>, as we replace a forbidden  <span>logarithm</span> with  <span>undefined</span>. ",steps:{firstmakefrac:"We begin by rewriting the  <span>logarithm</span> as a  <span>fraction</span> of  <span>logarithms</span>. The  <span>denominator</span> then becomes a  <span>logarithm</span> of the original  <span>logarithm</span>  <span>base</span>, which is the  <span>number 0</span>.",denomtoundef:"A  <span>logarithm</span> of  <span>0</span> is  <span>undefined</span>.",fractoundef:"Now that we have an  <span>expression</span> with an  <span>undefined</span> part, the whole  <span>expression</span> is  <span>undefined</span>."}}},forbidLogBaseOne:{id:235,sv:{name:"förbjud logaritm med bas 1",explanation:"Eftersom en  <span>logaritm</span> representerar den  <span>exponent</span> som  <span>basen</span> skall upphöjas till för att bli  <span>talet</span> som  <span>logaritmeras</span>, så kan en  <span>logaritm</span> inte ha  <span>1</span> som  <span>bas</span>.  <span>Talet 1</span> blir ju alltid  <span>1</span> oavsett hur många gånger det multipliceras med sig själv. ",targets:"en  <span>logaritm</span> med  <span>basen</span>  <span>1</span> ",returns:" <span>odefinierad</span> ",effect:"Detta är en  <span>integritetsoperation</span>, eftersom vi ersätter en förbjuden  <span>logaritm</span> med  <span>odefinierad</span>. ",steps:{firstmakefrac:"Vi börjar med att skriva om  <span>logaritmen</span> till en  <span>kvot</span> av  <span>logaritmer</span>.  <span>Nämnaren</span> blir då en  <span>logaritm</span> av ursprungslogaritmens  <span>bas</span>, det vill säga  <span>talet 1</span>.",denomtozero:"En  <span>logaritm</span> av  <span>1</span> kan omvandlas till  <span>talet 0</span>.",fractoundef:"Nu har vi en  <span>kvot</span> där  <span>täljaren</span> är  <span>0</span>, vilket inte är definierat!"}},en:{name:"forbid logarithm with base 1",explanation:"Since a  <span>logarithm</span> represents the  <span>exponent</span> that the  <span>base</span> must be raised to in order to become the target value, we cannot have  <span>1</span> as a  <span>logarithm</span>  <span>base</span>. The  <span>number 1</span> is always  <span>1</span> no matter how many times we multiply it by itself. ",targets:"a  <span>logarithm</span> with  <span>base</span>  <span>1</span> ",returns:" <span>undefined</span> ",effect:"This is an integrity checking  <span>operation</span>, as we replace a forbidden  <span>logarithm</span> with  <span>undefined</span>. ",steps:{firstmakefrac:"We begin by rewriting the  <span>logarithm</span> as a  <span>fraction</span> of  <span>logarithms</span>. The  <span>denominator</span> then becomes a  <span>logarithm</span> of the original  <span>logarithm</span>  <span>base</span>, which is the  <span>number 1</span>.",denomtozero:"A  <span>logarithm</span> of  <span>1</span> can be rewritten as the  <span>number 0</span>.",fractoundef:"Now we have a  <span>fraction</span> with  <span>denominator</span>  <span>0</span>, which is  <span>undefined</span>!"}}},logToFracOfLogs:{id:234,sv:{name:"dela upp logaritm i kvot",explanation:"Vi ska inte gå in närmare på varför, men en  <span>logaritm</span> kan delas up i en  <span>kvot</span> av  <span>logaritmer</span> på valfri  <span>bas</span>.  <span>Täljaren</span> är  <span>logaritm</span> av samma  <span>tal</span> som ursprungslogaritmen, medan  <span>nämnaren</span> är  <span>logaritmen</span> av ursprungslogaritmens  <span>bas</span>. En vanlig användning av denna  <span>operation</span> är att skriva om en  <span>logaritm</span> till en  <span>logaritm</span> på  <span>bas</span> 10, som därefter kan approximeras. ",targets:"en  <span>logaritm</span> ",returns:"en  <span>kvot</span> av  <span>logaritmer</span> på annan  <span>bas</span> ",effect:"Detta är normalt en  <span>komplicerande operation</span>, eftersom vi ersatt en ensam  <span>logaritm</span> med en  <span>kvot</span> av  <span>logaritmer</span>. Men om  <span>basen</span> är en komplicerad konstruktion så kan denna omskrivning faktiskt vara  <span>förenklande</span>! Därför är  <span>operationen</span>  <span>villkorligt förenklande</span>. "},en:{name:"split logarithm to fraction",explanation:"We will skip over the why, but a  <span>logarithm</span> can be  <span>split up</span> into a  <span>fraction</span> of  <span>logarithms</span> with another  <span>base</span>. The  <span>numerator</span> is a  <span>logarithm</span> of the same  <span>number</span> as the original, and the  <span>denominator</span> is the  <span>logarithm</span> of the  <span>base</span> of the original  <span>logarithm</span>. A common use of this  <span>operation</span> is to rewrite a  <span>logarithm</span> to  <span>base</span> 10, allowing it to then be approximated. ",targets:"a  <span>logarithm</span> ",returns:"a  <span>fraction</span> of  <span>logarithms</span> with another  <span>base</span> ",effect:"This is normally a  <span>complicating operation</span>, as we have replaced a  <span>logarithm</span> with a  <span>fraction</span> of  <span>logarithms</span>. But if the  <span>base</span> is a  <span>complicated</span> construct, this rewrite is easier to  <span>simplify</span> further! Therefore this  <span>operation</span> is considered to be  <span>conditionally simplifying</span>. "}},logOfNegNum:{id:233,sv:{name:"beräkna logaritm av negation",explanation:"Vi kan egentligen inte ta  <span>logaritmen</span> av ett  <span>negativt tal</span>, men genom att skriva om det till ett  <a href='#' class='wordlink' linkto='complexnum'>komplext tal</a> kan vi få ett  <span>uttryck</span> med enbart positiva  <span>logaritmer</span>. ",targets:"en  <span>logaritm</span> av en  <span>negation</span> ",returns:"en komplex  <span>summa</span> med positiva  <span>logaritmer</span> ",effect:"Förvisso är den resulterade  <span>summan</span> ganska invecklad, men  <span>operationen</span> får ändå anses  <span>förenklande</span> då vi nu inte har någon  <span>logaritm</span> av  <span>negation</span>. ",steps:{splitneg:"Först delar vi upp  <span>negationen</span> i en  <span>produkt</span> med  <span>faktor</span>  <span>-1</span>.",splitlog:"Nu har vi en  <span>logaritm</span> av en  <span>produkt</span>, vilket vi kan dela upp till en  <span>summa</span> av två  <span>logaritmer</span>.",formi2:"Vi byter ut  <span>-1</span> i den vänstra  <span>logaritmen</span> till kvadraten av  <span>den komplexa konstanten i</span>.",prodify:"Nu har vi en  <span>logaritm</span> av en  <span>potens</span>, vilket vi kan platta ut till en  <span>produkt</span>.",collapsecomplexlog:"Det gav oss  <span>logaritmen</span> av enbart  <span>den komplexa konstanten i</span>, vilket kan ersättas med ett likvärdigt  <span>uttryck</span>.",multinthetwo:"Vi multiplicerar in  <span>talet</span> 2 som tidigare var  <span>exponent</span> till  <span>den komplexa konstanten i</span>.",elim2:" <span>Talet</span> 2 kan nu förkortas bort ut  <span>kvoten</span>!",wasnaturalsoflatten:"Att den ursprungliga  <span>logaritmen</span> av ett  <span>negativt tal</span> var naturlig innebär att vi nu har fått den  <span>naturliga logaritmen</span> av  <span>konstanten</span>  <span>e</span>, vilket vi kan förenkla till  <span>talet 1</span>.",andclean:"Vi  <span>tar bort</span>  <span>nämnaren</span>  <span>1</span>, och är klara!"}},en:{name:"calculate logarithm of negative number",explanation:"A  <span>logarithm</span> of a  <span>negation</span> doesn't really make sense, but by rewriting it as a complex value we can get an  <span>expression</span> with only positive  <span>logarithms</span>. ",targets:"a  <span>logarithm</span> of a  <span>negation</span> ",returns:"a complex  <span>sum</span> with positive  <span>logarithms</span> ",effect:"The resulting  <span>sum</span> is complex and rather advanced, but we still consider this a  <span>simplifying operation</span> since we no longer have any  <span>logarithms</span> of  <span>negations</span>. ",steps:{splitneg:"First we  <span>split</span> the  <span>negation</span> into a  <span>product</span> with a  <span>factor</span>  <span>-1</span>.",splitlog:"Now we have a  <span>logarithm</span> of a  <span>product</span>, which we can  <span>split</span> into a  <span>sum</span> of two  <span>logarithms</span>.",formi2:"In the left  <span>logarithm</span> we replace  <span>-1</span> with a  <span>power</span> of  <span>the complex constant i</span>.",prodify:"That gave us a  <span>logarithm</span> of a  <span>power</span>, which we can  <span>flatten</span> to a  <span>product</span>.",collapsecomplexlog:"Now we have a  <span>logarithm</span> of only  <span>the complex constant i</span>, which we can replace with an equal  <span>expression</span>.",multinthetwo:"We move the previous  <span>exponent 2</span> into the  <span>fraction</span>, aiming to  <span>eliminate</span> it along with the  <span>number</span> 2  <span>factor</span> in the  <span>denominator</span>.",elim2:"Now we  <span>eliminate</span> the  <span>factors</span> 2 from the  <span>fraction</span>.",wasnaturalsoflatten:"As the original  <span>logarithm</span> was natural, our  <span>expression</span> now contains the  <span>natural logarithm</span> of the  <span>constant</span>  <span>e</span>. This we can  <span>simplify</span> to the  <span>number 1</span>.",andclean:"Finally we  <span>remove</span> the  <span>denominator</span>  <span>1</span>, and are done!"}}},logOfI:{id:232,sv:{name:"logaritm av komplexa konstanten i",explanation:"Vi hoppar helt fräckt över varför, men  <span>logaritmen</span> av  <span>den komplexa konstanten i</span> kan representeras av en  <span>kvot</span> innehållandes  <span>konstanten i</span>,  <span>konstanten</span>  <span>pi</span> och den  <span>naturliga logaritmen</span> av ursprungslogaritmens  <span>bas</span>. ",targets:"en  <span>logaritm</span> av  <span>den komplexa konstanten i</span> ",returns:"en  <span>kvot</span> där  <span>täljaren</span> är  <span>produkten</span> av  <span>konstanten i</span> och  <span>konstanten</span>  <span>pi</span>, och  <span>nämnaren</span> är 2 gånger den  <span>naturliga logaritmen</span> av ursprungslogaritmens  <span>bas</span> ",effect:"Detta är en  <span>förenklande operation</span>. Även om vi fick ett  <span>komplicerat</span>  <span>uttryck</span> så har vi inte längre någon  <span>logaritm</span> som innehåller  <span>den komplexa konstanten i</span>. "},en:{name:"logarithm of the complex constant i",explanation:"We'll skip over the why, but a  <span>logarithm</span> of  <span>the complex constant i</span> can be rewritten as a  <span>fraction</span> containing the  <span>constant i</span>, the  <span>constant</span>  <span>pi</span> and the  <span>natural logarithm</span> of the original  <span>logarithm</span>  <span>base</span>. ",targets:"a  <span>logarithm</span> of  <span>the complex constant i</span> ",returns:"a  <span>fraction</span> where the  <span>numerator</span> is a  <span>product</span> of  <span>the complex constant i</span> and the  <span>constant</span>  <span>pi</span>, and the  <span>denominator</span> is the  <span>product</span> of the  <span>number</span> 2 and the  <span>natural logarithm</span> of the original  <span>logarithm</span>  <span>base</span> ",effect:"This is a  <span>simplifying operation</span>.  <span>Even though</span> we replaced the  <span>logarithm</span> with a rather complex structure, we no longer have a  <span>logarithm</span> containing  <span>the complex constant i</span>. "}},collapseLogOfRoot:{id:226,sv:{name:"kollapsa logaritm av rot",explanation:"Genom att skriva om  <span>roten</span> till potensform så kan vi förenkla en  <span>logaritm</span> av en  <span>rot</span>. ",targets:"en  <span>logaritm</span> av en  <span>rot</span> ",returns:"en  <span>kvot</span> där  <span>täljaren</span> är  <span>logaritmen</span> av  <span>radikanden</span> och  <span>nämnaren</span> är  <span>rotens grad</span> ",effect:"Detta är en  <span>förenklande operation</span>, då vi inte längre behöver hantera en  <span>rot</span>. ",steps:{firstroottopow:"Först skriver vi om  <span>roten</span> på potensform.",thenflattentoprod:"Nu har vi en  <span>logaritm</span> av en  <span>potens</span>, ur vilket vi kan lyfta ut  <span>exponenten</span> som en  <span>faktor</span>.",finallymult:"Den  <span>faktorn</span> var en  <span>kvot</span> med  <span>täljare</span>  <span>1</span>, som vi multiplicerar in  <span>logaritmen</span> i."}},en:{name:"collapse logarithm of root",explanation:"By writing the  <span>root</span> on  <span>power</span> form, we can  <span>simplify</span> a  <span>logarithm</span> of a  <span>root</span>. ",targets:"a  <span>logarithm</span> of a  <span>root</span> ",returns:"a  <span>fraction</span> where the  <span>numerator</span> is  <span>the radicand</span> and the  <span>denominator</span> is the  <span>root</span> degree ",effect:"This is a  <span>simplifying operation</span> as we no longer have to deal with a  <span>root</span>. ",steps:{firstroottopow:"First we write the  <span>root</span> on  <span>power</span> form.",thenflattentoprod:"Now we have a  <span>logarithm</span> of a  <span>power</span>, from which we can extract the  <span>exponent</span> as a  <span>factor</span>.",finallymult:"That  <span>factor</span> was a  <span>fraction</span> with  <span>numerator</span>  <span>1</span>, which we multiply the  <span>logarithm</span> into."}}},baseBothSidesOfRel:{id:218,sv:{name:"byt bas i båda led av relation",explanation:"Om vi låter båda leden av en  <span>relation</span> bli  <span>exponenter</span> i  <span>potenser</span> med gemensam  <span>bas</span>, så har  <span>relationen</span> fortfarande samma  <span>sanningsvärde</span>. ",targets:"en  <span>relation</span> ",returns:"en  <span>relation</span> där båda led är  <span>potenser</span> med identiska  <span>baser</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom vi  <span>introducerat</span> två nya  <span>baser</span>. "},en:{name:"change base on both sides of relation",explanation:"If we let both sides of a  <span>relation</span> become  <span>exponents</span> in  <span>powers</span> with a common  <span>base</span>, then the relation's  <span>truth value</span> is still the same. ",targets:"a  <span>relation</span> ",returns:"a  <span>relation</span> where both sides are  <span>powers</span> with identical  <span>bases</span> ",effect:"This is a  <span>complicating operation</span> since we have  <span>introduced</span> two new  <span>bases</span>. "}},logBothSidesOfRel:{id:217,sv:{name:"logaritmera båda sidor av relation",explanation:"Vi kan omvandla båda leden i en  <span>relation</span> till  <span>logaritmer</span> utan att påverka  <span>relationens</span>  <span>sanningsvärde</span>. ",targets:"en  <span>relation</span> ",returns:"en  <span>relation</span> där båda led är  <span>logaritmer</span> med identiska  <span>baser</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom vi  <span>introducerat</span> två nya  <span>baser</span>. "},en:{name:"log both sides of relation",explanation:"If we let both sides of a  <span>relation</span> become  <span>logarithms</span> with a common  <span>base</span>, then the relation's  <span>truth value</span> is still the same. ",targets:"a  <span>relation</span> ",returns:"a  <span>relation</span> where both sides are  <span>powers</span> with identical  <span>bases</span> ",effect:"This is a  <span>complicating operation</span> since we have  <span>introduced</span> two new  <span>bases</span>. "}},illegalLog:{id:212,en:{name:"forbid logarithm of 0",explanation:"We cannot calculate the  <span>logarithm</span> of the  <span>number 0</span>. A  <span>logarithm</span> tells us to what  <span>exponent</span> we must raise the  <span>logarithm</span>  <span>base</span> in order to get the target  <span>number</span>, but no matter how many times we multiply the  <span>base</span> with itself, we'll never get the  <span>number 0</span>! Therefore the  <span>logarithm</span> of  <span>0</span> is  <span>undefined</span>. ",targets:"a  <span>logarithm</span> of the  <span>number 0</span> ",returns:" <span>undefined</span> ",effect:"This is an integrity checking  <span>operation</span> as it replaces an illegal  <span>logarithm</span> with  <span>undefined</span>. "},sv:{name:"förbjud logaritm av 0",explanation:"Vi kan inte ta  <span>logaritmen</span> av  <span>talet 0</span>.  <span>Logaritmen</span> säger ju vilket  <span>tal</span> som  <span>basen</span> skall upphöjas till för att bli det  <span>talet</span>, men oavsett hur många gånger  <span>basen</span> gångras med sig själv så kommer vi aldrig få  <span>talet 0</span>! Därför är  <span>logaritmen</span> av  <span>talet 0</span>  <span>odefinierad</span>. ",targets:"en  <span>logaritm</span> av  <span>talet 0</span> ",returns:" <span>odefinierad</span> ",effect:"Detta är en  <span>integritetsoperation</span>, eftersom den ersätter en förbjuden  <span>logaritm</span> med  <span>odefinierad</span>. "}},mergePosNegLogTerms:{id:213,sv:{name:"slå ihop logaritmtermer",explanation:"En positiv och en  <span>negativ</span> logaritmterm med gemensam  <span>faktor</span> kan förenklas genom att den gemensamma  <span>faktorn</span> lyfts ut till egna  <span>logaritmer</span> som sedan tar ut varandra. ",targets:"en  <span>summa</span> med positiv och  <span>negativ</span> logaritmterm med gemensam  <span>faktor</span> ",returns:"en  <span>summa</span> med mindre (och ibland färre)  <span>logaritmer</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi får  <span>logaritmer</span> av mindre  <span>tal</span>, och ibland dessutom en  <span>logaritm</span> färre. ",steps:{freefacinposlog:"Vi frigör den gemensamma  <span>faktorn</span> i den positiva  <span>logaritmen</span>.",splitposlog:"Nu delar vi upp den positiva  <span>logaritmen</span> i två  <span>logaritmer</span>, den vänstra blir en  <span>logaritm</span> av den gemensamma  <span>faktorn</span>.",absposlogbits:"Vi måste  <span>jämna ut</span>  <span>summan</span> efter uppdelningen av den positiva  <span>logaritmen</span>.",freefacinneglog:"Vi frigör den gemensamma  <span>faktorn</span> i den  <span>negativa</span>  <span>logaritmen</span>.",splitneglog:"Nu delar vi upp den  <span>negativa</span>  <span>logaritmen</span> i två  <span>logaritmer</span>, den vänstra blir en  <span>logaritm</span> av den gemensamma  <span>faktorn</span>.",absneglogbits:"Vi måste  <span>jämna ut</span>  <span>summan</span> efter uppdelningen av den  <span>negativa</span>  <span>logaritmen</span>.",nowmerge:"Nu slår vi ihop de frigjorda  <span>logaritmerna</span> som är identiska förutom att den ena är  <span>negativ</span>!",removezero:"Till sist  <span>tar vi bort</span> den resulterade nollan, och vi är klara!"}},en:{name:"merge logarithm terms",explanation:"A positive and a  <span>negative</span>  <span>logarithm</span>  <span>term</span> with a common  <span>factor</span> can be  <span>simplified</span> by extracting the common  <span>factors</span> to  <span>logarithms</span> of their own, which then  <span>eliminate</span> each other. ",targets:"a  <span>sum</span> with a positive and a  <span>negative</span>  <span>logarithm</span>  <span>term</span> with a common  <span>factor</span> ",returns:"a  <span>sum</span> with  <span>logarithms</span> of smaller  <span>numbers</span>, or one less  <span>logarithm</span> ",effect:"This is a  <span>simplifying operation</span> since we get  <span>logarithms</span> of smaller  <span>numbers</span>, and sometimes we  <span>remove</span> one  <span>logarithm</span> altogether. ",steps:{freefacinposlog:"We free the common  <span>factor</span> in the positive  <span>logarithm</span>.",splitposlog:"Now we  <span>split</span> the positive  <span>logarithm</span> into two  <span>logarithm</span>  <span>terms</span>, the left being a  <span>logarithm</span> of the common  <span>factor</span>.",absposlogbits:"We need to  <span>flatten</span> the  <span>sum</span> after the  <span>split</span> of the positive  <span>logarithm</span>.",freefacinneglog:"We free the common  <span>factor</span> in the  <span>negative</span>  <span>logarithm</span>.",splitneglog:"Now we  <span>split</span> the  <span>negative</span>  <span>logarithm</span> into two  <span>logarithm</span>  <span>terms</span>, the left being a  <span>logarithm</span> of the common  <span>factor</span>.",absneglogbits:"We need to  <span>flatten</span> the  <span>sum</span> after the  <span>split</span> of the  <span>negative</span>  <span>logarithm</span>.",nowmerge:"Now we  <span>merge</span> the freed  <span>logarithms</span> of the common  <span>factors</span>, which are identical except for one being  <span>negative</span>.",removezero:"Finally we  <span>remove</span> the resulting zero from the  <span>sum</span>, and we are done!"}}},logOfPowToProd:{id:195,sv:{name:"bryt ut exponent ur logaritm",explanation:"Det är lite lurigt att förstå, men eftersom en  <span>logaritm</span> representerar den  <span>exponent</span> som dess  <span>bas</span> måste upphöjas med för att bli målet för  <span>logaritmen</span>, så kan en  <span>logaritm</span> av en  <span>potens</span> omvandlas till en  <span>produkt</span> av  <span>potensens</span>  <span>exponent</span> och  <span>logaritmen</span> av  <span>potensens</span>  <span>bas</span>. Sambandet är som sagt inte uppenbart, men det har att göra med att en  <span>potens</span> som har en  <span>potens</span> som  <span>bas</span> kan skrivas om till en enda  <span>potens</span> där  <span>exponenten</span> är  <span>produkten</span> av den inre och den yttre  <span>potensens</span>  <span>exponenter</span>. ",targets:"en  <span>logaritm</span> av en  <span>potens</span> ",returns:"en  <span>produkt</span> av  <span>potensens</span>  <span>exponent</span> och  <span>logaritmen</span> av  <span>potensens</span>  <span>bas</span> ",effect:"Detta är en  <span>förenklande operation</span>. Vi har inte blivit av med några objekt, men den nya formen är lättare att förenkla vidare. "},en:{name:"extract exponent from logarithm",explanation:"It's rather difficult to understand, but because a  <span>logarithm</span> represents the  <span>exponent</span> to which the  <span>base</span> must be raised in order to become the target of the  <span>logarithm</span>, we can rewrite the  <span>logarithm</span> of a  <span>power</span> to a  <span>product</span> of the  <span>power</span>  <span>exponent</span> and the  <span>logarithm</span> of the  <span>power base</span>. As said, the connection isn't obvious, but it is closely related to the fact that we can rewrite a  <span>power</span> where the  <span>base</span> is also a  <span>power</span> to a single  <span>power</span> where the  <span>exponent</span> is the  <span>product</span> of the inner and outer  <span>exponent</span>. ",targets:"a  <span>logarithm</span> of a  <span>power</span> ",returns:"a  <span>product</span> of the  <span>power</span>  <span>exponent</span> and the  <span>logarithm</span> of the  <span>power base</span> ",effect:"This is a  <span>simplifying operation</span>.  <span>Even though</span> we still have the exact same  <span>number</span> of objects, this new form is easier to  <span>simplify</span> further. "}},logOfBaseToOne:{id:196,sv:{name:"kollapsa logaritm av bas till 1",explanation:"Eftersom  <span>logaritmen</span> representerar  <span>exponenten</span> som  <span>basen</span> måste upphöjas med för att bli  <span>talet</span> vi logaritmerar, så måste en  <span>logaritm</span> där  <span>basen</span> och målet är samma representera  <span>talet 1</span>! ",targets:"en  <span>logaritm</span> där  <span>basen</span> och målet är samma ",returns:" <span>talet 1</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi ersätter en  <span>logaritm</span> med  <span>talet 1</span>. ",steps:{splitlogtofrac:"Först utnyttjar vi att en  <span>logaritm</span> kan delas upp i en  <span>kvot</span> av  <span>logaritmer</span> på valfri  <span>bas</span>. Vi väljer dock samma  <span>bas</span> som nu, vilket ger oss en  <span>kvot</span> av två identiska  <span>logaritmer</span>!",collapsefractoone:"Den  <span>kvoten</span> kan sedan omvandlas till  <span>talet 1</span>."}},en:{name:"collapse logarithm of base to 1",explanation:"Because the  <span>logarithm</span> represents the  <span>exponent</span> to which the  <span>base</span> must be raised in order to become the target, if the target and  <span>base</span> are the same, then the  <span>logarithm</span> must represent the  <span>number 1</span>! ",targets:"a  <span>logarithm</span> where the  <span>base</span> and target are the same ",returns:"the  <span>number 1</span> ",effect:"This is a  <span>simplifying operation</span>, since we replace a  <span>logarithm</span> with the  <span>number 1</span>. ",steps:{splitlogtofrac:"First we exploit the fact that a  <span>logarithm</span> can be  <span>split up</span> into a  <span>fraction</span> of  <span>logarithms</span> with a new  <span>base</span> of our choice. We however choose the same  <span>base</span> as now, which gives us a  <span>fraction</span> of two identical  <span>logarithms</span>!",collapsefractoone:"This  <span>fraction</span> can then be  <span>collapsed</span> into the  <span>number 1</span>."}}},logOfBasePowToExp:{id:197,sv:{name:"kollapsa logaritm av baspotens",explanation:"En  <span>logaritm</span> av en  <span>potens</span> med samma  <span>bas</span> som  <span>logaritmen</span> kan  <span>kollapsas</span>, genom att utnyttja att en  <span>logaritm</span> av en  <span>potens</span> kan skrivas om till en  <span>produkt</span> av  <span>potensens</span>  <span>exponent</span> och  <span>logaritmen</span> av  <span>potensens</span>  <span>bas</span>. ",targets:"en  <span>logaritm</span> av en  <span>potens</span> med samma  <span>bas</span> som  <span>logaritmen</span> ",returns:" <span>potensens</span>  <span>exponent</span> ",effect:"Detta är en  <span>förenklande</span> effekt, eftersom vi ersatt en  <span>logaritm</span> av en  <span>potens</span> med endast  <span>potensens</span>  <span>exponent</span>. ",steps:{logpowtoprod:"Först omvandlar vi  <span>logaritmen</span> av en  <span>potens</span> till en  <span>produkt</span> av  <span>potensens</span>  <span>exponent</span> och  <span>logaritmen</span> av  <span>basen</span>.",logbasetoone:"Nu har vi en  <span>logaritm</span> av sin egen  <span>bas</span>, vilket kan omvandlas till  <span>talet 1</span>.",finallyremove1fac:"Vi  <span>tar bort</span>  <span>faktorn</span>  <span>1</span>, och nu återstår endast  <span>exponenten</span> från ursprungsuttryckets  <span>potens</span>!"}},en:{name:"collapse logarithm of base power",explanation:"Using the fact that a  <span>logarithm</span> of a  <span>power</span> can be flattened to a  <span>product</span> of the  <span>power</span>  <span>exponent</span> and the  <span>logarithm</span> of the  <span>power base</span>, a  <span>logarithm</span> of a  <span>power</span> with the same  <span>base</span> as the  <span>logarithm</span> can be  <span>collapsed</span>. ",targets:"a  <span>logarithm</span> of a  <span>power</span> with the same  <span>base</span> as the  <span>logarithm</span> ",returns:"the  <span>power</span>  <span>exponent</span> ",effect:"This is a  <span>simplifying operation</span>, as we replace a  <span>logarithm</span> of a  <span>power</span> with just the  <span>power</span>  <span>exponent</span>. ",steps:{logpowtoprod:"First we rewrite the  <span>logarithm</span> of a  <span>power</span> to a  <span>product</span> of the  <span>power</span>  <span>exponent</span> and the  <span>logarithm</span> of the  <span>base</span>.",logbasetoone:"Now we have a  <span>logarithm</span> of its own  <span>base</span>, which can be replaced by the  <span>number 1</span>.",finallyremove1fac:"Finally we  <span>remove</span> the  <span>factor</span>  <span>1</span>, and only the  <span>exponent</span> from the original  <span>power</span> remains!"}}},logOneToZero:{id:198,sv:{name:"kollapsa logaritm av 1 till 0",explanation:"Eftersom  <span>talet 1</span> kan skrivas om till en  <span>potens</span> med  <span>exponenten</span>  <span>0</span>, så kan en  <span>logaritm</span> av  <span>talet 1</span> omvandlas till  <span>0</span>, oavsett vilken  <span>bas</span> den har. ",targets:"en  <span>logaritm</span> av  <span>talet 1</span> ",returns:" <span>talet 0</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi ersätter en  <span>logaritm</span> med  <span>talet 0</span>. ",steps:{turnonetopow:"Först skriver vi om  <span>talet 1</span> till en  <span>potens</span> med  <span>exponenten</span>  <span>0</span>. Vilken  <span>bas</span> vi väljer spelar ingen roll.",flattenlogtoprod:"Nu har vi en  <span>logaritm</span> av en  <span>potens</span>, vilket vi kan göra till en  <span>produkt</span> med  <span>potensens</span>  <span>exponent</span> som  <span>faktor</span>.",thenturntozero:"Eftersom  <span>exponenten</span> var  <span>0</span> har vi nu en  <span>produkt</span> med  <span>faktor</span>  <span>0</span>, vilket vi kan  <span>kollapsa</span> till  <span>talet 0</span>!"}},en:{name:"collapse logarithm of 1 to 0",explanation:"Since the  <span>number 1</span> can be rewritten as a  <span>power</span> with  <span>exponent</span>  <span>0</span>, a  <span>logarithm</span> of the  <span>number 1</span> can always be transformed to  <span>0</span>, regardless which  <span>base</span> it has. ",targets:"a  <span>logarithm</span> of the  <span>number 1</span> ",returns:"the  <span>number 0</span> ",effect:"This is a  <span>simplifying operation</span>, since we replace a  <span>logarithm</span> with the  <span>number 0</span>. ",steps:{turnonetopow:"First we rewrite the  <span>number 1</span> to a  <span>power</span> with  <span>exponent</span>  <span>0</span>. What  <span>base</span> we choose doesn't matter.",flattenlogtoprod:"Now we have a  <span>logarithm</span> of a  <span>power</span>, which we can turn into a  <span>product</span> with the  <span>power</span>  <span>exponent</span> as a  <span>factor</span>.",thenturntozero:"Since the  <span>exponent</span> was  <span>0</span> we now have a  <span>product</span> with a  <span>factor</span>  <span>0</span>, which we can  <span>collapse</span> to the  <span>number 0</span>!"}}},flattenLogOfSecretPowNum:{id:199,sv:{name:"kollapsa logaritm av basfaktor",explanation:"Vi kan  <span>kollapsa</span> en  <span>logaritm</span> av ett  <span>tal</span> som är en  <span>potens</span> av  <span>logaritmens</span>  <span>bas</span> genom att skriva om  <span>talet</span> som den  <span>potensen</span>. ",targets:"en  <span>logaritm</span> av ett  <span>heltal</span> som är en  <span>potens</span> avlogaritmens  <span>bas</span> ",returns:"ett  <span>heltal</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi ersätter en  <span>logaritm</span> med ett  <span>heltal</span>. ",steps:{numtopow:"Först skriver vi om  <span>talet</span> som en  <span>potens</span> av  <span>logaritmens</span>  <span>bas</span>.",flattenthelogofpow:"Det ger oss en  <span>logaritm</span> av en  <span>potens</span> med samma  <span>bas</span> som  <span>logaritmen</span>, vilket kan  <span>kollapsas</span> till  <span>potensens</span>  <span>exponent</span>!"}},en:{name:"collapse logarithm of base factor",explanation:"We can  <span>collapse</span> a  <span>logarithm</span> of a  <span>number</span> which is a  <span>power</span> of the  <span>logarithm</span>  <span>base</span>, by rewriting the  <span>number</span> as that  <span>power</span>. ",targets:"a  <span>logarithm</span> of an  <span>integer</span> which is a  <span>power</span> of the  <span>logarithm</span>  <span>base</span> ",returns:"an  <span>integer</span> ",effect:"This is a  <span>simplifying operation</span> since we replace a  <span>logarithm</span> with an  <span>integer</span>. ",steps:{numtopow:"First we rewrite the  <span>integer</span> as a  <span>power</span> with the same  <span>base</span> as the  <span>logarithm</span>.",flattenthelogofpow:"This gives us a  <span>logarithm</span> of a  <span>power</span> with the same  <span>base</span> as the  <span>logarithm</span>, which can be  <span>collapsed</span> to the  <span>power</span>  <span>exponent</span>!"}}},logOfProdToSum:{id:200,sv:{name:"dela upp logaritm av produkt",explanation:"Detta är ännu en av de fundamentala logaritmlagarna som är ganska lurig att förstå, men en  <span>logaritm</span> av en  <span>produkt</span> kan skrivas om som  <span>summan</span> av  <span>logaritmerna</span> av  <span>produktens</span>  <span>faktorer</span>. ",targets:"en  <span>logaritm</span> av en  <span>produkt</span> ",returns:"en  <span>summa</span> av  <span>logaritmerna</span> av  <span>produktens</span>  <span>faktorer</span> ",effect:"Detta är en  <span>förenklande operation</span>. Trots att vi nu har fler  <span>logaritmer</span> så är det en fördel för fortsatt  <span>förenkling</span> att vi har  <span>logaritmer</span> av mindre komplexa  <span>uttryck</span>. "},en:{name:"split logarithm of product",explanation:"This is another one of the fundamental  <span>logarithm</span> laws that are hard to understand, but the  <span>logarithm</span> of a  <span>product</span> can be rewritten as the  <span>sum</span> of the  <span>logarithms</span> of the  <span>product factors</span>. ",targets:"a  <span>logarithm</span> of a  <span>product</span> ",returns:"a  <span>sum</span> of the  <span>logarithms</span> of the  <span>product factors</span> ",effect:"This is a  <span>simplifying operation</span>.  <span>Even though</span> we now have more  <span>logarithms</span>, they are easier to  <span>simplify</span> further than the original  <span>logarithm</span> of a  <span>product</span>. "}},flattenLogOfContainedPowNum:{id:201,sv:{name:"kollapsa logaritm delbar med basen",explanation:"Vi kan  <span>kollapsa</span> en  <span>logaritm</span> av ett  <span>tal</span> som är delbart med  <span>logaritmens</span>  <span>bas</span>, genom att  <span>faktorisera</span>  <span>talet</span> och dela upp  <span>logaritmen</span>. ",targets:"en  <span>logaritm</span> av ett  <span>heltal</span> som är delbart med  <span>logaritmens</span>  <span>bas</span> ",returns:"en  <span>summa</span> av ett  <span>heltal</span> och en  <span>logaritm</span> ",effect:"Detta är en  <span>förenklande operation</span>. Även om vi nu har två  <span>termer</span> istället för en så har vi en mindre  <span>logaritm</span>, och därför ett mer exakt  <span>uttryck</span>. ",steps:{factorisenumtofreesecretnum:"Först delar vi upp  <span>talet</span> i  <span>faktorer</span> för att frigöra dess delbarhet med  <span>logaritmens</span>  <span>bas</span>.",splitlogtosum:"Nu har vi en  <span>logaritm</span> av en  <span>produkt</span>, vilket vi kan dela upp i en  <span>summa</span> av två  <span>logaritmer</span>. Den vänstra kan vi nu  <span>kollapsa</span> vidare!",nowflattenbaselog:" <span>Talet</span> i den vänstra  <span>logaritmen</span> är  <span>logaritmens</span>  <span>bas</span>, vilket vi kan  <span>kollapsa</span> till  <span>talet 1</span>!",nowlogoutsecretnum:" <span>Talet</span> i den vänstra  <span>logaritmen</span> är en  <span>potens</span> av  <span>logaritmens</span>  <span>bas</span>, vilket vi kan  <span>kollapsa</span>!"}},en:{name:"collapse logarithm divisible by base",explanation:"A  <span>logarithm</span> of a  <span>number</span> divisible by the  <span>logarithm</span>  <span>base</span> can be  <span>collapsed</span>, by factorising the  <span>number</span> and  <span>splitting</span> the  <span>logarithm</span>. ",targets:"a  <span>logarithm</span> of an  <span>integer</span> divisible by the  <span>logarithm</span>  <span>base</span> ",returns:"a  <span>sum</span> of an  <span>integer</span> and a  <span>logarithm</span> ",effect:"This is a  <span>simplifying operation</span>.  <span>Even though</span> we now have two  <span>terms</span> instead of one, we have a smaller  <span>logarithm</span> and therefore a more exact  <span>expression</span>. ",steps:{factorisenumtofreesecretnum:"First we  <span>split</span> the  <span>number</span> into  <span>factors</span> to expose its  <span>divisibility</span> with the  <span>logarithm</span>  <span>base</span>.",splitlogtosum:"Now we have a  <span>logarithm</span> of a  <span>product</span>, which we  <span>split</span> into a  <span>sum</span> of two  <span>logarithms</span>. The left of these can now be  <span>collapsed</span>.",nowflattenbaselog:"The  <span>number</span> in the left  <span>logarithm</span> is the  <span>logarithm</span>  <span>base</span>, which we can  <span>collapse</span> to the  <span>number 1</span>!",nowlogoutsecretnum:"The  <span>number</span> in the left  <span>logarithm</span> is a  <span>power</span> of the  <span>logarithm</span>  <span>base</span>, which we can  <span>collapse</span>!"}}},logOfFracToSum:{id:202,sv:{name:"dela upp logaritm av kvot",explanation:"Eftersom vi får omvandla  <span>logaritmen</span> av en  <span>produkt</span> till en  <span>summa</span>, så kan vi också omvandla  <span>logaritmen</span> av en  <span>kvot</span> till en  <span>summa</span>. ",targets:"en  <span>logaritm</span> av en  <span>kvot</span> ",returns:"en  <span>summa</span> av  <span>logaritmerna</span> av  <span>täljaren</span> och  <span>nämnaren</span>, den sistnämna  <span>negativ</span> ",effect:"Detta är en  <span>förenklande operation</span>. Trots att vi nu har fler  <span>logaritmer</span> så är det en fördel för fortsatt  <span>förenkling</span> att vi har  <span>logaritmer</span> av mindre komplexa  <span>uttryck</span>. ",steps:{extractnumer:"Först bryter vi ut hela  <span>täljaren</span> från  <span>kvoten</span>. Notera att vi därmed har omvandlat  <span>kvoten</span> till en  <span>produkt</span>!",movedenomtonumer:"Innan vi går vidare så gör vi om det som återstår av  <span>kvoten</span> till en  <span>potens</span>.",splitlogtosum:"Nu har vi en  <span>logaritm</span> av en  <span>produkt</span>, vilket vi kan omvandla till en  <span>summa</span>!",shootdownexp:"I den sista  <span>logaritmen</span> så lyfter vi ut  <span>exponenten</span>  <span>-1</span>.",collapseneg:"Slutligen  <span>kollapsar</span> vi  <span>faktorn</span>  <span>-1</span> genom att göra den sista  <span>logaritmen</span>  <span>negativ</span>."}},en:{name:"split logarithm of fraction",explanation:"Since we can rewrite the  <span>logarithm</span> of a  <span>product</span> to a  <span>sum</span>, we can also transform a  <span>logarithm</span> of a  <span>fraction</span> to a  <span>sum</span>. ",targets:"a  <span>logarithm</span> of a  <span>fraction</span> ",returns:"a  <span>sum</span> of the  <span>logarithms</span> of the  <span>numerator</span> and the  <span>denominator</span>, the latter  <span>negative</span> ",effect:"This is a  <span>simplifying operation</span>.  <span>Even though</span> we now have more  <span>logarithms</span>, they are easier to  <span>simplify</span> further than the original  <span>logarithm</span> of a  <span>product</span>. ",steps:{extractnumer:"First we extract the whole  <span>numerator</span> from the  <span>fraction</span>. Note that this means we have transformed the faction into a  <span>product</span>!",movedenomtonumer:"Before we proceed we  <span>rephrase</span> what remains of the  <span>fraction</span> into a  <span>power</span>.",splitlogtosum:"Now we have a  <span>logarithm</span> of a  <span>product</span>, which we can rewrite to a  <span>sum</span>!",shootdownexp:"We extract the  <span>exponent</span>  <span>-1</span> from the final  <span>logarithm</span>.",collapseneg:"Finally we  <span>collapse</span> the  <span>factor</span>  <span>-1</span> by letting it negate the final  <span>logarithm</span>."}}},powWithBaseLogExpToExp:{id:204,sv:{name:"kollapsa logaritmexponent av bas",explanation:"Eftersom  <span>logaritmen</span> representerar den  <span>exponent</span> som  <span>logaritmens</span>  <span>bas</span> måste upphöjas till för att bli det  <span>tal</span> vi tar  <span>logaritmen</span> av, så kan vi  <span>kollapsa</span> en  <span>potens</span> där  <span>exponenten</span> är en  <span>logaritm</span> med samma  <span>bas</span> som  <span>potensen</span>. ",targets:"en  <span>potens</span> där  <span>exponenten</span> är en  <span>logaritm</span> med samma  <span>bas</span> som  <span>potensen</span> ",returns:"målet för  <span>logaritmen</span> i  <span>exponenten</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi har kollapsat en  <span>potens</span> så att endast målet för  <span>exponentens</span>  <span>logaritm</span> återstår. "},en:{name:"collapse logarithm exponent of base",explanation:"Since a  <span>logarithm</span> represents the  <span>exponent</span> to which the  <span>logarithm</span>  <span>base</span> must be raised in order to become the target of the  <span>logarithm</span>, we can  <span>collapse</span> a  <span>power</span> where the  <span>exponent</span> is a  <span>logarithm</span> with the same  <span>base</span> as the  <span>power</span>. ",targets:"a  <span>power</span> where the  <span>exponent</span> is a  <span>logarithm</span> with the same  <span>base</span> as the  <span>power</span> ",returns:"the target of the  <span>exponent</span>  <span>logarithm</span> ",effect:"This is a  <span>simplifying operation</span> as we have  <span>collapsed</span> a  <span>power</span>, leaving only the target of the  <span>exponent</span>  <span>logarithm</span>. "}},collapsePowWithBaseLogFacInExp:{id:205,sv:{name:"kollapsa logaritmfaktor i exponent",explanation:"En  <span>potens</span> där  <span>exponenten</span> innehåller en logaritmfaktor med samma  <span>bas</span> som  <span>potensen</span> kan  <span>kollapsas</span>. ",targets:"en  <span>potens</span> där  <span>exponenten</span> är en  <span>produkt</span> innehållandes en logaritmfaktor med samma  <span>bas</span> som  <span>potensen</span> ",returns:"en  <span>potens</span> där  <span>basen</span> är föremålet för  <span>logaritmen</span> och  <span>exponenten</span> är de övriga  <span>faktorerna</span> från ursprungspotensens  <span>exponent</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom den nya  <span>potensen</span> har färre beståndsdelar och ingen  <span>logaritm</span>. ",steps:{buildtop:"Först använder potenslagarna för att isolera en  <span>potens</span> där logaritmfaktorn utgör  <span>exponenten</span>.",collapseinner:"Den inre  <span>potensen</span> har nu en  <span>exponent</span> som är en  <span>logaritm</span> med samma  <span>bas</span> som  <span>potensen</span>, vilket kan  <span>kollapsas</span>!"}},en:{name:"collapse logarithm factor in exponent",explanation:"A  <span>power</span> where the  <span>exponent</span> contains a  <span>logarithm</span>  <span>factor</span> with the same  <span>base</span> as the  <span>power</span> can be  <span>collapsed</span>. ",targets:"a  <span>power</span> where the  <span>exponent</span> is a  <span>product</span> containing a  <span>logarithm</span>  <span>factor</span> with the same  <span>base</span> as the  <span>power</span> ",returns:"a  <span>power</span> where the  <span>base</span> is the  <span>logarithm</span> target and the  <span>exponent</span> is made up by the remaining  <span>factors</span> from the original  <span>exponent</span> ",effect:"This is a  <span>simplifying operation</span>, since the new  <span>power</span> has fewer parts and no  <span>logarithm</span>. ",steps:{buildtop:"First we isolate a  <span>power</span> where the  <span>logarithm</span>  <span>factor</span> is the  <span>exponent</span>.",collapseinner:"The inner  <span>power</span> now has an  <span>exponent</span> which is a  <span>logarithm</span> with the same  <span>base</span> as the  <span>power</span>, which can be  <span>collapsed</span>!"}}},collapseAbsNeg:{id:231,sv:{name:"kollapsa absolutbelopp av negation",explanation:"Eftersom  <span>absolutbeloppet</span> av ett  <span>uttryck</span> är  <span>uttryckets</span> positiva värde, så spelar det ingen roll om  <span>uttrycket</span> är negerat. Därför kan vi  <span>ta bort</span>  <span>negationen</span> kring ett  <span>uttryck</span> i ett  <span>absolutbelopp</span>. ",targets:"ett  <span>absolutbelopp</span> av en  <span>negation</span> ",returns:"ett  <span>absolutbelopp</span> av det tidigare negerade  <span>uttrycket</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi  <span>tagit bort</span> en  <span>negation</span>. "},en:{name:"collapse absolute value of negation",explanation:"Since the  <span>absolute value</span> of an  <span>expression</span> is the positive value of that  <span>expression</span>, it doesn't matter if the  <span>expression</span> is  <span>negative</span> or not. Therefore we can  <span>remove</span> a  <span>negation</span> from an  <span>expression</span> in an  <span>absolute value</span>. ",targets:"an  <span>absolute value</span> of a  <span>negation</span> ",returns:"an  <span>absolute value</span> of the formerly negated  <span>expression</span> ",effect:"This is a  <span>simplifying operation</span> since we have  <span>removed</span> a  <span>negation</span>. "}},collapseAbsNum:{id:183,sv:{name:"kollapsa absolutbelopp av tal",explanation:" <span>Absolutbeloppet</span> av ett  <span>tal</span> är det positiva  <span>talet</span>. ",targets:"ett  <span>absolutbelopp</span> av ett  <span>heltal</span> eller  <span>decimaltal</span> ",returns:"det positiva  <span>talet</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi inte längre har något  <span>absolutbelopp</span>. ",steps:{writeasbranch:"Först skriver vi  <span>absolutbeloppet</span> som en  <span>logisk förgrening</span>.",notlessthan0:"Vi utvärderar att  <span>talet</span> inte är mindre än  <span>0</span>.",selectposbranch:"Slutligen väljer vi  <span>annars-grenen</span> som ju har det positiva värdet!"}},en:{name:"collapse absolute value of number",explanation:"The  <span>absolute value</span> of a  <span>number</span> is the positive  <span>number</span>. ",targets:"an  <span>absolute value</span> of an  <span>integer</span> or  <span>decimal number</span> ",returns:"the positive  <span>number</span> ",effect:"This is a  <span>simplifying operation</span> since we no longer have an  <span>absolute value</span>. ",steps:{writeasbranch:"First we write the  <span>absolute value</span> as a  <span>logic branching</span>.",notlessthan0:"We then evaluate that the  <span>number</span> isn't lower than  <span>0</span>.",selectposbranch:"Finally we select the  <span>else-branch</span> which represents the positive value!"}}},collapseAbsProd:{id:184,sv:{name:"kollapsa absolutbelopp av produkt",explanation:" <span>Absolutbeloppet</span> av en  <span>produkt</span> är samma som  <span>produkten</span> av  <span>absolutbeloppen</span> av  <span>faktorerna</span>. ",targets:"ett  <span>absolutbelopp</span> av en  <span>produkt</span> ",returns:"en  <span>produkt</span> av  <span>absolutbelopp</span> ",effect:"Detta är en  <span>förenklande operation</span>. Trots att vi nu har fler  <span>absolutbelopp</span> så är det enklare att fortsätta förenkla  <span>absolutbelopp</span> av enskilda  <span>faktorer</span>. "},en:{name:"collapse absolute value of product",explanation:"The  <span>absolute value</span> of a  <span>product</span> is the same as the  <span>product</span> of the  <span>absolute values</span> of the  <span>factors</span>. ",targets:"an  <span>absolute value</span> of a  <span>product</span> ",returns:"a  <span>product</span> of  <span>absolute values</span> ",effect:"This is a  <span>simplifying operation</span>.  <span>Even though</span> we now have more  <span>absolute values</span>, it is easier to continue to  <span>simplify</span>  <span>absolute values</span> of lone  <span>factors</span>. "}},collapseAbsPow:{id:185,sv:{name:"kollapsa absolutbelopp av potens",explanation:" <span>Absolutbeloppet</span> av en  <span>potens</span> är samma som  <span>potensen</span> av  <span>absolutbeloppet</span> av  <span>basen</span>, med samma  <span>exponent</span> som innan. Om  <span>exponenten</span> är  <span>negativ</span> så gör det ändå inte  <span>potensens</span> värde negativt. ",targets:"ett  <span>absolutbelopp</span> av en  <span>potens</span> ",returns:"en  <span>potens</span> där  <span>basen</span> är ett  <span>absolutbelopp</span> ",effect:"Detta är en  <span>förenklande operation</span>. Vi har fortfarande ett  <span>absolutbelopp</span>, men det är enklare än tidigare. "},en:{name:"collapse absolute value of power",explanation:"The  <span>absolute value</span> of a  <span>power</span> is the same as the  <span>power</span> of the  <span>absolute values</span> of the  <span>base</span> and the same  <span>exponent</span> as before. Whether the  <span>exponent</span> is  <span>negative</span> or not does not affect whether the value of the  <span>power</span> is positive or  <span>negative</span>. ",targets:"an  <span>absolute value</span> of a  <span>power</span> ",returns:"a  <span>power</span> where the  <span>base</span> is an  <span>absolute values</span> ",effect:"This is a  <span>simplifying operation</span>.  <span>Even though</span> we still have an  <span>absolute value</span>, it is simpler than before. "}},collapseAbsFrac:{id:187,sv:{name:"kollapsa absolutbelopp av kvot",explanation:" <span>Absolutbeloppet</span> av en  <span>kvot</span> är samma som  <span>kvoten</span> av  <span>absolutbeloppet</span> av  <span>täljaren</span> och  <span>absolutbeloppet</span> av  <span>nämnaren</span>. ",targets:"ett  <span>absolutbelopp</span> av en  <span>kvot</span> ",returns:"en  <span>kvot</span> av  <span>absolutbelopp</span> ",effect:"Detta är en  <span>förenklande operation</span>. Trots att vi nu har två  <span>absolutbelopp</span> så är det enklare att fortsätta förenkla dessa  <span>absolutbelopp</span> vidare. "},en:{name:"collapse absolute value of fraction",explanation:"The  <span>absolute value</span> of a  <span>fraction</span> is the same as the  <span>fraction</span> of the  <span>absolute values</span> of the  <span>numerator</span> and the  <span>absolute value</span> of the  <span>denominator</span>. ",targets:"an  <span>absolute value</span> of a  <span>fraction</span> ",returns:"a  <span>fraction</span> of  <span>absolute values</span> ",effect:"This is a  <span>simplifying operation</span>.  <span>Even though</span> we now have two  <span>absolute values</span>, it is easier to continue to  <span>simplify</span> these simpler  <span>absolute values</span> further. "}},fracOfPowsToPowOfFrac:{id:310,sv:{name:"omvandla kvot av potenser till potens",explanation:"En  <span>kvot</span> av  <span>potenser</span> med identiska  <span>exponenter</span> kan omformuleras till en  <span>potens</span> av en  <span>kvot</span>, där  <span>kvoten</span> består av de ursprungliga  <span>potensernas</span>  <span>baser</span>. ",targets:"en  <span>kvot</span> av  <span>potenser</span> med identiska  <span>exponenter</span> ",returns:"en  <span>potens</span> där  <span>basen</span> är en  <span>kvot</span> ",effect:"Detta är en  <span>komplicerande operation</span>. Trots att vi nu slipper upprepa  <span>exponenten</span> så är det svårare att förenkla detta  <span>uttryck</span> vidare. ",steps:{extractdenom:"Vi bryter ut  <span>nämnaren</span> ur  <span>kvoten</span>.",movetonumer:"Nu gör vi om den tidigare  <span>nämnaren</span> till en  <span>potens</span> med  <span>negativ exponent</span>.",splitnegexp:"Vi bryter ut  <span>negationen</span> från  <span>exponenten</span>.",buildtower:"Nu bildar vi en inre  <span>potens</span> med  <span>-1</span> som  <span>exponent</span>.",nowbacktofrac:"Den inre  <span>potensen</span> kan vi nu göra om till en  <span>kvot</span>.",mergeit:"Nu har vi en  <span>produkt</span> av två  <span>potensfaktorer</span> med samma  <span>exponent</span>, vilket vi kan  <span>slå ihop</span>!",multintofrac:"Vi multiplicerar ihop  <span>potensens</span>  <span>produktbas</span> till en  <span>kvot</span>."}},en:{name:"transform fraction of powers to power",explanation:"A  <span>fraction</span> of  <span>powers</span> with identical  <span>exponents</span> can be rewritten as a  <span>power</span> of a  <span>fraction</span>, where the  <span>fraction</span> is made up by the  <span>bases</span> of the original  <span>powers</span>. ",targets:"a  <span>fraction</span> of  <span>powers</span> with identical  <span>exponents</span> ",returns:"a  <span>power</span> with a  <span>fraction base</span> ",effect:"This is a  <span>complicating operation</span>.  <span>Even though</span> we now don't have to repeat the  <span>exponent</span>, the original  <span>expression</span> was easier to  <span>simplify</span> further. ",steps:{extractdenom:"We extract the  <span>denominator</span>.",movetonumer:"We turn the former  <span>denominator</span> into a  <span>power</span> with  <span>negative exponent</span>.",splitnegexp:"That  <span>negation</span> we  <span>split</span> out from the  <span>exponent</span>.",buildtower:"Now we make an inner  <span>power</span> with the  <span>-1</span> as  <span>exponent</span>.",nowbacktofrac:"That inner  <span>power</span> can now be rephrased as a  <span>fraction</span>.",mergeit:"This gives us a  <span>product</span> of two  <span>power factors</span> with identical  <span>exponent</span>, which we can  <span>merge</span>!",multintofrac:"We multiply the  <span>product base</span> together into a  <span>fraction</span>."}}},approxDecNumPow:{id:309,sv:{name:"approximera potens av decimaltal",explanation:"En numerisk  <span>potens</span> där  <span>basen</span> och/eller  <span>exponenten</span> är  <span>decimaltal</span> kan skrivas på  <span>decimalform</span>. ",targets:"en numerisk  <span>potens</span> där  <span>bas</span> och/eller  <span>exponent</span> är  <span>decimaltal</span> ",returns:"ett  <span>decimaltal</span> ",effect:"Denna  <span>operation</span>  <span>skriver om på decimalform</span>. "},en:{name:"approximate power of decimal numbers",explanation:"A numeric  <span>power</span> where the  <span>base</span> and/or the  <span>exponent</span> are  <span>decimal</span>  <span>numbers</span> can be rewritten as a  <span>decimal number</span>. ",targets:"a numeric  <span>power</span> where the  <span>base</span> and/or  <span>exponent</span> are  <span>decimal</span>  <span>numbers</span> ",returns:"a  <span>decimal number</span> ",effect:"This  <span>operation</span>  <span>rewrites to decimal form</span>. "}},sameExpFacProdToPow:{id:308,sv:{name:"omvandla produkt till potens",explanation:"Om en  <span>produkt</span> består av  <span>potensfaktorer</span> med identiska  <span>exponenter</span> så kan dessa istället formuleras som en enda  <span>potens</span>, där  <span>basen</span> blir  <span>produkten</span> av  <span>potensfaktorernas</span>  <span>baser</span>. ",targets:"en  <span>produkt</span> av  <span>potensfaktorer</span> med identiska  <span>exponenter</span> ",returns:"en  <span>potens</span> med  <span>produktbas</span> ",effect:"Detta räknas som en  <span>komplicerande operation</span>. Visserligen slipper vi nu upprepa  <span>exponenten</span>, men det är lättare att förenkla vidare när  <span>baserna</span> inte nästlas i en  <span>potens</span>. "},en:{name:"transform product to power",explanation:"If a  <span>product</span> consists of  <span>power factors</span> that all have identical  <span>exponents</span>, the  <span>product</span> can be phrased as a single  <span>power</span> where the  <span>base</span> is a  <span>product</span> of all  <span>power factor</span>  <span>bases</span>. ",targets:"a  <span>product</span> of  <span>power factors</span> with identical  <span>exponents</span> ",returns:"a  <span>power</span> with  <span>product base</span> ",effect:"This counts as a  <span>complicating operation</span>.  <span>Even though</span> we now don't have to repeat the  <span>exponent</span>, it is harder to  <span>simplify</span> further now that the  <span>bases</span> are nested inside a  <span>product base</span>. "}},fixPowWithBaseLogTermInExp:{id:220,sv:{name:"kollapsa logaritmterm i exponent",explanation:"Vi kan förenkla en  <span>potens</span> med  <span>summaexponent</span> som innehåller en  <span>logaritm</span> med samma  <span>bas</span> som  <span>potensen</span>, genom att först dela upp  <span>potensen</span> och sedan  <span>kollapsa</span> delen som får  <span>logaritmen</span> som  <span>exponent</span>. ",targets:"en  <span>potens</span> med  <span>summaexponent</span> där en  <span>term</span> är en  <span>logaritm</span> med samma  <span>bas</span> som  <span>potensen</span> ",returns:"en  <span>produkt</span> av  <span>logaritmens</span> innehåll och  <span>potensen</span> med  <span>logaritmen</span> borttagen ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi blivit av med  <span>logaritmen</span>. ",steps:{extractexplogterm:"Först delar vi upp  <span>potensen</span> i två  <span>potenser</span>, där vi låter den vänstra få logaritmtermen som  <span>exponent</span>.",nowflatten:"Det ger oss en  <span>potens</span> där  <span>exponenten</span> är en  <span>logaritm</span> med samma  <span>bas</span> som  <span>potensen</span>, vilket vi kan  <span>kollapsa</span> till att endast bli  <span>logaritmens</span> innehåll!"}},en:{name:"collapse logarithm term in exponent",explanation:"We can  <span>simplify</span> a  <span>power</span> with a  <span>sum exponent</span> containing a  <span>logarithm</span> with the same  <span>base</span> as the  <span>power</span>, by first  <span>splitting up</span> the  <span>power</span> and then  <span>collapse</span> the part with the  <span>logarithm</span>  <span>exponent</span>. ",targets:"a  <span>power</span> with a  <span>sum exponent</span> where one  <span>term</span> is a  <span>logarithm</span> with the same  <span>base</span> as the  <span>power</span> ",returns:"a  <span>product</span> of the  <span>logarithm</span> content and the remainder of the  <span>power</span> ",effect:"This is a  <span>simplifying operation</span> as we no longer have a  <span>logarithm</span>. ",steps:{extractexplogterm:"First we  <span>split</span> the  <span>power</span> in two, making the left  <span>exponent</span> the  <span>logarithm</span>  <span>term</span>.",nowflatten:"That gave us a  <span>power</span> where the  <span>exponent</span> is a  <span>logarithm</span> with the same  <span>base</span> as the  <span>power</span>, which we can  <span>collapse</span>!"}}},oneExpPowerToBase:{id:1,sv:{name:"ta bort exponent 1",explanation:" <span>Exponenten</span> berättar hur många gånger vi multiplicerar  <span>basen</span> med sig själv. Har vi bara en enda  <span>faktor</span> så har vi inte utfört någon  <span>multiplikation</span>, så därför har en  <span>exponent</span> bestående av  <span>talet 1</span> ingen effekt! Denna kan därför  <span>tas bort</span>. ",targets:" <span>Potenser</span> med  <span>exponent</span>  <span>1</span> ",returns:" <span>Potensens</span>  <span>bas</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi  <span>tagit bort</span>  <span>exponenten</span> och  <span>potensen</span> därmed  <span>kollapsas</span> så att bara  <span>basen</span> blir kvar. "},en:{name:"remove exponent 1",explanation:"The  <span>exponent</span> tells us how many times we multiply the  <span>base</span> with itself. But if we have only one  <span>factor</span> there is no  <span>multiplication</span>, and that's why an  <span>exponent</span> consisting of the  <span>number 1</span> has no effect! It can therefore be  <span>removed</span>. ",targets:" <span>Powers</span> with  <span>exponent</span>  <span>1</span> ",returns:"The  <span>base</span> of the  <span>power</span> ",effect:"This is a  <span>simplifying operation</span>, since we have  <span>removed</span> the  <span>exponent</span> causing the  <span>power</span> to  <span>collapse</span> to the  <span>base</span>. "}},zeroExpPowerToOne:{id:2,sv:{name:"omvandla potens till 1",explanation:" <span>Exponenten</span> berättar hur många gånger vi multiplicerar  <span>basen</span> med sig själv. Men har vi  <span>0</span>  <span>faktorer</span> så återstår bara det neutrala elementet för  <span>multiplikation</span>, nämligen  <span>1</span>. ",targets:"en  <span>potens</span> med  <span>exponent</span>  <span>0</span> och  <span>bas</span> skiljd från  <span>0</span> ",returns:" <span>talet 1</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom den  <span>kollapsar</span>  <span>potensen</span> till  <span>talet 1</span> ",steps:{turnzeroexpto1minus1:"Först delar vi upp  <span>exponenten</span>  <span>0</span> i en  <span>summa</span>, för att sedan kunna dela upp  <span>potensen</span>.",splitpow:"Vi delar upp  <span>potensen</span> i två. De nya  <span>potenserna</span> får  <span>exponenterna</span>  <span>1</span> och  <span>-1</span>.",dropexp1:" <span>Exponenten</span>  <span>1</span>  <span>tar vi bort</span>.",movetodenom:"Den andra  <span>potensen</span> flyttar vi ner i  <span>nämnaren</span>, vilket gör att  <span>exponenten</span>  <a href='#' class='wordlink' linkto='swapsign'>byter tecken</a>, blir  <span>1</span> och försvinner!",andcollapsefracto1:"Nu har vi en  <span>kvot</span> med identisk  <span>täljare</span> och  <span>nämnare</span>, vilket vi  <span>kollapsar</span> till  <span>1</span>!"}},en:{name:"transform power to 1",explanation:"The  <span>exponent</span> tells us how many times we multiply the  <span>base</span> with itself. But if we have  <span>0</span>  <span>factors</span> we just get the neutral element of  <span>multiplication</span>, namely  <span>1</span>. ",targets:"a  <span>power</span> with  <span>exponent</span>  <span>0</span> and  <span>base</span> not equal to  <span>0</span> ",returns:"the  <span>number 1</span> ",effect:"This is a  <span>simplifying operation</span>, since it  <span>collapses</span> the  <span>power</span> to the  <span>number 1</span> ",steps:{turnzeroexpto1minus1:"First we  <span>split</span> the  <span>exponent</span>  <span>0</span> into a  <span>sum</span>, which will enable us to  <span>split</span> the  <span>power</span>.",splitpow:"Now we  <span>split</span> the  <span>power</span> in two. The new  <span>powers</span> get the  <span>exponents</span>  <span>1</span> and  <span>-1</span>.",dropexp1:"The  <span>exponent</span>  <span>1</span> can be  <span>removed</span>.",movetodenom:"The other  <span>power</span> we move into the  <span>denominator</span>, which makes the  <span>exponent</span> become  <span>1</span> and disappear.",andcollapsefracto1:"Now we have a  <span>fraction</span> with identical  <span>numerator</span> and  <span>denominator</span>, which we can  <span>collapse</span> to  <span>1</span>!"}}},powBasePowToProdExp:{id:3,sv:{name:"kollapsa potens med potensbas",explanation:" <span>Exponenten</span> berättar hur många gånger vi multiplicerar  <span>basen</span> med sig själv. Därför, om vi har en  <span>potens</span> som  <span>bas</span>, så kan detta  <span>kollapsas</span> till en enda  <span>potens</span>, där  <span>exponenten</span> är  <span>produkten</span> av den inre och yttre  <span>potensens</span>  <span>exponenter</span>. ",targets:" <span>Potenser</span> med en inre  <span>potens</span> som  <span>bas</span> ",returns:" <span>Potens</span> med  <span>produkt</span> som  <span>exponent</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom den resulterande  <span>potensen</span> inte är lika djupt nästlad. "},en:{name:"collapse power-base power",explanation:"The  <span>exponent</span> tells us how many times we multiply the  <span>base</span> with itself. If we use a  <span>power</span> as a  <span>base</span> in another  <span>power</span>, the outermost  <span>exponent</span> tells us to multiply the innermost  <span>base</span>  <span>even</span> more. Therefore, these two  <span>exponents</span> can be  <span>collapsed</span> to a single  <span>product</span>. ",targets:" <span>Powers</span> with a  <span>power</span> as  <span>base</span> ",returns:" <span>Power</span> with a  <span>product exponent</span> ",effect:"This is a  <span>simplifying operation</span>, since the resulting  <span>power</span> isn't as deeply nested. "}},mergeBiSameBasePowFacs:{id:4,sv:{name:"slå ihop två potensfaktorer",explanation:"En  <span>produkt</span> av två  <span>potenser</span> med samma  <span>bas</span> kan  <span>slås ihop</span> till en enda  <span>bas</span>, där  <span>exponenten</span> är  <span>summan</span> av de ingående  <span>potensernas</span>  <span>exponenter</span>. ",targets:"en  <span>produkt</span> av två  <span>potenser</span> med samma  <span>bas</span> ",returns:"en  <span>potens</span> med  <span>summaexponent</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi slipper upprepa  <span>basen</span>. "},en:{name:"merge two power factors",explanation:"A  <span>product</span> of two  <span>powers</span> with the same  <span>base</span> can be  <span>merged</span> into a singe  <span>power</span>, where the  <span>exponent</span> is the  <span>sum</span> of the  <span>exponents</span> of the participating  <span>powers</span>. ",targets:"a  <span>product</span> of two  <span>powers</span> with same  <span>base</span> ",returns:"a  <span>power</span> with  <span>sum exponent</span> ",effect:"This is a  <span>simplifying operation</span>, since we are no longer repeating the  <span>base</span>. "}},zeroBaseExpPowToUndefined:{id:5,sv:{name:"förbjud potens av nollor",explanation:"Att upphöja  <span>0</span> med  <span>0</span> är likvärdigt med att dela med  <span>0</span> - det saknar mening. Detta  <span>uttryck</span> är därför  <span>odefinierat</span>. ",targets:"en  <span>potens</span> med  <span>bas</span>  <span>0</span> och  <span>exponent</span>  <span>0</span> ",returns:" <span>odefinierat</span> ",effect:"Detta är en  <span>integritetsoperation</span>, då den omvandlar ogiltiga  <span>potenser</span> till  <span>odefinierat</span>. ",steps:{introducedenom1:"Först  <span>introducerar</span> vi en  <span>nämnare</span>  <span>1</span>.",turn1tozerobaseexppow:"Om vi tillåter  <span>potenser</span> med  <span>0</span> som  <span>bas</span> och  <span>exponent</span> så kan vi välja  <span>0</span> som  <span>bas</span> när vi förvandlar  <span>1</span> till  <span>potens</span> med  <span>0</span> som  <span>exponent</span>.",andthatpowtozero:"En  <span>potens</span> med  <span>0</span> som  <span>bas</span> kan vi omvandla till  <span>0</span>.",fracisnowundef:"Nu har vi en  <span>kvot</span> med  <span>0</span> som  <span>nämnare</span>, vilket är  <span>odefinierat</span>! Det betyder att vi inte kan tillåta  <span>potenser</span> med  <span>0</span> som  <span>bas</span> och  <span>exponent</span>, eftersom det var den som ledde hit."}},en:{name:"forbid power of zeroes",explanation:"Raising  <span>0</span> by  <span>0</span> is similar to dividing by  <span>0</span> - it lacks meaning. This  <span>expression</span> is therefore  <span>undefined</span>. ",targets:"a  <span>power</span> with  <span>base</span>  <span>0</span> and  <span>exponent</span>  <span>0</span> ",returns:" <span>undefined</span> ",effect:"This is an  <span>integrity operation</span>, since it turns invalid  <span>powers</span> into  <span>undefined</span>. ",steps:{introducedenom1:"First we  <span>introduce</span> a  <span>denominator</span>  <span>1</span>.",turn1tozerobaseexppow:"If we allow  <span>powers</span> with  <span>0</span> as  <span>base</span> and  <span>exponent</span>, we can choose  <span>0</span> as  <span>base</span> when we turn  <span>1</span> into a  <span>power</span> with  <span>exponent</span>  <span>0</span>.",andthatpowtozero:"A  <span>power</span> with  <span>0</span> as  <span>base</span> can be turned into  <span>0</span>.",fracisnowundef:"Now we have a  <span>fraction</span> with  <span>denominator</span>  <span>0</span>, which is  <span>undefined</span>! This means that we cannot allow  <span>powers</span> with  <span>0</span> as  <span>base</span> and  <span>exponent</span>, as that is what lead us here."}}},biProdBasePowToProd:{id:6,sv:{name:"dela potens med produktbas",explanation:"Eftersom  <span>exponenten</span> säger hur många gånger vi skall multiplicera  <span>basen</span> med sig själv, så måste en basprodukt kunna delas upp i individuella  <span>potenser</span>. ",targets:"en  <span>potens</span> med  <span>produkt</span> som  <span>bas</span> ",returns:"en  <span>produkt</span> med två  <span>potensfaktorer</span> ",effect:"Detta är en  <span>förenklande operation</span>. Visserligen upprepar vi nu  <span>exponenten</span>, men vi är inte lika djupt nästlade. "},en:{name:"split power with product base",explanation:"Since the  <span>exponent</span> tells us how many times we multiply the  <span>base</span> with itself, a  <span>power</span> with a  <span>product</span> as  <span>base</span> can be  <span>split up</span> into a  <span>product</span> of  <span>powers</span>. ",targets:"a  <span>power</span> with  <span>product</span> as  <span>base</span> ",returns:"a  <span>product</span> with two  <span>power factors</span> ",effect:"This is a  <span>simplifying operation</span>.  <span>Even though</span> we are now repeating the  <span>exponent</span>, we are no longer as deeply nested as before. "}},raiseByOne:{id:7,sv:{name:"introducera exponent 1",explanation:"Eftersom  <span>exponenten</span>  <span>1</span> saknar effekt, så kan vi förvandla vilket  <span>uttryck</span> som helst till en  <span>potens</span> genom att  <span>introducera</span> en  <span>exponent</span>  <span>1</span>. På samma sätt kan vi förvandla  <span>uttryck</span> till  <span>summor</span> genom att addera  <span>0</span>,  <span>produkter</span> genom att multiplicera med  <span>1</span>, och  <span>kvoter</span> genom att dela med  <span>1</span>. ",targets:"Alla  <span>matematiska uttryck</span> ",returns:" <span>Potens</span> med  <span>exponent</span>  <span>1</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom vi har gjort måluttrycket mer komplext. "},en:{name:"introduce exponent 1",explanation:"Since  <span>exponent</span>  <span>1</span> has no effect, we can turn any  <span>expression</span> into a  <span>power</span> by  <span>introducing</span> the  <span>exponent</span>  <span>1</span>. Much like we can turn an  <span>expression</span> into a  <span>sum</span> by adding  <span>0</span>, a  <span>product</span> by multiplying with  <span>1</span>, or a  <span>fraction</span> by dividing with  <span>1</span>. ",targets:"Any  <span>mathematical expression</span> ",returns:" <span>Power</span> with  <span>exponent</span>  <span>1</span> ",effect:"This is a  <span>complicating operation</span>, as we have made the target  <span>expression</span> more complex. "}},oneToZeroExpPower:{id:8,sv:{name:"dela upp 1 i potens",explanation:"Eftersom en  <span>potens</span> med  <span>0</span> som  <span>exponent</span> är lika med  <span>1</span> så kan vi omvandla  <span>1</span> till en  <span>potens</span> med  <span>exponent</span>  <span>0</span> och valfri  <span>bas</span> (förutom  <span>0</span>). ",targets:" <span>heltalet</span>  <span>1</span> ",returns:"en  <span>potens</span> med  <span>0</span> som  <span>exponent</span> ",effect:"Detta är en  <span>komplicerande operation</span> eftersom vi ersatt ett  <span>heltal</span> med en  <span>potens</span>. ",steps:{splitonetofrac:"Vi delar upp  <span>talet 1</span> till en  <span>kvot</span> med den önskade  <span>basen</span> som  <span>täljare</span> och  <span>nämnare</span>, dock med  <span>exponent</span>  <span>1</span>.",mergetoone:"Nu kan vi  <span>slå ihop</span>  <span>potenserna</span> i  <span>täljaren</span> och  <span>nämnaren</span>, och resultatet blir en enda  <span>potens</span> med  <span>exponent</span>  <span>0</span>!"}},en:{name:"split 1 to power",explanation:"Since a  <span>power</span> with  <span>exponent</span>  <span>0</span> is the same as  <span>1</span>, we can transform  <span>1</span> to a  <span>power</span> with a  <span>base</span> of our choosing and  <span>exponent</span>  <span>0</span>. ",targets:"the  <span>integer</span>  <span>1</span> ",returns:"a  <span>power</span> with  <span>exponent</span>  <span>0</span> ",effect:"This is a  <span>complicating operation</span> since we have replaced an  <span>integer</span> with a  <span>power</span>. ",steps:{splitonetofrac:"First we  <span>split</span>  <span>1</span> into a  <span>fraction</span> of identical  <span>powers</span> with  <span>exponent</span>  <span>1</span>.",mergetoone:"Now we can  <span>merge</span> those  <span>powers</span>, resulting in a single  <span>power</span> with  <span>exponent</span>  <span>0</span>!"}}},biSumExpPowToProd:{id:9,sv:{name:"dela potens med två exponenttermer",explanation:" <span>Exponenten</span> berättar hur många gånger vi skall multiplicera  <span>basen</span>. Har vi en  <span>summaexponent</span> kan vi därför dela upp  <span>potensen</span> till i  <span>produkt</span> av  <span>potenser</span>, där varje  <span>potens</span> har en  <span>term</span> från ursprungsexponenten som  <span>exponent</span>. ",targets:"en  <span>potens</span> med  <span>summaexponent</span> ",returns:"en  <span>produkt</span> av  <span>potenser</span> ",effect:"Detta är en  <span>komplicerande operation</span>, då vi nu måste upprepa  <span>basen</span>. "},en:{name:"split power with two exponent terms",explanation:"Since the  <span>exponent</span> tells us how many times we shall multiply the  <span>base</span>, if we have a  <span>sum exponent</span>, we can  <span>split</span> the  <span>power</span> to a  <span>product</span> of  <span>powers</span> where each  <span>power</span> has a  <span>term</span> from the initial  <span>exponent</span> as  <span>exponent</span>. ",targets:" <span>Power</span> with  <span>sum exponent</span> ",returns:" <span>Product</span> of  <span>powers</span> ",effect:"This is a  <span>complicating operation</span>, since we now have to repeat the  <span>base</span>. "}},splitSumExpPow:{id:10,sv:{name:"dela upp potens med summaexponent",explanation:" <span>Exponenten</span> berättar hur många gånger vi skall multiplicera  <span>basen</span>. Har vi en  <span>summaexponent</span> kan vi därför göra om  <span>potensen</span> till en  <span>produkt</span> av  <span>potenser</span>, där varje  <span>potens</span> har en  <span>term</span> från ursprungsexponenten som  <span>exponent</span>. ",targets:"en  <span>potens</span> med  <span>summaexponent</span> ",returns:"en  <span>produkt</span> av  <span>potenser</span> ",effect:"Detta är en  <span>komplicerande operation</span>, då vi nu måste upprepa  <span>basen</span>. ",steps:{groupselexpterms:"Vi grupperar de  <span>termer</span> i  <span>exponenten</span> som vi vill använda i vår nya potens",groupothers:"Vi grupperar  <span>termerna</span> som vi vill låta vara kvar",rearrangefordir:"Vi byter ordning på termgrupperna för att  <span>potenserna</span> skall hamna rätt när vi delar upp exponenten",splitpower:"Slutligen delar vi upp  <span>potensen</span> till en  <span>produkt</span> av potenser"}},en:{name:"split power with sum exponent",explanation:"Since the  <span>exponent</span> tells us how many times we shall multiply the  <span>base</span>, if we have a  <span>sum exponent</span>, we can  <span>split</span> the  <span>power</span> to a  <span>product</span> of  <span>powers</span> where each  <span>power</span> has a  <span>term</span> from the initial  <span>exponent</span> as  <span>exponent</span>. ",targets:"a  <span>power</span> with  <span>sum exponent</span> ",returns:"a  <span>product</span> of  <span>powers</span> ",effect:"This is a  <span>complicating operation</span>, since we now have to repeat the  <span>base</span>. ",steps:{groupselexpterms:"We group the  <span>terms</span> we want to use in the new  <span>power</span>.",groupothers:"We group the  <span>terms</span> we want to remain.",rearrangefordir:"We change order of the termgroups so the  <span>power</span> will  <span>split</span> like we want it to.",splitpower:"Finally we  <span>split</span> the  <span>power</span> into a  <span>product</span> of  <span>powers</span>."}}},mergeSameBaseFacs:{id:11,sv:{name:"slå ihop potensfaktorer",explanation:"Eftersom en  <span>produkt</span> av två  <span>potenser</span> med samma  <span>bas</span> kan  <span>slås ihop</span>, så kan vi också  <span>slå ihop</span>  <span>potensfaktorer</span> med samma  <span>bas</span> i en större  <span>produkt</span>. ",targets:"en  <span>produkt</span> med  <span>potensfaktorer</span> med samma  <span>bas</span> ",returns:"en  <span>produkt</span> med färre  <span>faktorer</span>, eller den sista återstående  <span>potensfaktorn</span> ",effect:"Det här är en  <span>förenklande operation</span>, eftersom vi slår ihop  <span>faktorer</span>. ",steps:{freefacfromnegation:"Vi befriar  <span>faktorn</span> vi är intresserade av ur  <span>negationen</span>.",turnfactopow:"Vi förvandlar  <span>faktorn</span> till en  <span>potens</span>, för att sedan kunna  <span>slå ihop</span> den, genom att upphöja med  <span>1</span>.",groupfacpair:"Vi grupperar två  <span>potensfaktorer</span> till en egen  <span>produkt</span>, för att i nästa steg kunna  <span>slå ihop</span> dem.",mergefacpair:"Vi slår ihop de två  <span>potensfaktorerna</span>, då de har samma  <span>bas</span>.",mergefacpaircollapseprod:"Vi slår ihop de två  <span>potensfaktorerna</span>, då de har samma  <span>bas</span>. Därmed återstår endast denna  <span>faktor</span> och  <span>produkten</span>  <span>kollapsar</span>.",flattensumexp:"Vi  <span>jämnar ut</span> exponentsumman genom att absorbera  <span>summatermerna</span>.",putnegationback:"Vi sätter tillbaka  <span>negationen</span>.",mergeallnumericexps:"Till sist slår vi ihop alla  <span>tal</span> i  <span>exponenten</span>.",fixdoubleneg:"Vi låter  <span>faktorernas</span>  <span>negationer</span> ta ut varandra."}},en:{name:"merge power factors",explanation:"Since a  <span>product</span> of two  <span>powers</span> with the identical  <span>bases</span> can be  <span>merged</span>, we can also  <span>merge</span> same  <span>base</span>  <span>power factors</span> in a larger  <span>product</span>. ",targets:"a  <span>product</span> with  <span>power factors</span> with identical  <span>bases</span> ",returns:"a  <span>product</span> with fewer  <span>factors</span>, or the last remaining  <span>power factor</span> ",effect:"This is a  <span>simplifying operation</span>, as we are merging  <span>factors</span> together. ",steps:{freefacfromnegation:"We free the  <span>factor</span> of interest from it's  <span>negation</span>.",turnfactopow:"We turn the  <span>factor</span> to a  <span>power</span>, in order to later be able to  <span>merge</span> it, by raising it by  <span>1</span>.",groupfacpair:"We group two  <span>power factors</span> into a  <span>product</span> of their own, so that we can  <span>merge</span> them in the next step.",mergefacpair:"We  <span>merge</span> the two  <span>power factors</span>, since they have the same  <span>base</span>.",mergefacpaircollapseprod:"We  <span>merge</span> the two  <span>power factors</span>, since they have the same  <span>base</span>, and thereby  <span>collapse</span> the whole  <span>product</span> into the single resulting  <span>power</span>.",flattensumexp:"We  <span>flatten</span> the  <span>exponent</span>  <span>sum</span> by absorbing the  <span>sum terms</span>.",putnegationback:"We put the  <span>negation</span> back.",mergeallnumericexps:"Finally, we add all  <span>numbers</span> in the  <span>exponent</span>.",fixdoubleneg:"We let the  <span>negations</span> of the two  <span>factors</span> cancel each other out."}}},zeroBasePowerToZero:{id:12,sv:{name:"ta bort exponent från bas 0",explanation:"En  <span>potens</span> med  <span>basen</span>  <span>0</span> är likvärdigt med  <span>0</span>. Det spelar ju ingen roll hur många nollor vi multiplicerar, svaret kommer alltid bli  <span>0</span>! Därför kan vi  <span>ta bort</span>  <span>exponenten</span> från en sådan  <span>potens</span>, som därmed  <span>kollapsar</span> till  <span>talet 0</span>. ",targets:"en  <span>potens</span> med  <span>basen</span>  <span>0</span> ",returns:" <span>talet 0</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi  <span>tog bort</span>  <span>exponenten</span>. ",steps:{extractazero:"Först bryter vi ut en nollafaktor från  <span>basen</span>.",prodtozero:"Nu kan vi göra om hela  <span>uttrycket</span> till  <span>0</span>, eftersom det är en  <span>produkt</span> med  <span>faktor</span>  <span>0</span>!"}},en:{name:"remove exponent from base 0",explanation:"A  <span>power</span> with  <span>base</span>  <span>0</span> evaluates to  <span>0</span>. It doesn't matter how many zeroes we multiply, the answer will still be  <span>0</span>! Therefore we can  <span>remove</span> the  <span>exponent</span> from such a  <span>power</span>, leaving only the  <span>number 0</span>. ",targets:"a  <span>power</span> with  <span>base</span>  <span>0</span> ",returns:"the  <span>number 0</span> ",effect:"This is a  <span>simplifying operation</span> since we  <span>removed</span> the  <span>exponent</span>. ",steps:{extractazero:"First we extract a  <span>factor</span> zero from the base",prodtozero:"Now we turn the whole  <span>expression</span> to  <span>0</span>, as it is a  <span>product</span> with a  <span>factor</span>  <span>0</span>!"}}},mergeSameBaseNumerDenomFacs:{id:13,sv:{name:"slå ihop potenser i kvot",explanation:"I en  <span>kvot</span> så kan vi  <span>slå ihop</span>  <span>potensfaktorer</span> i  <span>täljare</span> och  <span>nämnare</span> som har identisk  <span>bas</span>. ",targets:"en  <span>kvot</span> med  <span>potensfaktorer</span> i  <span>täljare</span> och  <span>nämnare</span> som har samma  <span>bas</span> ",returns:" <span>Kvot</span> med färre  <span>faktorer</span>, eller rest från  <span>täljaren</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi slår ihop  <span>faktorer</span>. ",steps:{maketopower:"Vi förvandlar  <span>faktorn</span> till en  <span>potens</span>, för att sedan kunna  <span>slå ihop</span> den, genom att upphöja med  <span>1</span>.",splitkeeppowexp:"Vi delar upp  <span>exponenten</span> till en  <span>summa</span>, för att sedan kunna dela upp  <span>potensen</span> och frigöra den del som skall förkortas bort.",splitkeeppow:"Nu delar vi upp  <span>potensen</span> i två, där ena delen skall kvittas mot tvillingen på motsatt  <span>våning</span>.",absorbsplitpow:"Vi  <span>jämnar ut</span>  <span>produkten</span> genom att absorbera  <span>produktfaktorn</span> som uppstod när vi delade  <span>potensen</span>.",eliminatesamepows:"Nu eliminerar vi den frigjorda  <span>potensen</span> mot tvillingen på motsatta  <span>våningen</span>!",smoothoverexponent:"Vi  <span>förenklar</span> den kvarvarande  <span>potensens</span>  <span>exponent</span>.",collapseexpone:"Efterom den kvarvarande  <span>exponenten</span> blev  <span>1</span>, så  <span>kollapsar</span> vi  <span>potensen</span> till  <span>basen</span>!"}},en:{name:"merge powers in fraction",explanation:"In a  <span>fraction</span> we can  <span>merge</span>  <span>powers</span> between the  <span>numerator</span> and  <span>denominator</span> if the have the same  <span>base</span>. ",targets:"a  <span>fraction</span> with  <span>power factors</span> in  <span>numerator</span> and  <span>denominator</span> that share  <span>base</span>. ",returns:"a  <span>fraction</span> with less  <span>factors</span>, or residue from  <span>numerator</span>. ",effect:"This is a  <span>simplifying operation</span>, as we are merging  <span>power factors</span>. ",steps:{maketopower:"We turn the  <span>factor</span> to a  <span>power</span>, in order to later be able to  <span>merge</span> it, by raising it by  <span>1</span>.",splitkeeppowexp:"We  <span>split</span> the  <span>exponent</span> into a  <span>sum</span>, in order to be able to later  <span>split</span> the  <span>power</span> and free the part that is to be  <span>eliminated</span>.",splitkeeppow:"Now we  <span>split</span> the  <span>power</span> in two, where one part will be  <span>eliminated</span> with its twin on the opposite  <span>floor</span> in the  <span>fraction</span>.",absorbsplitpow:"We  <span>even</span> out the  <span>product</span> by absorbing the  <span>product factor</span> caused by the  <span>power</span>  <span>split</span>.",eliminatesamepows:"Now we  <span>eliminate</span> the freed  <span>power</span> with its twin on the opposite  <span>floor</span>!",smoothoverexponent:"We  <span>simplify</span> the  <span>exponent</span> of the remaining  <span>power</span>.",collapseexpone:"As the remaining  <span>exponent</span> is  <span>1</span>, we  <span>collapse</span> the  <span>power</span> to the  <span>base</span>."}}},movePowInFrac:{id:15,sv:{name:"flytta potens i kvot",explanation:"Vi kan flytta en  <span>potens</span> från  <span>täljare</span> till  <span>nämnare</span> eller tvärtom genom att  <a href='#' class='wordlink' linkto='swapsign'>byta tecken</a> på  <span>exponenten</span>. ",targets:"en  <span>kvot</span> med  <span>potensfaktor</span> ",returns:"en  <span>kvot</span> med  <span>potensfaktor</span> med ombytt tecken i  <span>exponenten</span> ",effect:"Detta är en  <span>villkorligt förenklande</span>  <span>operation</span>, eftersom vi bara tjänar på det om  <span>exponenten</span> var  <span>negativ</span> från början. ",steps:{multonetoform:"Först  <span>introducerar</span> vi en  <span>faktor</span>  <span>1</span> som vi skall göra om till en  <span>potens</span> som vi kan  <span>slå ihop</span> med  <span>potensen</span> vi vill flytta.",flatten:"Vi  <span>jämnar ut</span>  <span>produkten</span> efter introduktionen av  <span>faktorn</span>  <span>1</span>.",expandonetopow:"Nu delar vi den  <span>introducerade</span>  <span>faktorn</span>  <span>1</span> till en  <span>potens</span> med samma  <span>bas</span> som  <span>potensen</span> vi vill flytta.",expandonetopowexisting:"Vi utnyttjar den befintliga  <span>faktorn</span>  <span>1</span> till att skapa en  <span>potens</span> med samma  <span>bas</span> som  <span>potensen</span> vi vill flytta.",mergepows:"Nu slår vi ihop  <span>potensen</span> vi vill flytta med den nyskapade  <span>potensen</span>. Resultatet blir en identisk  <span>potens</span> fast med  <span>omvänt tecken</span> i  <span>exponenten</span>, och den gamla är borta!"}},en:{name:"move power in fraction",explanation:"We can move a  <span>power factor</span> from the  <span>numerator</span> to the  <span>denominator</span> or vice versa by changing the  <span>exponent</span> sign. ",targets:"a  <span>fraction</span> with a  <span>power factor</span> ",returns:"a  <span>fraction</span> with change  <span>exponent</span> sign in the  <span>power factor</span> ",effect:"This is a  <span>conditionally simplifying operation</span>, since it is only advantageous if the  <span>exponent</span> was  <span>negative</span> to begin with. ",steps:{multonetoform:"First we  <span>introduce</span> a  <span>factor</span>  <span>1</span> which we will remake to a  <span>power</span> with which we can  <span>merge</span> the  <span>power</span> we want to move.",flatten:"We  <span>flatten</span> the  <span>product</span> after the introduction of the  <span>factor</span>  <span>1</span>.",expandonetopow:"Now we  <span>split</span> the  <span>introduced</span>  <span>factor</span>  <span>1</span> into a  <span>power</span> with the same  <span>base</span> as the  <span>power</span> we want to move.",expandonetopowexisting:"We use the existing  <span>factor</span>  <span>1</span> to create a  <span>power</span> with the same  <span>base</span> as the  <span>power</span> we want to move.",mergepows:"Now we  <span>merge</span> the  <span>power</span> we want to move with the newly created  <span>power</span>. The result is an identical  <span>power</span> but with  <span>switched signs</span> in the  <span>exponent</span>, and the original  <span>power</span> is gone!"}}},negOneBaseTwoExpPowToOne:{id:18,sv:{name:"kollapsa kvadrat av -1 till 1",explanation:"En  <span>potens</span> med  <span>-1</span> som  <span>bas</span> och 2 som  <span>exponent</span> kan  <span>kollapsas</span> till  <span>1</span>, eftersom  <span>-1</span> multiplicerat med sig själv är  <span>1</span>. ",targets:"en  <span>potens</span> med  <span>bas</span>  <span>-1</span> och  <span>exponent 2</span> ",returns:" <span>talet 1</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi ersatt en  <span>potens</span> med ett  <span>heltal</span>. ",steps:{splittoprod:"Först omvandlar vi  <span>potensen</span> till en  <span>produkt</span> med två  <span>faktorer</span>  <span>-1</span>.",collapsefreednegonebases:"Den  <span>produkten</span> kan vi sedan omvandla till  <span>1</span>!"}},en:{name:"collapse -1 squared to 1",explanation:"A  <span>power</span> with  <span>base</span>  <span>-1</span> and  <span>exponent 2</span> can be  <span>collapsed</span> into  <span>1</span>, since  <span>-1</span> multiplied with itself is  <span>1</span>. ",targets:"a  <span>power</span> with  <span>base</span>  <span>-1</span> and  <span>exponent 2</span> ",returns:"the  <span>number 1</span> ",effect:"This is a  <span>simplifying operation</span> since we replace a  <span>power</span> with an  <span>integer</span>. ",steps:{splittoprod:"First we turn the  <span>power</span> into a  <span>product</span> with two  <span>factors</span>  <span>-1</span>.",collapsefreednegonebases:"That  <span>product</span> can then be turned into  <span>1</span>!"}}},prodExpPowToPowBase:{id:19,sv:{name:"gör potens av produktexponent",explanation:"Eftersom  <span>exponenten</span> berättar hur många gånger man skall multiplicera  <span>basen</span> så kan vi ta en  <span>faktor</span> ur en  <span>produktexponent</span> och göra den till  <span>exponent</span> i en yttre  <span>potens</span>. ",targets:"en  <span>potens</span> med  <span>produktexponent</span> ",returns:"en  <span>potens</span> med  <span>potens</span> som  <span>bas</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom den nästlar  <span>uttrycket</span> djupare. "},en:{name:"make power of product exponent",explanation:"Since the  <span>exponent</span> tells us how many times we multiply the  <span>base</span>, we can take a  <span>factor</span> from a  <span>product exponent</span> and make it the  <span>exponent</span> of an outer  <span>power</span>. ",targets:"a  <span>power</span> with  <span>product exponent</span> ",returns:"a  <span>power</span> with  <span>power base</span> ",effect:"This is a  <span>complicating operation</span> as the  <span>expression</span> is now more deeply nested. "}},collapseSameInnerBaseFacNumerDenomPows:{id:94,sv:{name:"eliminera basfaktorer i kvot",explanation:"Om  <span>potensfaktorer</span> med heltalsbaser i  <span>täljaren</span> och  <span>nämnare</span> har en gemensam inre  <span>faktor</span> i  <span>basen</span> så kan dessa förkortas bot! ",targets:"en  <span>kvot</span> med  <span>potensfaktorer</span> med heltalsbaser som har en gemensam inre  <span>faktor</span> ",returns:"en  <span>kvot</span> med reducerade  <span>baser</span>, alternativt rest i  <span>täljaren</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi får lägre  <span>tal</span> och/eller färre  <span>faktorer</span>. ",steps:{factorisingbasetoexposearg:"Vi  <span>faktoriserar</span>  <span>bastalet</span> så att vi frigör de  <span>faktorer</span> vi vill förkorta bort.",mergefoundfacsintopower:"Vi samlar målfaktorerna i en  <span>potens</span>.",splittingpowertofreearg:"Nu delar vi upp ursprungspotensen för att frigöra vår  <span>potens</span>.",collapsefreedfacpowerexp:"Vi plattar till  <span>exponenten</span> i den frigjorda  <span>potensen</span>.",includingsplitpowinprod:"Vi låter  <span>potenserna</span> uppgå i ursprungsprodukten på  <span>våningen</span>.",nowwemergethepowers:"Slutligen slår vi ihop de frigjorda  <span>potenserna</span>!"}},en:{name:"eliminate base factors in fraction",explanation:"If  <span>power factors</span> with  <span>integer</span>  <span>bases</span> in the  <span>numerator</span> and  <span>denominator</span> have an inner  <span>factor</span> in common, that  <span>factor</span> can be  <span>removed</span>! ",targets:" <span>Fraction</span> with  <span>power factors</span> sharing inner numeric  <span>factor</span> ",returns:" <span>Fraction</span> with reduces  <span>bases</span>, or remains in  <span>numerator</span> ",effect:"This is a  <span>simplifying operation</span>, since we get lower  <span>numbers</span> and/or fewer  <span>factors</span>. ",steps:{factorisingbasetoexposearg:"We  <span>factorise</span> the  <span>base number</span> in order to free the  <span>factors</span> we want to  <span>remove</span>.",mergefoundfacsintopower:"We gather the target  <span>factors</span> into a  <span>power</span>.",splittingpowertofreearg:"Now we  <span>split</span> the original  <span>power</span> to free our  <span>power</span>.",collapsefreedfacpowerexp:"We  <span>collapse</span> the  <span>exponent</span> of the freed  <span>power</span>.",includingsplitpowinprod:"We include the  <span>powers</span> into the original  <span>floor</span>  <span>product</span>.",nowwemergethepowers:"Finally we  <span>merge</span> the freed  <span>powers</span>!"}}},powBasePowToFlatNiceExp:{id:95,sv:{name:"kollapsa potensbas och förenkla",explanation:"En  <span>potens</span> med  <span>potens</span> som  <span>bas</span> kan  <span>kollapsas</span> och den resulterande exponentprodukten förenklas. ",targets:"en  <span>potens</span> med  <span>potens</span> som  <span>bas</span> och förenklingsmöjlighet mellan  <span>exponenterna</span> ",returns:"en  <span>potens</span> med enkel  <span>bas</span> och  <span>förenklad</span>  <span>exponent</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi har en mindre nästlad  <span>potens</span> med  <span>förenklad</span>  <span>exponent</span>. ",steps:{firstweflattenintoonepower:"Först avnästlar vi baspotensen.",collapsenegonefac:" <span>Faktor</span>  <span>1</span> kan vi  <span>ta bort</span>.",flattenexpprod:"Vi  <span>jämnar ut</span> den nya exponentprodukten.",wedenegtheexpfactors:"Två  <span>negationer</span> i  <span>produkt</span> tar ut varandra.",multiplynumericfacs:"Vi multiplicerar alla positiva  <span>talfaktorer</span>.",multposandnegexp:"Vi multiplicerar positiv och  <span>negativ</span>  <span>talfaktor</span>."}},en:{name:"collapse power base and simplify",explanation:"We  <span>collapse</span>  <span>power</span> with  <span>power base</span>, and  <span>simplify</span> the resulting  <span>product exponent</span>. ",targets:"a  <span>power</span> with  <span>power base</span> and  <span>simplifying</span> opportunities between the  <span>exponents</span>. ",returns:"a  <span>power</span> with freed  <span>base</span> and  <span>simplified</span>  <span>exponent</span> ",effect:"This is a  <span>simplifying operation</span> as the  <span>power</span> is less nested, and the  <span>exponent</span>  <span>simplified</span>. ",steps:{firstweflattenintoonepower:"First we denest the  <span>base</span> power",collapsenegonefac:"We can skip  <span>factor</span>  <span>1</span>.",flattenexpprod:"We  <span>even</span> out the new  <span>exponent</span>  <span>product</span>.",wedenegtheexpfactors:"Two  <span>negations</span> in a  <span>product</span> cancel each other out.",multiplynumericfacs:"We multiply all positive numeric  <span>factors</span>.",multposandnegexp:"We multiply positive and  <span>negative</span> numeric  <span>factor</span>."}}},oneBasePowToOne:{id:97,sv:{name:"ta bort exponent från bas 1",explanation:"Det spelar ingen roll hur många gånger man multiplicerar  <span>1</span> med sig själv, resultatet blir ändå  <span>1</span>! Därför kan vi helt enkelt  <span>ta bort</span>  <span>exponenten</span> när  <span>basen</span> är  <span>1</span>. ",targets:"en  <span>potens</span> med  <span>bas</span>  <span>1</span> ",returns:" <span>talet 1</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi  <span>tog bort</span>  <span>exponenten</span>. "},en:{name:"remove exponent from base 1",explanation:"No matter how many times you multiply  <span>1</span> by itself, the answer is still  <span>1</span>! Thus, if the  <span>base</span> is  <span>1</span>, we can simply  <span>remove</span> the  <span>exponent</span>. ",targets:"a  <span>power</span> with  <span>base</span>  <span>1</span> ",returns:"the  <span>number 1</span> ",effect:"This is a  <span>simplifying operation</span>, as we  <span>removed</span> the  <span>exponent</span>. "}},prodExpPowToSelectPowBase:{id:98,sv:{name:"välj potensbas i produktexponent",explanation:"Eftersom en  <span>potens</span> med  <span>produktexponent</span> med två  <span>faktorer</span> kan delas upp i en inre och yttre  <span>potens</span>, så kan vi också göra likadant med en  <span>produktexponent</span> med fler  <span>faktorer</span>. ",targets:"en  <span>potens</span> med  <span>produktexponent</span> ",returns:"en  <span>potens</span> med  <span>potens</span> som  <span>bas</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom resultatet är mer nästlat. ",steps:{groupselectedfacs:"Vi grupperar de  <span>faktorer</span> vi vill ha som yttre exponent",groupresiduefacs:"Vi grupperar de  <span>faktorer</span> som blir kvar i den inre exponenten",nowwemakepowbase:"Vi delar upp  <span>potensen</span> i inre och yttre."}},en:{name:"choose powerbase in product exponent",explanation:"Since a  <span>power</span> with  <span>product exponent</span> with two  <span>factors</span> can be  <span>split</span> into an inner and outer  <span>power</span>, we can do the same thing in a  <span>product exponent</span> with more  <span>factors</span>. ",targets:"a  <span>power</span> with  <span>product exponent</span> ",returns:"a  <span>power</span> with  <span>power base</span> ",effect:"This is a  <span>complicating operation</span>, as the result is nested deeper. ",steps:{groupselectedfacs:"We group the  <span>factors</span> we want to use for the outer  <span>exponent</span>.",groupresiduefacs:"We group the  <span>factors</span> we want to use for the inner  <span>exponent</span>.",nowwemakepowbase:"We  <span>split</span> the  <span>power</span> into inner and outer."}}},negOneBaseEvenFacExpPowToOne:{id:99,sv:{name:"kollapsa potens av -1 till 1",explanation:"En  <span>potens</span> med  <span>bas</span>  <span>-1</span> och en  <span>jämn</span>  <span>faktor</span> i  <span>exponenten</span> kan  <span>kollapsas</span> till  <span>1</span>, eftersom vi kan bygga en inre  <span>potens</span> med  <span>bas</span>  <span>-1</span> och  <span>exponent 2</span>. ",targets:"en  <span>potens</span> med  <span>bas</span>  <span>-1</span> och en  <span>jämn</span> exponentfaktor ",returns:" <span>talet 1</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi ersatt en  <span>potens</span> med ett  <span>tal</span>. ",steps:{collapsenegonebaseexptwo:" <span>Potens</span> med  <span>bas</span>  <span>-1</span> och  <span>exponent 2</span> kan  <span>kollapsas</span>!",freetheexpfromneg:"Vi frigör  <span>exponenten</span> från  <span>negationen</span>.",flattenexpprod:"Vi  <span>jämnar ut</span> exponentprodukten.",freechosenfacfromneg:"Vi frigör vår jämna  <span>faktor</span> från  <span>negationen</span>.",extractchosenfac:"Vi extraherar  <span>faktorn</span> från  <span>potensfaktorn</span>.",factorisetofreetwo:"Nu  <span>faktoriserar</span> vi ut 2 ur den jämna  <span>faktorn</span>.",buildpowwithexptwo:"Vi bygger en inre  <span>potens</span> med endast 2 som  <span>exponent</span>.",collapsewholepowertoone:"Nu när  <span>basen</span> är  <span>1</span> kan vi  <span>kollapsa</span> hela  <span>potensen</span> till  <span>1</span>!"}},en:{name:"collapse power of -1 to 1",explanation:"A  <span>power</span> with  <span>base</span>  <span>-1</span> and an  <span>even</span>  <span>exponent</span>  <span>factor</span> can be reduced to  <span>1</span>, since we can build an inner  <span>power</span> with  <span>base</span>  <span>-1</span> and  <span>exponent 2</span>. ",targets:"a  <span>power</span> with  <span>base</span>  <span>-1</span> and  <span>exponent</span> with an  <span>even</span>  <span>factor</span> ",returns:"the  <span>number 1</span> ",effect:"This is a  <span>simplifying operation</span> since we have replaced a  <span>power</span> with a  <span>number</span>. ",steps:{collapsenegonebaseexptwo:" <span>Power</span> with  <span>base</span>  <span>-1</span> and  <span>exponent 2</span> can be  <span>collapsed</span>!",freetheexpfromneg:"We free the  <span>exponent</span> from the  <span>negation</span>.",flattenexpprod:"We  <span>even</span> out the  <span>exponent</span>  <span>product</span>.",freechosenfacfromneg:"We free our  <span>even</span>  <span>factor</span> from the  <span>negation</span>.",extractchosenfac:"We extract the  <span>factor</span> from the  <span>power factor</span>.",factorisetofreetwo:"Now we  <span>factor</span> out 2 from the  <span>even</span>  <span>factor</span>.",buildpowwithexptwo:"We build an inner  <span>power</span> with only 2 as  <span>exponent</span>.",collapsewholepowertoone:"Now that the  <span>base</span> is  <span>1</span>, we can  <span>collapse</span> the entire  <span>power</span>!"}}},negOneBaseOddFacExpPowToNegOne:{id:100,sv:{name:"förenkla potens av -1",explanation:" <span>Udda</span> exponentfaktorer kan rensas bort från en  <span>potens</span> med  <span>bas</span>  <span>-1</span>, eftersom de inte påverkar värdet. ",targets:"en  <span>potens</span> med  <span>bas</span>  <span>-1</span> och  <span>udda</span> exponentfaktor ",returns:"en  <span>potens</span> med färre exponentfaktorer, eller bara  <span>-1</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi eliminerar  <span>faktorer</span>. ",steps:{freetheexpfromneg:"Vi frigör  <span>exponenten</span> från  <span>negationen</span>.",flattenexpprod:"Vi  <span>jämnar ut</span> exponentprodukten.",freechosenfacfromneg:"Vi frigör vår  <span>udda</span>  <span>faktor</span> från  <span>negationen</span>.",buildpowwithoddexp:"Vi bygger en inre  <span>potens</span> med endast vår  <span>udda</span>  <span>faktor</span> som  <span>exponent</span>.",splitexp:"Nu delar vi den inre  <span>exponenten</span> till  <span>1</span> och en  <span>jämn</span>  <span>term</span>.",splitpow:"Vi delar upp den inre  <span>potensen</span> till en  <span>produkt</span> av två  <span>potenser</span>.",freenegone:" <span>Potensen</span> med  <span>exponent</span>  <span>1</span> kan  <span>kollapsas</span> till endast  <span>basen</span>  <span>-1</span>.",collapsenewevenfacpow:" <span>Potensen</span> med  <span>jämn</span>  <span>exponent</span> kan  <span>kollapsas</span> till  <span>1</span>.",collapsebasetonegone:"Slutligen kan den återstående ettan från  <span>potensen</span> med  <span>jämn</span>  <span>exponent</span> rensas bort!",puttingnegationback:"Vi återställer  <span>negationen</span> i  <span>exponenten</span>."}},en:{name:"simplify power of -1",explanation:" <span>Odd</span>  <span>exponent</span>  <span>factors</span> can be  <span>eliminated</span> from  <span>powers</span> with  <span>base</span>  <span>-1</span>, as they don't affect the outcome. ",targets:"a  <span>power</span> with  <span>base</span>  <span>-1</span> and  <span>odd</span>  <span>exponent</span>  <span>factor</span> ",returns:"a  <span>power</span> with fewer  <span>exponent</span>  <span>factors</span>, or just  <span>-1</span>. ",effect:"This is a  <span>simplifying operation</span>, as we are  <span>eliminating</span>  <span>factors</span>. ",steps:{freetheexpfromneg:"We free the  <span>exponent</span> from the  <span>negation</span>.",flattenexpprod:"We  <span>even</span> out the  <span>exponent</span>  <span>product</span>.",freechosenfacfromneg:"We free our  <span>odd</span>  <span>factor</span> from the  <span>negation</span>.",buildpowwithoddexp:"We build an inner  <span>power</span> with only our  <span>odd</span>  <span>factor</span> as  <span>exponent</span>.",splitexp:"Now we  <span>split</span> the inner  <span>exponent</span> to  <span>1</span> and an  <span>even</span>  <span>term</span>.",splitpow:"We  <span>split</span> the inner  <span>power</span> to a  <span>product</span> of two  <span>powers</span>.",freenegone:"The  <span>power</span> with  <span>exponent</span>  <span>1</span> can be  <span>collapsed</span> to just the  <span>base</span>  <span>-1</span>.",collapsenewevenfacpow:"The  <span>power</span> with  <span>even</span>  <span>exponent</span> can be  <span>collapsed</span> to  <span>1</span>.",collapsebasetonegone:"Finally the  <span>1</span> remaining from the  <span>even</span>  <span>exponent</span>  <span>power</span> can be  <span>removed</span>!",puttingnegationback:"We restore the  <span>negation</span> in the  <span>exponent</span>."}}},splitNegBasePow:{id:101,sv:{name:"ta bort negation i bas",explanation:"Om en  <span>potens</span> med  <span>negativ bas</span> har en heltalsfaktor i  <span>exponenten</span> så kan vi  <span>ta bort</span>  <span>negationen</span> ur  <span>basen</span> genom att isolera  <span>-1</span> till en egen  <span>potens</span> som vi sedan  <span>kollapsar</span>. ",targets:"en  <span>potens</span> med  <span>negativ bas</span> ",returns:"en  <span>potens</span> utan  <span>negativ bas</span>, om exponentfaktorn var  <span>udda</span> så är hela  <span>potensen</span>  <span>negativ</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi slipper en  <span>negation</span> i  <span>basen</span>. ",steps:{freeneginsidebase:"Först frigör vi  <span>negationen</span> till en  <span>faktor</span>  <span>-1</span>.",splittoprodofpows:"Sedan delar vi upp  <span>basfaktorerna</span> i varsin  <span>potens</span>.",collapsefreednegonebasepow:"Nu kan vi  <span>kollapsa</span>  <span>potensen</span> med  <span>bas</span>  <span>-1</span>!",removetheoneresidue:"Vi rensar bort den kvarvarande  <span>faktor</span>  <span>1</span>.",collapsefreedneg:"Eftersom exponentfaktorn var  <span>udda</span> så finns en  <span>faktor</span>  <span>-1</span> kvar, som vi använder för att negera hela  <span>potensen</span>."}},en:{name:"remove negation in base",explanation:"If a  <span>power</span> with a  <span>negative</span>  <span>base</span> has an  <span>integer</span>  <span>factor</span> in the  <span>exponent</span>, we can  <span>remove</span> the  <span>negation</span> from the  <span>base</span> by isolating  <span>-1</span> to a  <span>power</span> of its own which we  <span>collapse</span>. ",targets:"a  <span>power</span> with  <span>negative</span>  <span>base</span> ",returns:"a  <span>power</span> without  <span>negation</span> in the  <span>base</span>, if the  <span>exponent</span>  <span>factor</span> was  <span>odd</span> the whole  <span>power</span> is  <span>negative</span> ",effect:"This is a  <span>simplifying operation</span> since we don't have a  <span>negation</span> in the  <span>base</span> anymore. ",steps:{freeneginsidebase:"First we free the  <span>negation</span> into a  <span>factor</span>  <span>-1</span>.",splittoprodofpows:"Then we  <span>split</span> the  <span>base factors</span> into  <span>powers</span> of their own.",collapsefreednegonebasepow:"Now we can  <span>collapse</span> the  <span>power</span> with  <span>base</span>  <span>-1</span>!",removetheoneresidue:"We  <span>eliminate</span> the remaining  <span>factor</span>  <span>1</span>.",collapsefreedneg:"Since the  <span>exponent</span>  <span>factor</span> was  <span>odd</span> there is a  <span>factor</span>  <span>-1</span> remaining, which we use to negate the  <span>power</span>."}}},extractBaseFraction:{id:103,sv:{name:"dela upp potens av kvot",explanation:"Vi kan göra om en  <span>potens</span> med  <span>kvotbas</span> till en  <span>kvot</span> av  <span>potenser</span>. ",targets:"en  <span>potens</span> med  <span>kvot</span> som  <span>bas</span> ",returns:"en  <span>kvot</span> med  <span>potens</span> i  <span>täljare</span> och  <span>nämnare</span> ",effect:"Detta räknas som en  <span>förenklande operation</span>. Trots att vi nu upprepar  <span>exponenten</span> så är det lättare att förenkla en  <span>kvot</span> av  <span>potenser</span> än en  <span>potens</span> av en  <span>kvot</span>. ",steps:{addfactoturntopow:"Vi multiplicerar med  <span>1</span> i  <span>täljaren</span> för att sedan kunna omvandla den till en  <span>potens</span>.",containbasepow:"Vi upphöjer  <span>nämnaren</span> med  <span>1</span> för att bevara dess  <span>exponent</span>.",turnfactopow:"Vi omvandlar  <span>faktorn</span>  <span>1</span> till en  <span>potens</span> med samma  <span>bas</span> som  <span>nämnaren</span>.",movepowtonumer:"Vi slår ihop  <span>nämnaren</span> med den nya  <span>potensen</span> i  <span>täljaren</span>.",splittotwopows:"Vi delar upp basprodukten av  <span>potenser</span> till en  <span>produkt</span> av  <span>potenser</span>.",flattentheexp:"Vi  <span>jämnar ut</span>  <span>exponenten</span> hos vår konstgjorda  <span>potens</span>.",makepowtodenom:"Slutligen gör vi dess  <span>exponent</span> positiv genom att flytta tillbaka den till  <span>nämnaren</span>."}},en:{name:"split power of fraction",explanation:"A  <span>power</span> with  <span>fraction base</span> can be rephrased as a  <span>fraction</span> of  <span>powers</span>. ",targets:"a  <span>power</span> with  <span>fraction base</span> ",returns:"a  <span>fraction</span> with  <span>powers</span> in  <span>numerator</span> and  <span>denominator</span> ",effect:"This is a  <span>simplifying operation</span>.  <span>Even though</span> we now repeat the  <span>exponent</span>, it is easier to  <span>simplify</span> a  <span>fraction</span> of  <span>powers</span> than a  <span>power</span> of  <span>fractions</span>. ",steps:{addfactoturntopow:"We multiply by a  <span>factor</span>  <span>1</span> in the  <span>numerator</span>, which we will later turn into a  <span>power</span>.",containbasepow:"We raise the  <span>numerator</span> by  <span>1</span> to keep its  <span>exponent</span> safe.",turnfactopow:"We turn the  <span>factor</span>  <span>1</span> to a  <span>power</span> with same  <span>base</span> as the  <span>denominator</span>.",movepowtonumer:"We  <span>merge</span> the  <span>denominator</span> with the new  <span>power</span> in the  <span>numerator</span>.",splittotwopows:"We  <span>split</span> the  <span>base</span>  <span>product</span> into a  <span>product</span> of  <span>powers</span>.",flattentheexp:"We  <span>flatten</span> the  <span>exponent</span> in our created  <span>power</span>.",makepowtodenom:"Finally we make the  <span>exponent</span> positive by moving it back to the  <span>denominator</span>."}}},negExpFacProdToFrac:{id:104,sv:{name:"flytta potens till ny nämnare",explanation:"Om vi har en  <span>potens</span> med  <span>negativ exponent</span>, så kan vi bilda en  <span>kvot</span> och flytta ned  <span>potensen</span> till  <span>nämnaren</span> vilket gör  <span>exponenten</span> positiv. ",targets:"en  <span>produkt</span> med  <span>potensfaktor</span> med  <span>negativ exponent</span>, eller en ensam  <span>potens</span> med  <span>negativ exponent</span> ",returns:"en  <span>kvot</span> med  <span>potens</span> i  <span>nämnaren</span> med positiv  <span>exponent</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi slipper en  <span>negativ exponent</span>. ",steps:{divbyone:"Vi  <span>introducerar</span> en  <span>nämnare</span>  <span>1</span> som vi kan flytta ned  <span>potensen</span> till.",thenmove:"Nu flyttar vi  <span>potensen</span>, vilket gör  <span>exponenten</span> positiv!"}},en:{name:"move power to new denominator",explanation:"If we have a  <span>power</span> with  <span>negative exponent</span>, we can create a  <span>fraction</span> and move the  <span>power</span> to the  <span>denominator</span>, giving it a positive  <span>exponent</span>. ",targets:"a  <span>product</span> with a  <span>power factor</span> with  <span>negative exponent</span>, or a lone  <span>power</span> with  <span>negative exponent</span> ",returns:"a  <span>fraction</span> with  <span>power factor</span> in the  <span>denominator</span>, with positive  <span>exponent</span> ",effect:"This is a  <span>simplifying operation</span>, since we get rid of a  <span>negative exponent</span>. ",steps:{divbyone:"We  <span>introduce</span> a  <span>denominator</span>  <span>1</span> which we can move the  <span>power</span> to.",thenmove:"Now we move down the  <span>power</span>, making the  <span>exponent</span> positive!"}}},extractPartFromPow:{id:125,sv:{name:"dela upp en potens",explanation:"Vi kan lyfta ut ett valfritt antal av  <span>basfaktorn</span> genom att minska  <span>exponenten</span>. ",targets:"en  <span>potens</span>, eller  <span>uttryck</span> som görs om till en  <span>potens</span> ",returns:"en  <span>produkt</span> av den utlyfta  <span>faktorn</span> och resten av  <span>potensen</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom vi skapar en ny  <span>faktor</span>. ",steps:{turnnonpowtargettopow:"Vi förvandlar  <span>uttrycket</span> till en  <span>potens</span> för att sedan kunna minska  <span>exponenten</span>.",splitexponentsowecansplitpow:"Vi delar upp  <span>potensens</span>  <span>exponent</span> i delen vi vill lyfta ut och delen som blir kvar.",splitpower:"Nu när  <span>exponenten</span> är en  <span>summa</span> kan vi dela upp  <span>potensen</span> i två  <span>potensfaktorer</span>.",cleanupremainingexponent:"Eftersom det bara återstår  <span>1</span> i  <span>exponenten</span> så  <span>kollapsar</span> vi ursprungspotensen.",removeoneexpinnew:"Då vi endast extraherade en enda  <span>faktor</span> så kan vi  <span>kollapsa</span> den skapade  <span>potensfaktorn</span> till  <span>basen</span>."}},en:{name:"split power",explanation:"We can extract  <span>any number of</span> the  <span>base factor</span> from a  <span>power</span> by lowering the  <span>exponent</span>. ",targets:"a  <span>power</span>, or  <span>expression</span> to be turned into a  <span>power</span> ",returns:"a  <span>product</span> of extracted  <span>factor</span> and  <span>power</span> ",effect:"This is a  <span>complicating operation</span>, as we are creating a new  <span>factor</span>. ",steps:{turnnonpowtargettopow:"We turn the exprerssion into a  <span>power</span>, so we later can lower the  <span>exponent</span> and extract a  <span>factor</span>.",splitexponentsowecansplitpow:"We  <span>split</span> the power's  <span>exponent</span> into the parts we want to extract and keep.",splitpower:"Now that the  <span>exponent</span> is a  <span>sum</span>, we can  <span>split</span> the  <span>power</span> into two  <span>power factors</span>.",cleanupremainingexponent:"Since only  <span>1</span> remains in the  <span>exponent</span>, we  <span>collapse</span> the original  <span>power</span>.",removeoneexpinnew:"Since we only extracted one single  <span>factor</span>, we can  <span>collapse</span> the newly created  <span>power factor</span> to its  <span>base</span>."}}},zeroToPow:{id:160,sv:{name:"dela upp 0 till potens med bas 0",explanation:" <span>Talet 0</span> kan delas upp i en  <span>potens</span> med  <span>0</span> som  <span>bas</span> och vilken  <span>exponent</span> som helst bortsett från  <span>0</span>. ",targets:" <span>talet 0</span> ",returns:"en  <span>potens</span> med  <span>bas</span>  <span>0</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom vi ersatt ett  <span>tal</span> med en  <span>potens</span>. ",steps:{createexp:"Först gör vi  <span>0</span> till en  <span>potens</span> genom att upphöja med  <span>talet 1</span>.",addtheexprwithnegtwo:"Nu lägger vi till en spegelbild av den  <span>exponent</span> vi vill ha, tillsammans med det  <span>negativa talet</span> -2 som vi kommer att använda för att bli av den ursprungliga  <span>exponenten</span>  <span>1</span>.",splittheexp:"Vi låter den  <span>negativa</span> spegelbilden, som vi inte vill ha, flytta till en ny  <span>potensfaktor</span> med  <span>talet 0</span> som  <span>bas</span>.",flattenorigexp:"Vi  <span>jämnar ut</span> den första  <span>exponenten</span>.",dropzeroexp:"Nu utnyttjar vi egenskaperna hos  <span>talet 0</span> till att bli av med den andra  <span>exponenten</span>.",mergethemback:"Vi multiplicerar ihop  <span>faktorerna</span> igen.",flattenmergedexp:"Vi  <span>jämnar ut</span> den sammanslagna  <span>exponenten</span>.",addallnums:"Nu adderar vi alla  <span>talen</span> i  <span>exponenten</span>, vilket tack vare vår extra  <span>term</span> -2 blir  <span>0</span>.",removezero:"Slutligen  <span>tar vi bort</span>  <span>termen</span>  <span>0</span>, vilket gör att  <span>exponenten</span> är den eftersökta!"}},en:{name:"split 0 to power with base 0",explanation:"The  <span>number 0</span> can be transformed to a  <span>power</span> with zero as  <span>base</span> and any non-zero  <span>exponent</span>. ",targets:"the  <span>number 0</span> ",returns:"a  <span>power</span> with  <span>base</span>  <span>0</span> ",effect:"This is a  <span>complicating operation</span>, since we have replaced a  <span>number</span> with a  <span>power</span>. ",steps:{createexp:"First we turn the  <span>number 0</span> to a  <span>power</span> by raising by  <span>1</span>.",addtheexprwithnegtwo:"Now we add mirror images of the chosen  <span>exponent</span>, together with the  <span>negative number</span> -2 which we will use to get rid of the original  <span>exponent</span>  <span>1</span>.",splittheexp:"We let the  <span>negative</span> mirror image, which we have no use for, become the  <span>exponent</span> of a new zero-base  <span>power</span>.",flattenorigexp:"We  <span>flatten</span> the first  <span>exponent</span>.",dropzeroexp:"Now we use the special characteristics of the  <span>number 0</span> to drop the second  <span>exponent</span>.",mergethemback:"We  <span>merge</span> the  <span>factors</span> back together into a single  <span>power</span>.",flattenmergedexp:"We  <span>flatten</span> the  <span>merged</span>  <span>exponent</span>.",addallnums:"Now we add all  <span>numbers</span> in the  <span>exponent</span>, which thanks to our extra  <span>term</span> -2 results in  <span>0</span>.",removezero:"Finally we  <span>remove</span> that  <span>term</span>  <span>0</span>, leaving us with the desired  <span>exponent</span>!"}}},collapseSumBasePow:{id:163,sv:{name:"kollapsa potens med summabas",explanation:"Vi kan omvandla en  <span>potens</span> med  <span>summabas</span> till en  <span>summa</span> av  <span>produkter</span>, genom att först omvandla  <span>potensen</span> till en  <span>produkt</span> av  <span>summor</span> och sedan  <span>distribuera</span> in alla  <span>summor</span> i varandra. ",targets:" <span>Potens</span> med  <span>summabas</span> och positiv heltalsexponent ",returns:" <span>Summa</span> med  <span>produkttermer</span> ",effect:"Detta borde vara en  <span>komplicerande operation</span>, eftersom den resulterande  <span>summan</span> är mer komplicerad än  <span>potensen</span> vi omvandlade. Men då en  <span>summa</span> är mycket lättare att förenkla vidare än en  <span>potens</span> med  <span>summabas</span> så anses denna  <span>operation</span> ändå vara  <span>förenklande</span>. ",steps:{firstflattenpow:"Vi börjar med att omvandla  <span>potensen</span> till en  <span>produkt</span> av  <span>summor</span>.",multin:"Vi distribuerar en  <span>summafaktor</span> in i en annan.",multinside:"Vi distribuerar en  <span>term</span> in i en  <span>summa</span>.",evenoutprod:"Vi  <span>kollapsar</span>  <span>produkten</span>.",evenoutpart:"Vi  <span>kollapsar</span>  <span>summan</span>."}},en:{name:"collapse sum base power",explanation:"We can transform a  <span>power</span> with  <span>sum base</span> into a  <span>sum</span> of  <span>product terms</span>, by first converting the  <span>power</span> to a  <span>product</span> of  <span>sums</span>, and then  <span>distribute</span> the  <span>sums</span> into each other. ",targets:" <span>Power</span> with  <span>sum base</span> and  <span>integer</span>  <span>exponent</span> ",returns:" <span>Sum</span> with  <span>product terms</span> ",effect:"This should be a  <span>complicating operation</span>, since the resulting  <span>sum</span> is much more complex than the initial  <span>power</span>. But as a  <span>sum</span> is much easier to  <span>simplify</span> compared to a  <span>power</span> with a  <span>sum base</span>, this  <span>operation</span> is actually considered  <span>simplifying</span>. ",steps:{firstflattenpow:"We start by converting the  <span>power</span> to a  <span>product</span> of  <span>sums</span>.",multin:"We  <span>distribute</span> a  <span>sum factor</span> into another.",multinside:"We  <span>distribute</span> a  <span>term</span> into a  <span>sum</span>.",evenoutprod:"We  <span>collapse</span> the  <span>product</span>.",evenoutpart:"We  <span>collapse</span> the  <span>sum</span>."}}},flattenPow:{id:164,sv:{name:"kollapsa potens till produkt",explanation:"en  <span>potens</span> med positiv heltalsexponent kan omvandlas till en  <span>produkt</span> av  <span>faktorer</span> som alla är lika med  <span>potensens</span>  <span>bas</span>. ",targets:"en  <span>potens</span> med positiv heltalsexponent ",returns:"en  <span>produkt</span> av  <span>faktorer</span> identiska med  <span>potensens</span>  <span>bas</span>, lika många som  <span>exponentens</span> värde ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom vi ersatt en  <span>potens</span> med en  <span>produkt</span> med identiska  <span>faktorer</span>. ",steps:{oneifyexp:"Först gör vi om  <span>exponenten</span> till en  <span>summa</span> där varje  <span>term</span> är  <span>talet 1</span>.",splitoutone:"Vi lyfter ut en av  <span>termerna</span> i  <span>exponenten</span> till en  <span>exponent</span> i en egen  <span>potens</span>.",flattenthisbit:"Vi plattar ut  <span>produkten</span>.",droponeexp:"Nu  <span>tar vi bort</span>  <span>exponenten</span>  <span>1</span>.",droponeexpfinal:"Nu  <span>tar vi bort</span>  <span>exponenten</span>  <span>1</span> från den sista  <span>termen</span>, och vi är klara!"}},en:{name:"collapse power to product",explanation:"a  <span>power</span> with a positive  <span>integer</span>  <span>exponent</span> can be rewritten to a  <span>product</span> of  <span>factors</span> that are all equal to the  <span>power base</span>. ",targets:"a  <span>power</span> with a positive  <span>integer</span>  <span>exponent</span> ",returns:"a  <span>product</span> of  <span>factors</span> all equal to the  <span>power base</span>, numbering as many as the value of the  <span>exponent</span> dictates ",effect:"This is a  <span>complicating operation</span> as we have replaced a  <span>power</span> with a  <span>product</span> with lots of identical  <span>factors</span>. ",steps:{oneifyexp:"First we  <span>split</span> the  <span>exponent</span>  <span>number</span> into a  <span>sum</span> where each  <span>term</span> is the  <span>number</span> 1",splitoutone:"We extract one of the  <span>exponent</span>  <span>terms</span>, making it the  <span>exponent</span> in a  <span>power</span> of its own.",flattenthisbit:"We  <span>flatten</span> the  <span>product</span>.",droponeexp:"Now we  <span>remove</span> the  <span>exponent</span> 1",droponeexpfinal:"Now we  <span>remove</span> the  <span>exponent</span>  <span>1</span> from the final  <span>term</span>, and we are done!"}}},numericPowToNum:{id:165,sv:{name:"beräkna numerisk potens",explanation:"En  <span>potens</span> där både  <span>bas</span> och  <span>exponent</span> är  <span>naturliga tal</span> kan beräknas, om resultatet inte blir för stort. ",targets:"en  <span>potens</span> med  <span>naturliga tal</span> som  <span>bas</span> och  <span>exponent</span> ",returns:"ett  <span>naturligt tal</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi ersatt en  <span>potens</span> med ett  <span>naturligt tal</span>. ",steps:{firstflattenpowtoprod:"Först omvandlar vi  <span>potensen</span> till en  <span>produkt</span> av  <span>basfaktorer</span>.",thenmultiplyall:"Sedan multiplicerar vi ihop samtliga  <span>faktorer</span> till ett enda  <span>naturligt tal</span>!"}},en:{name:"calculate numeric power",explanation:"A  <span>power</span> where both the  <span>base</span> and the  <span>exponent</span> are positive  <span>integers</span> can be calculated to a single natural  <span>number</span>, unless the result is too big. ",targets:"a  <span>power</span> with  <span>natural numbers</span> as  <span>base</span> and  <span>exponent</span> ",returns:"a single natural  <span>number</span> ",effect:"This is a  <span>simplifying operation</span>, since we have replaced a  <span>power</span> with a natural  <span>number</span>. ",steps:{firstflattenpowtoprod:"First we transform the  <span>power</span> into a  <span>product</span> of  <span>base factors</span>.",thenmultiplyall:"Then we multiply them all together, leaving one single natural  <span>number</span>!"}}},transformPowOfFracAndSimplify:{id:181,sv:{name:"omvandla potens av kvot och förenkla",explanation:"En  <span>potens</span> där  <span>basen</span> är en  <span>kvot</span> kan skrivas som en  <span>kvot</span> av  <span>potenser</span>, vilket kan blotta möjligheter till ytterligare  <span>förenklingar</span>. ",targets:"en  <span>potens</span> där  <span>basen</span> är en  <span>kvot</span> ",returns:"en  <span>kvot</span> av  <span>potenser</span> där ena och/eller andra är  <span>förenklad</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom omskrivningen gav möjlighet till ytterligare  <span>förenkling</span>. ",steps:{firstmakeintofrac:"Först skriver vi om  <span>potensen</span> som en  <span>kvot</span>.",nowwesimplifynumer:"Vi  <span>förenklar</span>  <span>täljaren</span>.",nowwesimplifydenom:"Vi  <span>förenklar</span>  <span>nämnaren</span>."}},en:{name:"transform power of fraction and simplify",explanation:"A  <span>power</span> with a  <span>fraction base</span> can be written as a  <span>fraction</span> of  <span>powers</span>, which can provide opportunities for further  <span>simplifications</span>. ",targets:"a  <span>power</span> with a  <span>fraction base</span> ",returns:"a  <span>fraction</span> of  <span>powers</span> where one or both has been  <span>simplified</span> further ",effect:"This is a  <span>simplifying operation</span> since the rewrite gave opportunities for further  <span>simplifications</span>. ",steps:{firstmakeintofrac:"First we write the  <span>power</span> as a  <span>fraction</span>.",nowwesimplifynumer:"We  <span>simplify</span> the  <span>numerator</span>.",nowwesimplifydenom:"We  <span>simplify</span> the  <span>denominator</span>."}}},oneNumerFracToNegExpPow:{id:203,sv:{name:"omvandla kvot till potens",explanation:"En  <span>kvot</span> med  <span>täljare</span>  <span>1</span> är samma sak som en  <span>potens</span> med  <span>nämnaren</span> som  <span>bas</span> och  <span>-1</span> som  <span>exponent</span>. ",targets:"en  <span>kvot</span> med  <span>täljare</span>  <span>1</span> ",returns:"en  <span>potens</span> med  <span>nämnaren</span> som  <span>bas</span> och  <span>exponent</span>  <span>-1</span> ",effect:"Detta är en  <span>komplicerande operation</span>, då en  <span>potens</span> är svårare att förenkla vidare. ",steps:{turntopow:"Först gör vi om  <span>nämnaren</span> till en  <span>potens</span> genom att  <span>introducera</span> en  <span>exponent</span>  <span>1</span>.",thenmove:"Sedan kan vi flytta upp  <span>potensen</span> i  <span>täljaren</span> genom att  <a href='#' class='wordlink' linkto='swapsign'>byta tecken</a> på  <span>exponenten</span>. Resultatet blir en ensam  <span>potens</span> med  <span>negativ exponent</span>!"}},en:{name:"transform fraction to power",explanation:"A  <span>fraction</span> with  <span>numerator</span>  <span>1</span> is the same thing as a  <span>power</span> with the  <span>denominator</span> as  <span>base</span> and  <span>-1</span> as  <span>exponent</span>. ",targets:"a  <span>fraction</span> with  <span>numerator</span>  <span>1</span> ",returns:"a  <span>power</span> with  <span>exponent</span>  <span>-1</span> ",effect:"This is a  <span>complicating operation</span>, as the  <span>power</span> with  <span>negative exponent</span> is harder to  <span>simplify</span>. ",steps:{turntopow:"First we turn the  <span>denominator</span> into a  <span>power</span> by  <span>introducing</span> an  <span>exponent</span>  <span>1</span>.",thenmove:"Now we can move the  <span>power</span> up to the  <span>numerator</span> by switching signs in the  <span>exponent</span>. The result is a lone  <span>exponent</span> with a  <span>negative exponent</span>!"}}},turnNumToPow:{id:206,sv:{name:"dela upp naturligt tal till potens",explanation:"Vissa  <span>tal</span> kan delas upp i en  <span>potens</span> av ett lägre  <span>tal</span>. ",targets:"ett positivt  <span>heltal</span> som kan  <span>faktoriseras</span> till en  <span>produkt</span> där alla  <span>faktorer</span> är lika ",returns:"en numerisk  <span>potens</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom vi ersatt ett  <span>heltal</span> med en  <span>potens</span> av  <span>heltal</span>. ",steps:{factorisenum:"Först  <span>faktoriserar</span> vi  <span>talet</span> till en  <span>produkt</span> av identiska  <span>talfaktorer</span>.",nowmergetopow:"Nu när vi har en  <span>produkt</span> av identiska  <span>faktorer</span> kan vi göra om denna till en  <span>potens</span>!"}},en:{name:"split number to power",explanation:"Some  <span>numbers</span> can be  <span>split</span> into a  <span>power</span> of a smaller  <span>number</span>. ",targets:"a positive  <span>integer</span> that can be  <span>factorised</span> to a  <span>product</span> where all  <span>factors</span> are identical ",returns:"a numeric  <span>power</span> ",effect:"This is a  <span>complicating operation</span>, since we replace an  <span>integer</span> with a  <span>power</span> of  <span>integers</span>. ",steps:{factorisenum:"First we  <span>factorise</span> the  <span>integer</span> to a  <span>product</span> of identical  <span>integer</span>  <span>factors</span>.",nowmergetopow:"Now we have a  <span>product</span> of identical  <span>integers</span> which can be rephrased as a  <span>power</span>!"}}},collapsePowWithSecretBaseLogInExp:{id:207,sv:{name:"kollapsa baspotens med logaritmexponent",explanation:"Detta är en obskyr  <span>operation</span>! Men, om en  <span>exponent</span> innehåller en logaritmfaktor med en  <span>bas</span> som  <span>potensens</span>  <span>bas</span> är en  <span>potens</span> av, så kan vi  <span>kollapsa</span> detta! ",targets:"en  <span>potens</span> där  <span>basen</span> är ett  <span>heltal</span> som är en  <span>potens</span> av  <span>basen</span> till en logaritmfaktor i  <span>exponenten</span> ",returns:"en  <span>potens</span> där  <span>basen</span> är målet för  <span>logaritmen</span>, och  <span>exponenten</span> utgörs av resterna från den ursprungliga  <span>exponenten</span> och baspotensens  <span>exponent</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom den nya  <span>potensen</span> har färre beståndsdelar och ingen  <span>logaritm</span>. ",steps:{firstturnnumtopow:"Först skriver vi om  <span>basen</span> till en  <span>potens</span> med samma  <span>bas</span> som logaritmfaktorn i  <span>exponenten</span>.",flattenfirst:"Det gav oss en  <span>potens</span> där  <span>basen</span> är en  <span>potens</span>, vilket vi kan platta till så vi får en enda  <span>potens</span> med en  <span>produkt</span> som  <span>exponent</span>.",flattenexp:"Vi plattar till exponentprodukten.",finallyfix:"Nu har vi en  <span>potens</span> med en logaritmfaktor i  <span>exponenten</span> som har samma  <span>bas</span> som  <span>potensen</span>, vilket vi kan  <span>kollapsa</span>!"}},en:{name:"collapse base power with logarithm exponent",explanation:"This is an obscure  <span>operation</span>! But, if an  <span>exponent</span> contains a  <span>logarithm</span>  <span>factor</span> with a  <span>base</span> that the  <span>power base</span> is a  <span>power</span> of, we can  <span>collapse</span> this structure. ",targets:"a  <span>power</span> where the  <span>base</span> is an  <span>integer</span> that is the  <span>power</span> of the  <span>base</span> of a  <span>logarithm</span>  <span>factor</span> in the  <span>exponent</span> ",returns:"a  <span>power</span> where the  <span>base</span> is the  <span>logarithm</span> target, and the  <span>exponent</span> is made up from the residue  <span>factors</span> from the original  <span>exponent</span> and the  <span>base</span>  <span>power</span>  <span>exponent</span> ",effect:"This is a  <span>simplifying operation</span>, since the new  <span>power</span> has fewer parts and no  <span>logarithm</span>. ",steps:{firstturnnumtopow:"First we rewrite the  <span>base</span> to a  <span>power</span> with the same  <span>base</span> as the  <span>logarithm</span>  <span>factor</span> in the  <span>exponent</span>.",flattenfirst:"That gave us a  <span>power</span> with a  <span>power base</span>, which we can  <span>flatten</span> to a single  <span>power</span> with a  <span>product factor</span>.",flattenexp:"We also  <span>flatten</span> the  <span>exponent</span>  <span>product</span>.",finallyfix:"Now we have a  <span>power</span> with a  <span>logarithm</span>  <span>factor</span> in the  <span>exponent</span> that has the same  <span>base</span> as the  <span>power</span>. This we can  <span>collapse</span>!"}}},unravelEqOfPowAndOne:{id:305,sv:{name:"utred potens lika med 1",explanation:"Om en  <span>potens</span> är lika med  <span>talet 1</span> så finns endast två möjligheter: antingen är  <span>basen</span> lika med  <span>1</span>, eller så är  <span>exponenten</span> lika med  <span>0</span>. Om  <span>exponenten</span> är  <span>0</span> så får inte  <span>basen</span> också vara  <span>0</span>. ",targets:"en  <span>likhet</span> mellan en  <span>potens</span> och  <span>talet 1</span> ",returns:"en  <span>disjunktion</span> av en  <span>likhet</span> mellan  <span>potensens</span>  <span>bas</span> och  <span>1</span>, och en  <span>konjunktion</span> av  <span>likheten</span> mellan  <span>exponenten</span> och  <span>0</span> och en  <span>förbjuden likhet</span> mellan  <span>basen</span> och  <span>0</span> ",effect:"Trots att vi ersatt en  <span>relation</span> med en avancerad  <span>disjunktion</span> så är detta en  <span>förenklande operation</span>, eftersom  <span>disjunktionens</span>  <span>relationer</span> är enklare att tolka och förenkla. "},en:{name:"explore power equals one",explanation:"If a  <span>power</span> is equal to the  <span>number 1</span>, there are only two possibilities: either the  <span>base</span> is  <span>1</span>, or the  <span>exponent</span> is  <span>0</span>. If the  <span>exponent</span> is  <span>0</span> the  <span>base</span> must not be  <span>0</span>, or we would have an  <span>undefined</span>  <span>power</span>. ",targets:"an  <span>equality</span> where one side is a  <span>power</span> and the other side is the  <span>number 1</span> ",returns:"a  <span>disjunction</span> of an  <span>equality</span> between the  <span>power base</span> and  <span>1</span>, and a  <span>conjunction</span> with an  <span>equality</span> between the  <span>exponent</span> and  <span>0</span>, and a  <span>forbidden equality</span> between the  <span>base</span> and  <span>0</span> ",effect:" <span>Even though</span> we replaced a  <span>relation</span> with an advanced  <span>disjunction</span>, this is a  <span>simplifying operation</span> since the  <span>relations</span> in the  <span>disjunction</span> are easier to interpret and simplfify. "}},removeSuperfluousCompsInAnd:{id:304,sv:{name:"ta bort jämförelse från konjunktion",explanation:"Om en  <span>konjunktion</span> innehåller en  <span>likhet</span> och en  <span>jämförelse</span> med ett gemensamt led, och  <span>utsagornas</span> påståenden inte motsäger varandra, så är  <span>jämförelsen</span> överflödig och kan  <span>tas bort</span>. ",targets:"en  <span>konjunktion</span> med en  <span>likhet</span> och en  <span>jämförelse</span> som inte motsäger varandra och har ett gemensamt led ",returns:" <span>konjunktionen</span> med  <span>jämförelsen</span> borttagen, eller endast  <span>likheten</span> om det bara var två  <span>utsagor</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi  <span>tagit bort</span> en  <span>utsaga</span>. "},en:{name:"remove comparison from conjunction",explanation:"If a  <span>conjunction</span> contains an  <span>equality</span> and a  <span>comparison</span> with a common side, and the two  <span>relations</span> don't contradict each other, the  <span>comparison</span> is superfluous and can be  <span>removed</span>. ",targets:"a  <span>conjunction</span> with an  <span>equality</span> and a  <span>comparison</span> that don't contradict each other and have a common side ",returns:"the  <span>conjunction</span> with the  <span>comparison</span>  <span>removed</span>, or just the  <span>equality</span> if the  <span>conjunction</span> only had two values ",effect:"This is a  <span>simplifying operation</span> since we have  <span>removed</span> a value. "}},shaveCompWithEqInAnd:{id:303,sv:{name:"föredra likhet i konjunktion",explanation:"Om en  <span>konjunktion</span> innehåller en  <span>likhet</span> och en  <a href='#' class='wordlink' linkto='nonstrictcomparison'>ickestrikt jämförelse</a> med identiska led, så är  <span>jämförelsen</span> överflödig och kan  <span>tas bort</span>. ",targets:"en  <span>konjunktion</span> med  <span>likhet</span> och ickestrick  <span>jämförelse</span> med identiska sidor ",returns:" <span>konjunktionen</span> med  <span>jämförelsen</span> borttagen, eller endast  <span>likheten</span> om det bara var två  <span>utsagor</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi  <span>tagit bort</span> en  <span>utsaga</span>. "},en:{name:"prefer equality in conjunction",explanation:"If a  <span>conjunction</span> contains an  <span>equality</span> and a  <a href='#' class='wordlink' linkto='nonstrictcomparison'>non strict comparison</a> with identical sides, the  <span>comparison</span> is superfluous and can be  <span>removed</span>. ",targets:"a  <span>conjunction</span> containing an  <span>equality</span> and a  <a href='#' class='wordlink' linkto='nonstrictcomparison'>non strict comparison</a> with identical sides ",returns:"the  <span>conjunction</span> with the  <span>comparison</span>  <span>removed</span>, or just the  <span>equality</span> if the  <span>conjunction</span> only had two values ",effect:"This is a  <span>simplifying operation</span> since we have  <span>removed</span> a  <span>comparison</span>. "}},undefinedChildToFalseInLogic:{id:302,sv:{name:"utsaga med odefinierad del är falsk",explanation:"Om en  <span>utsaga</span> i en  <span>konjunktion</span>,  <span>disjunktion</span> eller  <span>logisk förgrening</span> är  <span>odefinierad</span> eller innehåller en  <span>odefinierad</span> del, så kan vi räkna den  <span>utsagan</span> som  <span>falsk</span> när vi skall avgöra konstruktionens  <span>sanningsvärde</span>. ",targets:"en  <span>konjunktion</span>,  <span>disjunktion</span> eller  <span>logisk förgrening</span> med  <span>odefinierad</span> del ",returns:"konstruktionen med  <span>utsagan</span> utbytt mot  <span>falskt</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi kan fortsätta utvärdera konstruktionen utifrån att  <span>utsagan</span> är  <span>falsk</span>. "},en:{name:"statement with undefined part is false",explanation:"If a statement in a  <span>disjunction</span>,  <span>conjunction</span> or  <span>logic branching</span> is  <span>undefined</span> or contains an  <span>undefined</span> part, then that statement is considered to be  <span>false</span>. ",targets:"a  <span>disjunction</span>,  <span>conjunction</span> or  <span>logic branching</span> with an  <span>undefined</span> part ",returns:"the construct with the  <span>undefined</span> part replaced by  <span>false</span> ",effect:"This is a  <span>simplifying operation</span> as we can now continue to evaluate the  <span>truth value</span> of the construct as if the statement is  <span>false</span>. "}},disjunctionWithHiddenOppsToTrue:{id:301,sv:{name:"finn dold motsats i disjunktion",explanation:"Om en  <span>disjunktion</span> innehåller  <span>utsagor</span> som kan omformuleras till att bli varandras motsatser, då är  <span>disjunktionen</span>  <span>sann</span> eftersom en av  <span>utsagorna</span> är  <span>sanna</span>. ",targets:"en  <span>disjunktion</span> med  <span>utsagor</span> som kan omformuleras till att bli varandras motsatser ",returns:"det logiska värdet  <span>sant</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi ersatt en  <span>disjunktion</span> med ett  <span>sanningsvärde</span>. ",steps:{makereltonot:"Vi skriver om den ena  <span>utsagan</span> som en  <span>logisk negation</span> av sin motsats.",makesamenow:"Vi  <span>omformulerar</span>  <span>utsagorna</span> så att de blir exakt lika, förutom att den ena är logiskt negerad.",nowtotrue:" <span>Disjunktionen</span> har nu två  <span>utsagor</span> som är identiska förutom att den ena är logiskt negerad, vilket innebär att minst en är  <span>sann</span> och hela  <span>disjunktionen</span> är därmed  <span>sann</span>!"}},en:{name:"find hidden opposites in disjunction",explanation:"If a  <span>disjunction</span> contains two  <span>relation</span> which can be rephrased to be each others' opposites, then the  <span>disjunction</span> is  <span>true</span> since one of the  <span>relations</span> are  <span>true</span>. ",targets:"a  <span>disjunction</span> with parts that can be rephrased to be each others' opposites ",returns:"the logical value  <span>true</span> ",effect:"This is a  <span>simplifying operation</span> since we replace a  <span>disjunction</span> with a  <span>truth value</span>. ",steps:{makereltonot:"We write one  <span>relation</span> as a logical  <span>negation</span> of it's opposite.",makesamenow:"We now make the  <span>relations</span> exactly equal, except one is logically negated.",nowtotrue:"The  <span>disjunction</span> now contains two opposite parts. As one of those parts must be  <span>true</span>, the  <span>disjunction</span> is  <span>true</span>!"}}},conjunctionWithHiddenOppsToFalse:{id:300,sv:{name:"finn dold motsats i konjunktion",explanation:"Om en  <span>konjunktion</span> innehåller  <span>utsagor</span> som kan omformuleras till att bli varandras motsatser, då är  <span>konjunktionen</span>  <span>falsk</span> eftersom en av  <span>utsagorna</span> är  <span>falska</span>. ",targets:"en  <span>konjunktion</span> med  <span>utsagor</span> som kan omformuleras till att bli varandras motsatser ",returns:"det logiska värdet  <span>falskt</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi ersatt en  <span>konjunktion</span> med ett  <span>sanningsvärde</span>. ",steps:{makereltonot:"Vi skriver om den ena  <span>utsagan</span> som en  <span>logisk negation</span> av sin motsats.",makesamenow:"Vi  <span>omformulerar</span>  <span>utsagorna</span> så att de blir exakt lika, förutom att den ena är logiskt negerad.",nowtofalse:" <span>Konjunktionen</span> har nu två  <span>utsagor</span> som är identiska förutom att den ena är logiskt negerad, vilket innebär att minst en är  <span>falsk</span> och hela  <span>konjunktionen</span> är därmed  <span>falsk</span>!"}},en:{name:"find hidden opposite in conjunction",explanation:"If a  <span>conjunction</span> contains two  <span>relation</span> which can be rephrased to be each others' opposites, then the  <span>conjunction</span> is  <span>false</span> since one of the  <span>relations</span> are  <span>false</span>. ",targets:"a  <span>conjunction</span> with parts that can be rephrased to be each others' opposites ",returns:"the logical value  <span>false</span> ",effect:"This is a  <span>simplifying operation</span> since we replace a  <span>conjunction</span> with a  <span>truth value</span>. ",steps:{makereltonot:"We write one  <span>relation</span> as a logical  <span>negation</span> of it's opposite.",makesamenow:"We now make the  <span>relations</span> exactly equal, except one is logically negated.",nowtofalse:"The  <span>conjunction</span> now contains two opposite parts. As one of those parts must be  <span>false</span>, the  <span>conjunction</span> is  <span>false</span>!"}}},expandRelToNot:{id:299,sv:{name:"skriv relation som negerad motsats",explanation:"En  <span>relation</span> kan omvandlas till en  <span>logisk negation</span> av sin motsats. ",targets:"en  <span>relation</span> ",returns:"en  <span>logisk negation</span> av en  <span>relation</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom vi ersatt en  <span>relation</span> med en  <span>logisk negation</span> av en  <span>relation</span>. "},en:{name:"write relation as negated opposite",explanation:"A  <span>relation</span> can be transformed into a  <span>logic negation</span> of its opposite. ",targets:"a  <span>relation</span> ",returns:"a  <span>logic negation</span> of a  <span>relation</span> ",effect:"This is a  <span>complicating operation</span>, since we have replaced a  <span>relation</span> with a  <span>logic negation</span> of a  <span>relation</span>. "}},disjunctionWithOppsToTrue:{id:298,sv:{name:"kollapsa disjunktion med motsats",explanation:"En  <span>disjunktion</span> som innehåller två  <span>utsagor</span> som är varandras motsatser måste vara  <span>sann</span>. Antingen är den ena eller den andra  <span>utsagan</span>  <span>sanna</span>, och oavsett vilket så innehåller  <span>disjunktionen</span> en  <span>sann</span>  <span>utsaga</span> och är därmed  <span>sann</span>! ",targets:"en  <span>disjunktion</span> med två  <span>utsagor</span> där den ena är en  <span>logisk negation</span> av den andra. ",returns:"det logiska värdet  <span>sant</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi ersatt en  <span>disjunktion</span> med det logiska värdet  <span>sant</span>. "},en:{name:"collapse disjunction with opposites",explanation:"A  <span>disjunction</span> is  <span>true</span> if it has one statement that is a  <span>logic negation</span> of another statement found in the  <span>disjunction</span>. Either one or the other of the statements is  <span>true</span>, and either way, the  <span>disjunction</span> contains a  <span>true</span> statement and is therefore  <span>true</span>! ",targets:"a  <span>disjunction</span> where one statement is a  <span>logic negation</span> of another ",returns:"the logical value  <span>true</span> ",effect:"This is a  <span>simplifying operation</span>, since we have replaced a  <span>disjunction</span> with the logical value of  <span>true</span>. "}},conjunctionWithOppsToFalse:{id:297,sv:{name:"kollapsa konjunktion med motsats",explanation:"En  <span>konjunktion</span> som innehåller två  <span>utsagor</span> som är varandras motsatser måste vara  <span>falsk</span>. Antingen är den ena eller den andra  <span>utsagan</span>  <span>falsk</span>, och oavsett vilket så innehåller  <span>konjunktionen</span> en  <span>falsk</span>  <span>utsaga</span> och är därmed  <span>falsk</span>! ",targets:"en  <span>konjunktion</span> med två  <span>utsagor</span> där den ena är en  <span>logisk negation</span> av den andra. ",returns:"det logiska värdet  <span>falskt</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi ersatt en  <span>konjunktion</span> med det logiska värdet  <span>falskt</span>. "},en:{name:"collapse conjunction with opposites",explanation:"A  <span>conjunction</span> is  <span>false</span> if it has one statement that is a  <span>logic negation</span> of another statement found in the  <span>conjunction</span>. Either one or the other of the statements is  <span>false</span>, and either way, the  <span>conjunction</span> contains a  <span>false</span> statement and is therefore  <span>false</span>! ",targets:"a  <span>conjunction</span> where one statement is a  <span>logic negation</span> of another ",returns:"the logical value  <span>false</span> ",effect:"This is a  <span>simplifying operation</span>, since we have replaced a  <span>conjunction</span> with the logical value of  <span>false</span>. "}},removeSuperfluousCompsInOrWithNeq:{id:294,sv:{name:"föredra förbjuden likhet i disjunktion",explanation:"Om en  <span>disjunktion</span> innehåller en  <span>förbjuden likhet</span> och en  <span>jämförelse</span> med ett gemensamt led, och  <span>utsagornas</span> påståenden inte motsäger varandra, så är  <span>jämförelsen</span> överflödig och kan  <span>tas bort</span>. ",targets:"en  <span>disjunktion</span> med en  <span>förbjuden likhet</span> och en  <span>jämförelse</span> som inte motsäger varandra och har ett gemensamt led ",returns:" <span>disjunktionen</span> med  <span>jämförelsen</span> borttagen, eller endast den förbjudna  <span>likheten</span> om det bara var två  <span>utsagor</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi  <span>tagit bort</span> en  <span>utsaga</span>. "},en:{name:"prefer forbidden equality in disjunction",explanation:"If a  <span>disjunction</span> contains a  <span>forbidden equality</span> and a  <span>comparison</span> with a common side, and the two  <span>relations</span> don't contradict each other, the  <span>comparison</span> is superfluous and can be  <span>removed</span>. ",targets:"a  <span>disjunction</span> with a  <span>forbidden equality</span> and a  <span>comparison</span> that don't contradict each other and have a common side ",returns:"the  <span>disjunction</span> with the  <span>comparison</span>  <span>removed</span>, or just the  <span>forbidden equality</span> if the  <span>disjunction</span> only had two values ",effect:"This is a  <span>simplifying operation</span> since we have  <span>removed</span> a value. "}},disjunctionWithNeqInCompToTrue:{id:293,sv:{name:"kollapsa inkompatibel disjunktion",explanation:"Om en  <span>disjunktion</span> innehåller en  <span>förbjuden likhet</span> och en  <span>jämförelse</span> med ett gemensamt led, och  <span>utsagorna</span> motsäger varandra, så innehåller  <span>disjunktionen</span> garanterat ett  <span>sant</span> värde och kan  <span>kollapsas</span> till  <span>sant</span>. ",targets:"en  <span>disjunktion</span> med en  <span>förbjuden likhet</span> och en  <span>jämförelse</span> som  har ett gemensamt led och motsäger varandra ",returns:" <span>sant</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi ersatt en  <span>disjunktion</span> med  <span>sant</span>. "},en:{name:"collapse incompatible disjunction",explanation:"If a  <span>disjunction</span> contains a  <span>forbidden equality</span> and a  <span>comparison</span> with a common side, and the two  <span>relations</span> contradict each other, the  <span>disjunction</span> is guaranteed to contain a  <span>true</span> value and can therefore be  <span>collapsed</span> to  <span>true</span>. ",targets:"a  <span>disjunction</span> with a  <span>forbidden equality</span> and a  <span>comparison</span> that have a common side and contradict each other ",returns:" <span>true</span> ",effect:"This is a  <span>simplifying operation</span> since we have replaced a  <span>disjunction</span> with the  <span>truth value</span>  <span>true</span>. "}},removeSuperfluousEqsInOr:{id:292,sv:{name:"ta bort likhet från disjunktion",explanation:"Om en  <span>disjunktion</span> innehåller en  <span>likhet</span> och en  <span>jämförelse</span> med ett gemensamt led, och  <span>utsagornas</span> påståenden inte motsäger varandra, så är  <span>likheten</span> överflödig och kan  <span>tas bort</span>.  <span>Jämförelsen</span> är ju alltid  <span>sann</span> om  <span>likheten</span> är  <span>sann</span>, och innehåller därför mer information. ",targets:"en  <span>disjunktion</span> med en  <span>likhet</span> och en  <span>jämförelse</span> som inte motsäger varandra och har ett gemensamt led ",returns:" <span>disjunktionen</span> med  <span>likheten</span> borttagen, eller endast  <span>jämförelsen</span> om det bara var två  <span>utsagor</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi  <span>tagit bort</span> en  <span>utsaga</span>. "},en:{name:"remove equality from disjunction",explanation:"If a  <span>disjunction</span> contains an  <span>equality</span> and a  <span>comparison</span> with a common side, and the two  <span>relations</span> don't contradict each other, the  <span>equality</span> is superfluous and can be  <span>removed</span>. The  <span>comparison</span> is always  <span>true</span> if the  <span>equality</span> is  <span>true</span>, and thus contains more information. ",targets:"a  <span>disjunction</span> with an  <span>equality</span> and a  <span>comparison</span> that don't contradict each other and have a common side ",returns:"the  <span>disjunction</span> with the  <span>equality</span>  <span>removed</span>, or just the  <span>comparison</span> if the  <span>disjunction</span> only had two values ",effect:"This is a  <span>simplifying operation</span> since we have  <span>removed</span> a value. "}},swallowContainedComparisonsInOr:{id:291,sv:{name:"välj jämförelse i disjunktion",explanation:"Om en  <span>uttryck</span> förekommer i två olika  <span>jämförelser</span> med  <span>tal</span>, så ryms den ena  <span>jämförelsen</span> i den andra. Vi kan då  <span>ta bort</span> den svagare  <span>jämförelsen</span>, eftersom det är den starkare  <span>jämförelsens</span>  <span>sanningsvärde</span> som kommer vara avgörande för  <span>disjunktionens</span>  <span>sanningsvärde</span>. ",targets:"en  <span>disjunktion</span> med två  <span>jämförelser</span> mellan samma  <span>uttryck</span> och  <span>tal</span> ",returns:"en  <span>disjunktion</span> med en  <span>jämförelse</span> borttagen ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi  <span>tagit bort</span> en  <span>jämförelse</span>. "},en:{name:"choose comparison in disjunction",explanation:"In a  <span>disjunction</span>, if an  <span>expression</span> is subject to two different  <span>comparisons</span> against  <span>numbers</span>, then one  <span>comparison</span> is contained inside the other. We can therefore  <span>remove</span> the weaker  <span>comparison</span>, since it is the  <span>truth value</span> of the stronger  <span>comparison</span> which will decide the  <span>truth value</span> of the  <span>disjunction</span>. ",targets:"a  <span>disjunction</span> with two  <span>comparisons</span> of the same  <span>expression</span> against  <span>numbers</span> ",returns:"a  <span>disjunction</span> with one  <span>comparison</span>  <span>removed</span> ",effect:"This is a  <span>simplifying operation</span> since we have  <span>removed</span> a  <span>comparison</span>. "}},combineOppositeStrictCombsInOr:{id:290,sv:{name:"slå ihop olikheter i disjunktion",explanation:"Om en  <span>disjunktion</span> innehåller två motstående  <a href='#' class='wordlink' linkto='strictcomparison'>strikta jämförelser</a> med identiska sidor så kan dessa  <span>jämförelser</span> ersättas med en  <span>förbjuden likhet</span>. ",targets:"en  <span>disjunktion</span> med två motstående  <a href='#' class='wordlink' linkto='strictcomparison'>strikta jämförelser</a> med identiska sidor ",returns:"en  <span>disjunktion</span> med  <span>jämförelserna</span> ersatta av en  <span>förbjuden likhet</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi ersatt två  <span>utsagor</span> med en enda. "},en:{name:"merge comparisons in disjunction",explanation:"If a  <span>disjunction</span> contains two opposite  <a href='#' class='wordlink' linkto='strictcomparison'>strict comparisons</a> with identical sides, they can be replaced with a single  <span>forbidden equality</span>. ",targets:"a  <span>disjunction</span> with two opposite  <a href='#' class='wordlink' linkto='strictcomparison'>strict comparisons</a> with identical sides ",returns:"a  <span>disjunction</span> with the  <a href='#' class='wordlink' linkto='strictcomparison'>strict comparisons</a> replaced with a  <span>forbidden equality</span> ",effect:"This is a  <span>simplifying operation</span> since we have replaced two values with one. "}},flipRelation:{id:287,sv:{name:"vänd relation",explanation:"En  <span>relation</span> kan alltid spegelvändas, utan att betydelsen förändras. ",targets:"en  <span>relation</span> ",returns:"en spegelvänd  <span>relation</span> ",effect:"Detta är egentligen endast en  <span>omformulerande</span>  <span>operation</span>, men då det är brukligt att ha  <span>variabeln</span> i vänsterledet så kan den anses vara  <span>villkorligt förenklande</span> när  <span>variabeln</span> är i högerledet. "},en:{name:"flip relation",explanation:"A  <span>relation</span> can always be mirrored without changing the meaning. ",targets:"a  <span>relation</span> ",returns:"a mirrored  <span>relation</span> ",effect:"This is really just a rephrasigng  <span>operation</span>, but since it is customary to have a lone  <span>variable</span> to the left, the  <span>operation</span> can be considered to be  <span>conditionally simplifying</span> when the  <span>variable</span> is to the right. "}},removeInferredComp:{id:286,sv:{name:"ta bort implicit dublett i konjunktion",explanation:"Ibland bildat två  <span>jämförelser</span> en kedja, vilket gör att vi kan sägas ha en implicit tredje  <span>jämförelse</span> av första  <span>utsagan</span> i första  <span>relationen</span> och sista  <span>utsagan</span> i andra  <span>relationen</span>. Om denna implicita  <span>jämförelse</span> har en existerande kopia i  <span>konjunktionen</span> så kan den  <span>tas bort</span>! ",targets:"en  <span>konjunktion</span> med  <span>jämförelse</span> identisk med implicit  <span>jämförelse</span> från jämförelsekedja ",returns:"en  <span>konjunktion</span> med en  <span>jämförelse</span> färre ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi  <span>tagit bort</span> en  <span>jämförelse</span>. "},en:{name:"remove implicit double from conjunction",explanation:"If two  <span>comparisons</span> form a chain, we have a third implicit  <span>comparison</span> between the first side of the first  <span>comparison</span> and the second side of the last  <span>comparison</span>. If this implicit  <span>comparison</span> has an existing double in the  <span>conjunction</span>, that double can be  <span>removed</span>! ",targets:"a  <span>conjunction</span> with a  <span>comparison</span> identical to an implicit  <span>comparison</span> from a  <span>comparison</span> chain ",returns:"a  <span>conjunction</span> with one less  <span>comparison</span> ",effect:"This is a  <span>simplifying operation</span> since we have  <span>removed</span> a  <span>comparison</span>. "}},complexComparisonToBool:{id:282,sv:{name:"kollapsa jämförelse av komplext tal",explanation:"Algebra Explorer använder sig av en  <span>förenklad</span> modell där en  <span>jämförelse</span> mellan ett  <a href='#' class='wordlink' linkto='complexnum'>komplext tal</a> och ett reellt  <span>tal</span> är  <span>sann</span> om det  <span>reella talet</span> anses vara lägre, annars  <span>falsk</span>. Detta är en grov  <span>förenkling</span> av verkligheten, och bara en tillfällig lösning för att kunna hantera uppkomna  <a href='#' class='wordlink' linkto='complexnum'>komplexa tal</a> som lösningar vid ekvationslösning, som egentligen inte stöder  <a href='#' class='wordlink' linkto='complexnum'>komplexa tal</a> än. ",targets:"en  <span>jämförelse</span> mellan ett  <a href='#' class='wordlink' linkto='complexnum'>komplext tal</a> och ett reellt  <span>tal</span> ",returns:" <span>sanningsvärdet</span>  <span>sant</span> om det  <span>reella talet</span> är lägre, annars  <span>falskt</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi ersatt en  <span>jämförelse</span> med ett  <span>sanningsvärde</span>. "},en:{name:"collapse comparison of complex number",explanation:"Algebra Explorer uses a  <span>simplified</span> model where a  <span>comparison</span> between a  <a href='#' class='wordlink' linkto='complexnum'>complex number</a> and a  <span>real number</span> is  <span>true</span> if the  <span>real number</span> is assumed to be lower, otherwise the  <span>comparison</span> is  <span>false</span>. This is not mathematically rigorous and just a temporary way to handle complex solutions in the  <span>equation</span> solving, which doesn't actually support  <a href='#' class='wordlink' linkto='complexnum'>complex numbers</a> yet. ",targets:"a  <span>comparison</span> between a  <a href='#' class='wordlink' linkto='complexnum'>complex number</a> and a  <span>real number</span> ",returns:"the  <span>truth value</span>  <span>true</span> if the  <span>real number</span> is assumed to be lower, otherwise  <span>false</span> ",effect:"This is a  <span>simplifying operation</span> since we have replaced a  <span>comparison</span> with a  <span>truth value</span>. "}},swallowContainedComparisons:{id:279,sv:{name:"välj jämförelse i konjunktion",explanation:"Om en  <span>uttryck</span> förekommer i två olika  <span>jämförelser</span> med  <span>tal</span>, så ryms den ena  <span>jämförelsen</span> i den andra. Vi kan därför  <span>ta bort</span> den starkare  <span>jämförelsen</span>, eftersom det är den svagare  <span>jämförelsens</span> giltighet som kommer vara avgörande för  <span>konjunktionens</span>  <span>sanningsvärde</span>. ",targets:"en  <span>konjunktion</span> med två  <span>jämförelser</span> mellan samma  <span>uttryck</span> och  <span>tal</span> ",returns:"en  <span>konjunktion</span> med en  <span>jämförelse</span> borttagen ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi  <span>tagit bort</span> en  <span>jämförelse</span>. "},en:{name:"choose comparison in conjunction",explanation:"In a  <span>conjunction</span>, if an  <span>expression</span> is subject to two different  <span>comparisons</span> against  <span>numbers</span>, then one  <span>comparison</span> is contained inside the other. We can therefore  <span>remove</span> the stronger  <span>comparison</span>, since it is the  <span>truth value</span> of the weaker  <span>comparison</span> which will decide the  <span>truth value</span> of the  <span>conjunction</span>. ",targets:"a  <span>conjunction</span> with two  <span>comparisons</span> of the same  <span>expression</span> against  <span>numbers</span> ",returns:"a  <span>conjunction</span> with one  <span>comparison</span>  <span>removed</span> ",effect:"This is a  <span>simplifying operation</span> since we have  <span>removed</span> a  <span>comparison</span>. "}},combineOppositeOrEqsToEqInAnd:{id:278,sv:{name:"slå ihop jämförelser till likhet",explanation:"Om en  <span>konjunktion</span> innehåller två motstående  <a href='#' class='wordlink' linkto='nonstrictcomparison'>ickestrikta jämförelser</a> med identiska sidor så kan dessa  <span>jämförelser</span> ersättas med en  <span>likhet</span>. ",targets:"en  <span>konjunktion</span> med två motstående  <a href='#' class='wordlink' linkto='nonstrictcomparison'>ickestrikta jämförelser</a> med identiska sidor ",returns:"en  <span>konjunktion</span> med  <span>jämförelserna</span> ersatta av en  <span>likhet</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi ersatt två  <span>utsagor</span> med en enda. "},en:{name:"merge comparisons to equality",explanation:"If a  <span>conjunction</span> contains two opposite  <a href='#' class='wordlink' linkto='nonstrictcomparison'>non strict comparisons</a> with identical sides, they can be replaced with a single  <span>equality</span>. ",targets:"a  <span>conjunction</span> with two opposite  <a href='#' class='wordlink' linkto='nonstrictcomparison'>non strict comparisons</a> with identical sides ",returns:"a  <span>conjunction</span> with the  <a href='#' class='wordlink' linkto='nonstrictcomparison'>non strict comparisons</a> replaced with an  <span>equality</span> ",effect:"This is a  <span>simplifying operation</span> since we have replaced two values with one. "}},andWithIncompatiblePartsToFalse:{id:277,sv:{name:"kollapsa konjunktion till falskt",explanation:"En  <span>konjunktion</span> måste vara  <span>falsk</span> om den innehåller två  <span>utsagor</span> som inte kan vara  <span>sanna</span> samtidigt, eftersom en  <span>konjunktion</span> är  <span>sann</span> endast om samtliga  <span>utsagor</span> är  <span>sanna</span>. ",targets:"en  <span>konjunktion</span> med två inkompatibla  <span>utsagor</span> ",returns:" <span>falskt</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi ersatt en  <span>konjunktion</span> med ett  <span>sanningsvärde</span>. "},en:{name:"collapse conjunction to false",explanation:"A  <span>conjunction</span> must be  <span>false</span> if it contains two  <span>relations</span> that cannot both be  <span>true</span> at the same time. ",targets:"a  <span>conjunction</span> with two incompatible  <span>relations</span> ",returns:" <span>false</span> ",effect:"This is a  <span>simplifying operation</span> since we have replaced a  <span>conjunction</span> with a  <span>truth value</span>. "}},removeSuperfluousNeqsInAnd:{id:276,sv:{name:"ta bort förbjuden likhet",explanation:"Om en  <span>konjunktion</span> innehåller en  <span>relation</span> och en  <span>förbjuden likhet</span> med ett gemensamt led, och  <span>utsagornas</span> påståenden inte motsäger varandra, så är den förbjudna  <span>likheten</span> överflödig och kan  <span>tas bort</span>. ",targets:"en  <span>konjunktion</span> med en  <span>förbjuden likhet</span> och en  <span>relation</span> som inte motsäger varandra och har ett gemensamt led ",returns:" <span>konjunktionen</span> med den förbjudna  <span>likheten</span> borttagen, eller endast  <span>relationen</span> om det bara var två  <span>utsagor</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi  <span>tagit bort</span> en  <span>utsaga</span>. "},en:{name:"remove forbidden equality",explanation:"If a  <span>conjunction</span> contains a  <span>forbidden equality</span> and a  <span>relation</span> with a common side, and the two  <span>relations</span> don't contradict each other, the  <span>forbidden equality</span> is superfluous and can be  <span>removed</span>. ",targets:"a  <span>conjunction</span> with a  <span>forbidden equality</span> and a  <span>relation</span> that don't contradict each other and have a common side ",returns:"the  <span>conjunction</span> with the  <span>forbidden equality</span>  <span>removed</span>, or just the  <span>equality</span> if the  <span>conjunction</span> only had two values ",effect:"This is a  <span>simplifying operation</span> since we have  <span>removed</span> a value. "}},shaveRelsInAnd:{id:275,sv:{name:"gör jämförelse strikt i konjunktion",explanation:"Om en  <span>konjunktion</span> innehåller en  <span>förbjuden likhet</span> och en  <a href='#' class='wordlink' linkto='nonstrictcomparison'>ickestrikt jämförelse</a> med samma sidor, så kan vi  <span>slå ihop</span> dessa till en  <a href='#' class='wordlink' linkto='strictcomparison'>strikt jämförelse</a>. ",targets:"en  <span>konjunktion</span> med en  <span>förbjuden likhet</span> och en  <a href='#' class='wordlink' linkto='nonstrictcomparison'>ickestrikt jämförelse</a> med identiska led ",returns:" <span>konjunktionen</span> utan den förbjudna  <span>likheten</span>, och  <span>jämförelsen</span> omgjord till strikt ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi  <span>tagit bort</span> en  <span>utsaga</span>. "},en:{name:"make comparison strict in conjunction",explanation:"If a  <span>conjunction</span> contains a  <span>forbidden equality</span> and a  <a href='#' class='wordlink' linkto='nonstrictcomparison'>non strict comparison</a> with the same sides, we can  <span>merge</span> them into a  <a href='#' class='wordlink' linkto='strictcomparison'>strict comparison</a>. ",targets:"a  <span>conjunction</span> with a  <span>forbidden equality</span> and a  <a href='#' class='wordlink' linkto='nonstrictcomparison'>non strict comparison</a> with the same sides ",returns:"a  <span>conjunction</span> without the  <span>forbidden equality</span> and the  <span>comparison</span> made strict ",effect:"This is a  <span>simplifying operation</span> since we have  <span>removed</span> a value from the  <span>conjunction</span>. "}},collapseNotAnd:{id:274,sv:{name:"kollapsa logisk negation av konjunktion",explanation:"En  <span>konjunktion</span> är  <span>sann</span> om samtliga  <span>utsagor</span> är  <span>sanna</span>. Motsatsen blir att minst en av  <span>utsagorna</span> är  <span>falska</span>, vilket är samma sak som att minst en av  <span>utsagornas</span> motsatser är  <span>sann</span>. En negerad  <span>konjunktion</span> kan därför skrivas om som en  <span>disjunktion</span> av negerade  <span>utsagor</span> från  <span>konjunktionen</span>. ",targets:"en  <span>logisk negation</span> av en  <span>konjunktion</span> ",returns:"en  <span>disjunktion</span> av negerade  <span>utsagor</span> ",effect:"Trots att vi nu har fler  <span>logiska negationer</span> så är detta en  <span>förenklande operation</span>, eftersom  <span>uttrycket</span> inte är lika djupt nästlat. "},en:{name:"collapse logic negation of conjunction",explanation:"A  <span>conjunction</span> is  <span>true</span> if all contained values are  <span>true</span>. The opposite is that at least one of the values are  <span>false</span>, which is the same thing as at least one of the values' opposites are  <span>true</span>. Therefore a negated  <span>conjunction</span> can be rewritten as a  <span>disjunction</span> of negated values from the  <span>conjunction</span>. ",targets:"a  <span>logic negation</span> of a  <span>conjunction</span> ",returns:"a  <span>disjunction</span> of negated values ",effect:" <span>Even though</span> we now have more  <span>logic negations</span>, this is a  <span>simplifying operation</span> since the  <span>expression</span> isn't as deeply nested. "}},collapseNotOr:{id:273,sv:{name:"kollapsa logisk negation av disjunktion",explanation:"En  <span>disjunktion</span> är  <span>sann</span> om minst en  <span>utsaga</span> är  <span>sann</span>. Motsatsen blir att samtliga  <span>utsagor</span> är  <span>falska</span>, vilket är samma sak som att säga att samtliga  <span>utsagors</span> motsatser är  <span>sanna</span>. En negerad  <span>disjunktion</span> kan därför skrivas om som en  <span>konjunktion</span> av negerade  <span>utsagor</span> från  <span>disjunktionen</span>. ",targets:"en  <span>logisk negation</span> av en  <span>disjunktion</span> ",returns:"en  <span>konjunktion</span> av negerade  <span>utsagor</span> ",effect:"Trots att vi nu har fler  <span>logiska negationer</span> så är detta en  <span>förenklande operation</span>, eftersom  <span>uttrycket</span> inte är lika djupt nästlat. "},en:{name:"collapse logic negation of disjunction",explanation:"A  <span>disjunction</span> is  <span>true</span> if at least on contained value is  <span>true</span>. The opposite is that all contained values are  <span>false</span>, which is the same thing as that all contained values' opposites are  <span>true</span>. Therefore a negated  <span>disjunction</span> can be rewritten as a  <span>conjunction</span> of negated values from the  <span>disjunction</span>. ",targets:"a  <span>logic negation</span> of a  <span>disjunction</span> ",returns:"a  <span>conjunction</span> of negated values ",effect:" <span>Even though</span> we now have more  <span>logic negations</span>, this is a  <span>simplifying operation</span> since the  <span>expression</span> isn't as deeply nested. "}},collapseNotRel:{id:272,sv:{name:"kollapsa logisk negation av relation",explanation:"En  <span>logisk negation</span> av en  <span>relation</span> kan  <span>kollapsas</span> till den negerade  <span>relationens</span> motsats. ",targets:"en  <span>logisk negation</span> av en  <span>relation</span> ",returns:"en  <span>relation</span> som är motsats till den negerade  <span>relationen</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi bytt ut en  <span>logisk negation</span> av en  <span>relation</span> mot en  <span>relation</span> "},en:{name:"collapse not of relation",explanation:"A  <span>logic negation</span> of a  <span>relation</span> can be  <span>collapsed</span> into a single  <span>relation</span> that is the opposite of the negated  <span>relation</span>. ",targets:"a  <span>logic negation</span> of a  <span>relation</span> ",returns:"a  <span>relation</span> which is the opposite of the negated  <span>relation</span> ",effect:"This is a  <span>simplifying operation</span>, since we replace a  <span>logic negation</span> of a  <span>relation</span> with a lone  <span>relation</span>. "}},unrollIfElse:{id:271,sv:{name:"skriv logisk förgrening som disjunktion",explanation:"En  <span>logisk förgrening</span> kan omformuleras som en  <span>disjunktion</span> av två  <span>konjunktioner</span>. Den första  <span>konjunktionen</span> består av  <span>om-villkoret</span> och  <span>så-grenen</span>, den andra består av en  <span>logisk negation</span> av  <span>om-villkoret</span> och  <span>annars-grenen</span>. ",targets:"en  <span>logisk förgrening</span> ",returns:"en  <span>disjunktion</span> av  <span>konjunktioner</span> ",effect:"Detta är en  <span>förenklande operation</span>. Även om vi nu måste upprepa  <span>om-villkoret</span> så har vi formulerat förgreningen med en  <span>disjunktion</span>, vilket vi sedan kan förenkla vidare. "},en:{name:"write logic branching as disjunction",explanation:"A  <span>logic branching</span> can be rephrased as a  <span>disjunction</span> of two  <span>conjunctions</span>. The first  <span>conjunction</span> consists of the  <span>if-condition</span> and the  <span>then-branch</span>, the second consists of a  <span>logic negation</span> of the  <span>if-condition</span> and the  <span>else-branch</span>. ",targets:"a  <span>logic branching</span> ",returns:"a  <span>disjunction</span> of  <span>conjunctions</span> ",effect:"This is a  <span>simplifying operation</span>.  <span>Even though</span> we must now repeat the  <span>if-condition</span>, we have phrased the branching with  <span>disjunctions</span> and  <span>conjunctions</span>, which can be more easily understood and  <span>simplified</span> further. "}},absorbOrsInAnd:{id:268,sv:{name:"absorbera disjunktion i konjunktion",explanation:"En  <span>konjunktion</span> där en av  <span>utsagorna</span> är en  <span>disjunktion</span> kan göras om till en  <span>disjunktion</span>, där varje  <span>utsaga</span> blir en konjuntion av en av ursprungsdisjunktionens  <span>utsaga</span> och urpsprungskonjunktionens övriga  <span>utsagor</span>. ",targets:"en  <span>konjunktion</span> som innehåller en  <span>disjunktion</span> ",returns:"en  <span>disjunktion</span> där varje  <span>utsaga</span> är en  <span>konjunktion</span> ",effect:"Trots att vi nu har fler  <span>utsagor</span> totalt så är detta en  <span>förenklande operation</span>, då man föredrar att ha en  <span>disjunktion</span> av  <span>konjunktioner</span> framför motsatsen. "},en:{name:"absorb disjunktion in conjunction",explanation:"A  <span>conjunction</span> where one of the values is a disjunktion can be rewritten as a  <span>disjunction</span>, in which every value is a  <span>conjunction</span> of one of the values from the original  <span>disjunction</span> together with all other values from the original  <span>conjunction</span>. ",targets:"a  <span>conjunction</span> containing a  <span>disjunction</span> ",returns:"a  <span>disjunction</span> of  <span>conjunctions</span> ",effect:" <span>Even though</span> we now have more values totally, this is consider a  <span>simplifying operation</span> since we prefer a  <span>disjunction</span> of  <span>conjunctions</span> to a  <span>conjunction</span> of  <span>disjunctions</span>. "}},posNegOrToPlusMinus:{id:264,sv:{name:"skriv disjunktion som plus minus",explanation:"En  <span>disjunktion</span> av två  <span>utsagor</span> som är identiska förutom att den ena är  <span>negativ</span> kan uttryckas mer koncentrerat med  <span>plus minus</span>. ",targets:"en  <span>disjunktion</span> med två  <span>utsagor</span> som är identiska förutom att den ena är  <span>negativ</span> ",returns:" <span>plus minus</span> den positiva  <span>utsagan</span> ",effect:"Detta räknas som en  <span>komplicerande operation</span>. Trots att  <span>uttrycket</span> är smidigare nu så var det lättare att förenkla  <span>disjunktionen</span> vidare. "},en:{name:"write disjunction as plusminus",explanation:"A  <span>disjunction</span> with two parts that are identical except one is  <span>negative</span> can be rewritten more succinctly using  <span>plus minus</span>. ",targets:"a  <span>disjunction</span> of two statements identical except one is  <span>negative</span> ",returns:" <span>plus minus</span> the positive statement ",effect:"This counts as a  <span>complicating operation</span>.  <span>Even though</span> the  <span>expression</span> is more succinct now, it was easier to  <span>simplify</span> the  <span>disjunction</span> form further. "}},collapseIfElseWithSameBranches:{id:260,sv:{name:"kollapsa falsk logisk förgrening",explanation:"Om  <span>så-grenen</span> och  <span>annars-grenen</span> i en  <span>logisk förgrening</span> är identiska, så spelar det ingen roll vad  <span>om-villkoret</span> är  <span>sant</span> eller  <span>falskt</span>, resultatet blir ändå detsamma! Därför kan vi ersätta förgreningen med en av dessa identiska grenar. ",targets:"en  <span>logisk förgrening</span> där  <span>så-grenen</span> och  <span>annars-grenen</span> är identiska ",returns:"en av grenarna ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi ersatt en  <span>logisk förgrening</span> med en av dess grenar. "},en:{name:"collapse false logic branching",explanation:"If the  <span>then-branch</span> and  <span>else-branch</span> of a  <span>logic branching</span> is identical, the  <span>truth value</span> of the  <span>if-condition</span> doesn't matter, the result will be the same regardless! We can therefore replace the branching with one of these branches. ",targets:"a  <span>logic branching</span> where the  <span>then-branch</span> and  <span>else-branch</span> are identical ",returns:"one of the branches ",effect:"This is a  <span>simplifying operation</span>, since we have replaced a  <span>logic branching</span> with one of its branches. "}},addNewVar:{id:242,sv:{name:"introducera ny variabel",explanation:"Vi kan  <span>introducera</span> en  <span>likhet</span> med en ny  <span>variabel</span>, så länge som  <span>variabeln</span> inte redan förekommer. ",targets:"en  <span>uttryck</span> ",returns:"en  <span>konjunktion</span> med  <span>uttrycket</span> och en ny  <span>utsaga</span> ",effect:"Detta är en  <span>komplicerande operation</span> eftersom vi  <span>introducerat</span> en ny  <span>utsaga</span>. "},en:{name:"introduce new variable",explanation:"We can  <span>introduce</span> an  <span>equality</span> with a new  <span>variable</span>, as long as the  <span>variable</span> is unique. ",targets:"an  <span>expression</span> ",returns:"a  <span>conjunction</span> with the  <span>expression</span> and a new  <span>proposition</span> ",effect:"This is a  <span>complicating operation</span> since we have  <span>introduced</span> a new  <span>proposition</span>. "}},plusMinusZeroToZero:{id:240,sv:{name:"kollapsa plus minus 0 till 0",explanation:"Eftersom en  <span>negation</span> av  <span>0</span> är lika med  <span>0</span>, så är  <span>plus minus</span>  <span>0</span> också lika med noll. ",targets:" <span>plus minus</span>  <span>0</span> ",returns:" <span>heltalet</span>  <span>0</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi slipper  <span>plus minus</span>. ",steps:{firstexpand:"Först expanderar vi  <span>plus minus</span> till en  <span>disjunktion</span>.",thennegzerotozero:"Vi  <span>kollapsar</span>  <span>negationen</span> av  <span>0</span> till  <span>0</span>.",removedouble:"Nu har vi en  <span>disjunktion</span> av två identiska alternativ, vilket vi  <span>kollapsar</span>! Kvar blir endast  <span>0</span>."}},en:{name:"collapse plus minus 0 to 0",explanation:"Since a  <span>negation</span> of  <span>0</span> is the same as  <span>0</span>,  <span>plus minus</span>  <span>0</span> is also the same as  <span>0</span>. ",targets:" <span>plus minus</span>  <span>0</span> ",returns:"the  <span>integer</span>  <span>0</span> ",effect:"This is a  <span>simplifying operation</span> since we no longer have a  <span>plus minus</span>. ",steps:{firstexpand:"First we expand  <span>plus minus</span> to a  <span>disjunction</span>.",thennegzerotozero:"We  <span>collapse</span> the  <span>negation</span> of  <span>0</span> to  <span>0</span>.",removedouble:"Now we have a  <span>disjunction</span> of two identical options, which we can  <span>collapse</span>!"}}},substitute:{id:239,sv:{name:"substituera variabel i konjunktion",explanation:"I en  <span>konjunktion</span> kan vi utnyttja kunskap om en  <span>variabels</span> värde i en  <span>likhet</span> och substituera denna  <span>variabel</span> för det värdet i en annan  <span>relation</span> i  <span>konjunktionen</span>. ",targets:"en  <span>konjunktion</span> med en  <span>likhet</span> med en  <span>variabel</span> i ett led, och samma  <span>variabel</span> i en annan  <span>relation</span> ",returns:" <span>konjunktionen</span> med  <span>variabeln</span> substituerad ",effect:"Detta är en  <span>villkorligt förenklande</span>  <span>operation</span> eftersom substitutionen kan öppna upp möjligheter för fortsatta  <span>förenklingar</span> i  <span>relationen</span> vi substituerar in i. "},en:{name:"substitute variable in conjunction",explanation:"In a  <span>conjunction</span> we can use knowledge of a  <span>variable</span> in an  <span>equality</span> and substitute this  <span>variable</span> for that value in another  <span>relation</span> in the  <span>conjunction</span>. ",targets:"a  <span>conjunction</span> with an  <span>equality</span> with a  <span>variable</span> on one side, and that same  <span>variable</span> in another  <span>relation</span> ",returns:"the  <span>conjunction</span> with the  <span>variable</span> substituted ",effect:"This is a  <span>conditionally simplifying operation</span>, as the substitution might open up possibilities for further  <span>simplification</span> in the  <span>relation</span> we substituted into. "}},absorbSubAnds:{id:167,sv:{name:"absorbera inre konjunktioner",explanation:"Eftersom  <span>konjunktioner</span> (precis som  <span>disjunktioner</span>) är  <span>associativa</span> så kan  <span>utsagorna</span> i en inre  <span>konjunktioner</span> uppgå i den yttre. ",targets:"en  <span>konjunktion</span> där en av  <span>utsagorna</span> är en  <span>konjunktion</span> ",returns:"en  <span>konjunktion</span> där den inre  <span>konjunktionens</span>  <span>utsagor</span> har uppgått i den yttre ",effect:"Detta är en  <span>förenklande operation</span> eftersom  <span>konjunktionen</span> inte är lika djupt nästlad. "},en:{name:"absorb inner conjunctions",explanation:"Since  <span>conjunctions</span> (just like  <span>disjunctions</span>) are  <span>associative</span>, the values of an inner  <span>conjunction</span> can be made part of the outer  <span>conjunction</span>. ",targets:"a  <span>conjunction</span> where one of the values is a  <span>conjunction</span> ",returns:"a  <span>conjunction</span> now also containing the values of the previous inner  <span>conjunction</span> ",effect:"This is a  <span>simplifying operation</span> since the  <span>conjunction</span> now isn't as deeply nested. "}},absorbSubOrs:{id:168,sv:{name:"absorbera inre disjunktioner",explanation:"Eftersom  <span>disjunktioner</span> (precis som  <span>konjunktioner</span>) är  <span>associativa</span> så kan  <span>utsagorna</span> i en inre  <span>disjunktioner</span> uppgå i den yttre. ",targets:"en  <span>disjunktion</span> där en av  <span>utsagorna</span> är en  <span>disjunktion</span> ",returns:"en  <span>disjunktion</span> där den inre  <span>disjunktionens</span>  <span>utsagor</span> har uppgått i den yttre ",effect:"Detta är en  <span>förenklande operation</span> eftersom  <span>disjunktionen</span> inte är lika djupt nästlad. "},en:{name:"absorb inner disjunctions",explanation:"Since  <span>disjunctions</span> (just like  <span>conjunctions</span>) are  <span>associative</span>, the values of an inner  <span>disjunction</span> can be made part of the outer  <span>disjunction</span>. ",targets:"a  <span>disjunction</span> where one of the values is a  <span>disjunction</span> ",returns:"a  <span>disjunction</span> now also containing the values of the previous inner  <span>disjunction</span> ",effect:"This is a  <span>simplifying operation</span> since the  <span>disjunction</span> now isn't as deeply nested. "}},notFalseIsTrue:{id:20,sv:{name:"kollapsa logisk negation av falskt",explanation:"Motsatsen till  <span>falskt</span> är  <span>sant</span>, så en  <span>logisk negation</span> av  <span>falskt</span> kan  <span>kollapsas</span> till  <span>sant</span>. ",targets:"en  <span>logisk negation</span> av  <span>falskt</span> ",returns:"det logiska värdet  <span>sant</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi ersatt en  <span>logisk negation</span> av ett logiskt värde med ett ensamt logiskt värde. "},en:{name:"collapse logic negation of false",explanation:"The opposite of  <span>false</span> is  <span>true</span>, so a  <span>logic negation</span> of  <span>false</span> can be  <span>collapsed</span> to  <span>true</span>. ",targets:"a  <span>logic negation</span> of  <span>false</span> ",returns:"the  <span>logic</span> value  <span>true</span> ",effect:"this is a  <span>simplifying operation</span>, since we have replaced a  <span>logic</span> negaton of a  <span>logic</span> value with a single  <span>logic</span> value. "}},notTrueIsFalse:{id:21,sv:{name:"kollapsa logisk negation av sant",explanation:"Motsatsen till  <span>sant</span> är  <span>falskt</span>, så en  <span>logisk negation</span> av  <span>sant</span> kan  <span>kollapsas</span> till  <span>falskt</span>. ",targets:"en  <span>logisk negation</span> av  <span>sant</span> ",returns:"det logiska värdet  <span>falskt</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi ersatt en  <span>logisk negation</span> av ett logiskt värde med ett ensamt logiskt värde. "},en:{name:"collapse logic negation of true",explanation:"The opposite of  <span>true</span> is  <span>false</span>, so a  <span>logic negation</span> of  <span>true</span> can be  <span>collapsed</span> to  <span>false</span>. ",targets:"a  <span>logic negation</span> of  <span>true</span> ",returns:"the  <span>logic</span> value  <span>false</span> ",effect:"this is a  <span>simplifying operation</span>, since we have replaced a  <span>logic</span> negaton of a  <span>logic</span> value with a single  <span>logic</span> value. "}},andWithFalseIsFalse:{id:22,en:{name:"collapse conjunction with false",explanation:"Since a  <span>conjunction</span> is  <span>false</span> if any of its values are  <span>false</span>, if we know that one of the values are  <span>false</span>, then the whole  <span>conjunction</span> can be replaced with the value  <span>false</span>. ",targets:"a  <span>conjunction</span> where one of the values is  <span>false</span> ",returns:"the logical value  <span>false</span> ",effect:"This is a  <span>simplifying operations</span> since we have replaced a  <span>conjunction</span> with the value  <span>false</span>. "},sv:{name:"kollapsa konjunktion med falskt",explanation:"Eftersom en  <span>konjunktion</span> är  <span>falsk</span> om minst en av  <span>utsagorna</span> är  <span>falska</span>, så kan en  <span>konjunktion</span> där vi vet att en  <span>utsaga</span> är  <span>sann</span>  <span>kollapsas</span> till  <span>falskt</span>. ",targets:"en  <span>konjunktion</span> där en  <span>utsaga</span> är  <span>falskt</span> ",returns:"det logiska värdet  <span>falskt</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi ersatt en  <span>konjunktion</span> med värdet  <span>falskt</span>. "}},orWithTrueIsTrue:{id:23,en:{name:"collapse disjunction with true",explanation:"Since a  <span>disjunction</span> is  <span>true</span> if any of its values are  <span>true</span>, if we know that one of the values are  <span>true</span>, then the whole  <span>disjunction</span> can be replaced with the value  <span>true</span>. ",targets:"a  <span>disjunction</span> where one of the values is  <span>true</span> ",returns:"the logical value  <span>true</span> ",effect:"This is a  <span>simplifying operations</span> since we have replaced a  <span>disjunction</span> with the value  <span>true</span>. "},sv:{name:"kollapsa disjunktion med sant",explanation:"Eftersom en  <span>disjunktion</span> är  <span>sann</span> om minst en av  <span>utsagorna</span> är  <span>sanna</span>, så kan en  <span>disjunktion</span> där vi vet att en  <span>utsaga</span> är  <span>sann</span>  <span>kollapsas</span> till  <span>sant</span>. ",targets:"en  <span>disjunktion</span> där en  <span>utsaga</span> är  <span>sant</span> ",returns:"det logiska värdet  <span>sant</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi ersatt en  <span>disjunktion</span> med värdet  <span>sant</span>. "}},purgeTrueFromAnd:{id:24,sv:{name:"ta bort sant från konjunktion",explanation:"Eftersom en  <span>konjunktion</span> är  <span>sann</span> om samtliga  <span>utsagor</span> är  <span>sanna</span>, så kan vi  <span>ta bort</span> alla  <span>utsagor</span> som vi vet är  <span>sanna</span>. ",targets:"en  <span>konjunktion</span> som innehåller  <span>utsagor</span> som är det logiska värdet  <span>sant</span> ",returns:"en  <span>konjunktion</span> med sannutsagan borttagen, eller en enda återstående  <span>utsaga</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi  <span>tagit bort</span> en  <span>utsaga</span>. "},en:{name:"remove true from conjunction",explanation:"Since a  <span>conjunction</span> is  <span>true</span> if all values are  <span>true</span>, a value that is known to be  <span>true</span> can be  <span>removed</span> without changing the value of the  <span>conjunction</span>. ",targets:"a  <span>conjunction</span> where one of the values is  <span>true</span> ",returns:"a  <span>conjunction</span> with the  <span>truth value</span>  <span>removed</span>, or the only remaining value ",effect:"This is a  <span>simplifying operation</span>, since we have  <span>removed</span> a  <span>logic</span> value "}},purgeFalseFromOr:{id:25,sv:{name:"ta bort falskt från disjunktion",explanation:"Eftersom en  <span>disjunktion</span> är  <span>falsk</span> om samtliga  <span>utsagor</span> är  <span>falska</span>, så kan vi  <span>ta bort</span> alla  <span>utsagor</span> som vi vet är  <span>falska</span>. ",targets:"en  <span>disjunktion</span> som innehåller  <span>utsagor</span> som är det logiska värdet  <span>falskt</span> ",returns:"en  <span>disjunktion</span> med den  <span>falska</span>  <span>utsagan</span> borttagen, eller en enda återstående  <span>utsaga</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi  <span>tagit bort</span> en  <span>utsaga</span>. "},en:{name:"remove false from disjunction",explanation:"Since a  <span>disjunction</span> is  <span>false</span> if all values are  <span>false</span>, a value that is known to be  <span>false</span> can be  <span>removed</span> without changing the value of the  <span>disjunction</span>. ",targets:"a  <span>disjunction</span> where one of the values is  <span>false</span> ",returns:"a  <span>disjunction</span> with the  <span>truth value</span>  <span>removed</span>, or the only remaining value ",effect:"This is a  <span>simplifying operation</span>, since we have  <span>removed</span> a  <span>logic</span> value "}},collapseDoubleNot:{id:26,sv:{name:"kollapsa dubbel logisk negation",explanation:"En dubbel  <span>logisk negation</span> innebär att målutsagans  <span>sanningsvärde</span> är oförändrat, och  <span>negationerna</span> kan därmed  <span>tas bort</span>! ",targets:"en dubbel  <span>logisk negation</span> ",returns:"föremålet för den dubbla  <span>negationen</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi  <span>tagit bort</span> två  <span>logiska negationer</span>. "},en:{name:"collapse double logic negation",explanation:"A double logical  <span>negation</span> means we arrive at the original  <span>logic</span> value, and therefore it has no meaning and can be  <span>removed</span>. ",targets:"a double logical  <span>negation</span> ",returns:"the target of the double  <span>negation</span> ",effect:"This is a  <span>simplifying operation</span> since we have  <span>removed</span> two logical  <span>negations</span>. "}},evalNumIntegerTest:{id:27,sv:{name:"utvärdera numeriskt heltalstest",explanation:"Vi kan avgöra om ett  <span>tal</span> är ett  <span>heltal</span> eller inte. ",targets:"ett  <span>heltalstest</span> av ett  <span>tal</span> ",returns:" <span>sant</span> eller  <span>falskt</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi ersätter ett helstalstest med ett  <span>sanningsvärde</span>. "},en:{name:"evaluate numeric integer test",explanation:"We can evaluate if a  <span>number</span> is an  <span>integer</span> or not. ",targets:"an  <span>integer</span> test of a  <span>number</span> ",returns:" <span>true</span> or  <span>false</span> ",effect:"This is a  <span>simplifying operation</span> since we replace an  <span>integer</span> test with a  <span>truth value</span>. "}},collapseNegIntegerTest:{id:28,sv:{name:"kollapsa heltalstest av negation",explanation:"En  <span>negation</span> är ett  <span>heltal</span> om föremålet för  <span>negationen</span> är ett  <span>heltal</span>. Därför kan vi  <span>ta bort</span>  <span>negationen</span> runt det som  <span>heltalstestas</span>. ",targets:"ett  <span>heltalstest</span> av en  <span>negation</span> ",returns:"ett  <span>heltalstest</span> utan  <span>negation</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi sluppit en  <span>negation</span>. "},en:{name:"collapse integer test of negation",explanation:"A  <span>negation</span> is an  <span>integer</span> if the object which is negated is an  <span>integer</span>. We can therefore  <span>remove</span> the  <span>negation</span> from the object that is  <span>integer</span> tested. ",targets:"an  <span>integer</span> test of a  <span>negation</span> ",returns:"an  <span>integer</span> test of what was negated ",effect:"This is a  <span>simplifying operation</span> since we have done away with a  <span>negation</span>. "}},collapseProdIntegerTest:{id:251,sv:{name:"dela upp heltalstest av produkt",explanation:"En  <span>produkt</span> är ett  <span>heltal</span> om varje  <span>faktor</span> är ett  <span>heltal</span>. Vi kan därför dela upp ett  <span>heltalstest</span> av en  <span>produkt</span> till en  <span>konjunktion</span> av  <span>heltalstest</span> för varje  <span>faktor</span>. ",targets:"ett  <span>heltalstest</span> av en  <span>produkt</span> ",returns:"en  <span>konjunktion</span> med ett  <span>heltalstest</span> för varje  <span>faktor</span> ",effect:"Detta är en  <span>förenklande operation</span>. Vi har nu fler  <span>heltalstest</span> än innan, men dessa är lättare att utvärdera. "},en:{name:"split integer test of product",explanation:"A  <span>product</span> is an  <span>integer</span> if every  <span>factor</span> is an  <span>integer</span>. We can therefore  <span>split</span> an  <span>integer</span> test of a  <span>product</span> into a  <span>conjunction</span> with one  <span>integer</span> test per  <span>factor</span>. ",targets:"an  <span>integer</span> test of a  <span>product</span> ",returns:"a  <span>conjunction</span> with an  <span>integer</span> test per  <span>factor</span> ",effect:"This is a  <span>simplifying operation</span>. We have more  <span>integer</span> tests now, but they are easier to evaluate. "}},collapsePowIntegerTest:{id:252,sv:{name:"dela upp heltalstest av potens",explanation:"En  <span>potens</span> är ett  <span>heltal</span> om både  <span>basen</span> och  <span>exponenten</span> är ett  <span>heltal</span>. Vi kan därför dela upp ett  <span>heltalstest</span> av en  <span>potens</span> till en  <span>konjunktion</span> av  <span>heltalstest</span> för  <span>basen</span> och  <span>potensen</span>. ",targets:"ett  <span>heltalstest</span> av en  <span>potens</span> ",returns:"en  <span>konjunktion</span> med ett  <span>heltalstest</span> för  <span>basen</span> och ett för  <span>potensen</span> ",effect:"Detta är en  <span>förenklande operation</span>. Vi har nu två  <span>heltalstest</span> istället för ett, men dessa är lättare att utvärdera. "},en:{name:"split integer test of power",explanation:"A  <span>power</span> is an  <span>integer</span> if both the  <span>base</span> and the  <span>exponent</span> are  <span>integers</span>. We can therefore  <span>split</span> an  <span>integer</span> test of a  <span>power</span> into a  <span>conjunction</span> with one  <span>integer</span> test for the  <span>base</span> and one for the  <span>exponent</span>. ",targets:"an  <span>integer</span> test of a  <span>power</span> ",returns:"a  <span>conjunction</span> with an  <span>integer</span> test for the  <span>base</span> and one for the  <span>exponent</span> ",effect:"This is a  <span>simplifying operation</span>. We have two  <span>integer</span> tests instead of one now, but they are easier to evaluate. "}},collapseFracIntegerTest:{id:253,sv:{name:"omformulera heltalstest av kvot",explanation:"En  <span>kvot</span> är ett  <span>heltal</span> om  <span>täljaren</span> delas av  <span>nämnaren</span>. Vi kan därför omformulera ett  <span>heltalstest</span> av en  <span>kvot</span> till ett  <span>delbarhetstest</span> mellan  <span>täljaren</span> och  <span>nämnaren</span>. ",targets:"ett  <span>heltalstest</span> av en  <span>kvot</span> ",returns:"ett  <span>delbarhetstest</span> mellan  <span>täljare</span> och  <span>nämnare</span> ",effect:"Detta är en  <span>förenklande operation</span>. Vi har visserligen bara ersatt ett  <span>heltalstest</span> med ett  <span>delbarhetstest</span>, men det nya testet är inte lika djupt nästlat. "},en:{name:"rephrase integer test of fraction",explanation:"A  <span>fraction</span> is an  <span>integer</span> if the  <span>denominator</span> divides the  <span>numerator</span>. We can therefore  <span>rephrase</span> an  <span>integer</span> test of a  <span>fraction</span> into a  <span>divisibility test</span> between the  <span>numerator</span> and the  <span>denominator</span>. ",targets:"an  <span>integer</span> test of a  <span>fraction</span> ",returns:"a  <span>divisibility test</span> between the  <span>numerator</span> and  <span>denominator</span> ",effect:"This is a  <span>simplifying operation</span>. We have merely replaced an  <span>integer</span> test with a  <span>divisibility test</span>, but the new test isn't as deeply nested. "}},collapseFracDivTest:{id:254,sv:{name:"omformulera delbarhetstest av kvot",explanation:"En  <span>kvot</span> är delbar med ett  <span>tal</span> om  <span>täljaren</span> är delbar med  <span>produkten</span> av  <span>nämnaren</span> och  <span>talet</span>. Vi kan därför omformulera ett  <span>delbarhetstest</span> av en  <span>kvot</span> på detta sätt. ",targets:"ett  <span>delbarhetstest</span> där en  <span>kvot</span> testas ",returns:"ett  <span>delbarhetstest</span> av  <span>täljaren</span> och en  <span>produkt</span> ",effect:"Detta är en  <span>förenklande operation</span>, då den nya versionen är lättare att utvärdera. "},en:{name:"rephrase divisibility test of fraction",explanation:"A  <span>fraction</span> is divisible by a  <span>number</span> if the  <span>numerator</span> is divisible with the  <span>product</span> of the  <span>denominator</span> and the  <span>number</span>. We can therefore  <span>rephrase</span> a  <span>divisibility test</span> of a  <span>fraction</span> accordingly. ",targets:"a  <span>divisibility test</span> of a  <span>fraction</span> ",returns:"a  <span>divisibility test</span> of the  <span>numerator</span> and a  <span>product</span> ",effect:"This is a  <span>simplifying operation</span>, because the newer version is more easily evaluated. "}},collapseDivTestAgainstFrac:{id:255,sv:{name:"omformulera delbarhetstest med kvot",explanation:"Om ett  <span>tal</span> är delbart med en  <span>kvot</span>, så är  <span>produkten</span> av  <span>talet</span> och  <span>kvotens</span>  <span>nämnare</span> delbar med  <span>kvotens</span>  <span>täljare</span>. Vi kan därför omformulera ett  <span>delbarhetstest</span> med  <span>kvot</span> som  <span>nämnare</span> på detta sätt. ",targets:"ett  <span>delbarhetstest</span> där delbarhet med  <span>kvot</span> testas ",returns:"ett  <span>delbarhetstest</span> av en  <span>produkt</span> ",effect:"Detta är en  <span>förenklande operation</span>, då den nya versionen är lättare att utvärdera. "},en:{name:"rephrase divisibility test with fraction",explanation:"If a  <span>number</span> is divisible by a  <span>fraction</span>, then the  <span>product</span> of the  <span>number</span> and the  <span>fraction denominator</span> is divisible by the  <span>fraction numerator</span>. We can therefore  <span>rephrase</span> a  <span>divisibility test</span> against a  <span>fraction</span> accordingly. ",targets:"a  <span>divisibility test</span> against a  <span>fraction</span> ",returns:"a  <span>divisibility test</span> of a  <span>product</span> ",effect:"This is a  <span>simplifying operation</span>, as the new version is more easily evaluated. "}},evalIfElse:{id:256,sv:{name:"välj gren i logisk förgrening",explanation:"Om villkoret för en  <span>logisk förgrening</span> är  <span>sant</span> eller  <span>falskt</span>, så vet vi vilken väg vi skall ta! Därmed kan den logiska förgreningen  <span>kollapsas</span> till den aktuella vägen. ",targets:"en  <span>logisk förgrening</span> där  <span>om-villkoret</span> är  <span>sant</span> eller  <span>falskt</span> ",returns:" <span>så-grenen</span> eller  <span>annars-grenen</span>, beroende på  <span>om-villkorets</span> värde ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi ersatt en  <span>logisk förgrening</span> med en av dess två grenar. ",steps:{phraseasdis:"Vi börjar med att formulera om den logiska förgreningen som en  <span>disjunktion</span> av två  <span>konjunktioner</span>, som representerar de två vägvalen.",removetruefromfirst:"Vi  <span>tar bort</span>  <span>om-villkorets</span> santvärde från den första  <span>konjunktionen</span>, som nu utgörs endast av  <span>så-grenen</span>. När vi är klara kommer endast denna att återstå.",secondcondisfalse:"Den andra  <span>konjunktionen</span> representerar  <span>annars-grenen</span>, som vi vill välja bort. Vi börjar med att ersätta den  <span>logiska negationen</span> av  <span>om-villkoret</span>, som var  <span>sant</span>, med  <span>falskt</span>.",secondbranchcollapses:"En  <span>konjunktion</span> som innehåller en  <span>utsaga</span> som är  <span>falsk</span> är  <span>falsk</span>, så nu  <span>kollapsar</span> den andra  <span>konjunktionen</span>.",removefalseandgetfirstbranch:"Vi  <span>tar bort</span>  <span>falskt</span> från  <span>disjunktionen</span>, och endast  <span>så-grenen</span> återstår!",notfalseistrue:"Den andra  <span>konjunktionen</span> representerar  <span>annars-grenen</span>, som är den vi vill välja eftersom  <span>om-villkoret</span> var  <span>falskt</span>. Vi ersätter den  <span>logiska negationen</span> av  <span>om-villkoret</span> med  <span>sant</span>.",removetruefromsecond:"Vi  <span>tar bort</span>  <span>sant</span> från den andra  <span>konjunktionen</span>, och där återstår nu endast  <span>annars-grenen</span>.",collapsefirstbranch:"Den första  <span>konjunktionen</span>, som representerar  <span>så-grenen</span>, kan  <span>kollapsas</span> till  <span>falskt</span> eftersom den innehåller  <span>om-villkoret</span> som är  <span>falskt</span>.",removefalseandgetsecondbranch:"Slutligen  <span>tar vi bort</span>  <span>falskt</span> från  <span>disjunktionen</span>, och endast  <span>så-grenen</span> återstår!"}},en:{name:"choose branch in logic branching",explanation:"If the  <span>if-condition</span> in a  <span>logic branching</span> is  <span>true</span> or  <span>false</span>, we know what road to take! ",targets:"a  <span>logic branching</span> where the  <span>if-condition</span> is  <span>true</span> or  <span>false</span> ",returns:"the  <span>then-branch</span> or the  <span>else-branch</span>, depending on the value of the  <span>if-condition</span> ",effect:"This is a  <span>simplifying operation</span>, since we have replaced a  <span>logic branching</span> with one of its two branches. ",steps:{phraseasdis:"We begin by formulating the  <span>logic branching</span> as a  <span>disjunction</span> of two  <span>conjunctions</span>, representing the  <span>then-branch</span> and the  <span>else-branch</span> respectively.",removetruefromfirst:"The first  <span>conjunction</span> contains the  <span>if-condition</span>, which was  <span>true</span>. This can be  <span>removed</span>, leaving only the  <span>then-branch</span>, which is ultimately the only thing that will remain.",secondcondisfalse:"The second  <span>conjunction</span> represents the  <span>else-branch</span>, which we want to  <span>remove</span> since the  <span>if-condition</span> was  <span>true</span>. We do this first by replacing the  <span>logic negation</span> of the  <span>if-condition</span> with  <span>false</span>.",secondbranchcollapses:"A  <span>conjunction</span> containing  <span>false</span> is  <span>false</span>, so now the  <span>else-branch</span>  <span>conjunction</span>  <span>collapses</span>.",removefalseandgetfirstbranch:"We  <span>remove</span> the  <span>false</span> value from the  <span>disjunction</span>, leaving only the  <span>then-branch</span>!",notfalseistrue:"The second  <span>conjunction</span> represents the  <span>else-branch</span>, which is what we want to end up with since the  <span>if-condition</span> was  <span>false</span>. We replace the  <span>logic negation</span> of the  <span>if-condition</span> with  <span>true</span>.",removetruefromsecond:"We  <span>remove</span>  <span>true</span> form the second  <span>conjunction</span>, leaving only the  <span>else-branch</span>.",collapsefirstbranch:"The first  <span>conjunction</span>, representing the  <span>then-branch</span>, contains the  <span>false</span> value from the  <span>if-condition</span> and can therefore be  <span>collapsed</span>.",removefalseandgetsecondbranch:"We  <span>remove</span> the  <span>false</span> value from the  <span>disjunction</span>, and so only the  <span>else-branch</span> remains!"}}},numericRelToBool:{id:156,sv:{name:"utvärdera numerisk relation",explanation:"En  <span>relation</span> där båda sidorna är numeriska kan utvärderas till  <span>sant</span> eller  <span>falskt</span>. ",targets:"Numerisk  <span>relation</span> ",returns:" <span>Sant</span> eller  <span>falskt</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi ersätter en  <span>relation</span> med ett  <span>sanningsvärde</span>. "},en:{name:"evaluate numeric relation",targets:"Numeric  <span>relation</span> ",returns:" <span>True</span> or  <span>false</span> ",explanation:"A  <span>relation</span> where both sides are numeric can be evaluated to  <span>true</span> or  <span>false</span>. ",effect:"This is a  <span>simplifying operation</span>, since we replace a  <span>relation</span> with a  <span>truth value</span>. "}},purgeDuplicatesFromLogic:{id:159,sv:{name:"ta bort logiska dubletter",explanation:"Om vi har dubletter i en  <span>disjunktion</span> eller  <span>konjunktion</span> så påverkar inte dessa  <span>sanningsvärdet</span>, och kan därför  <span>tas bort</span>. ",targets:" <span>disjunktion</span> eller  <span>konjunktion</span> med dubletter ",returns:" <span>disjunktion</span> eller  <span>konjunktion</span> med dubletterna borttagna, eller en enda återstående  <span>utsaga</span> ifall det bara fanns dubletter från början. ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi  <span>eliminerat</span>  <span>utsagor</span>. "},en:{name:"remove logic doubles",explanation:"If we have doubles in a  <span>disjunction</span> or  <span>conjunction</span>, these won't affect the total  <span>truth value</span> and can therefore be  <span>removed</span>. ",targets:" <span>disjunction</span> or  <span>conjunction</span> with doubles ",returns:" <span>disjunction</span> or  <span>conjunction</span> with the doubles  <span>removed</span>, or a single remaining value in case there only doubles to begin with ",effect:"This is a  <span>simplifying operation</span>, since we have  <span>eliminated</span> statements. "}},purgeSpiritDuplicatesFromLogic:{id:288,sv:{name:"ta bort dolda logiska dubletter",explanation:"Om vi har dolda dubletter i en  <span>disjunktion</span> eller  <span>konjunktion</span> så påverkar inte dessa  <span>sanningsvärdet</span>, och kan därför  <span>tas bort</span> efter att de har gjorts identiska. ",targets:" <span>disjunktion</span> eller  <span>konjunktion</span> med dolda dubletter ",returns:" <span>disjunktion</span> eller  <span>konjunktion</span> med dubletterna borttagna, eller en enda återstående  <span>utsaga</span> ifall det bara fanns dubletter från början. ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi  <span>eliminerat</span>  <span>utsagor</span>. ",steps:{makesame:"Först möblerar vi om den ena dubletten så att den blir exakt lik den andra.",thenpurge:"Nu kan vi  <span>ta bort</span> dubletten!"}},en:{name:"remove hidden logic doubles",explanation:"If we have hidden doubles in a  <span>disjunction</span> or  <span>conjunction</span>, these won't affect the total  <span>truth value</span> and can therefore be  <span>removed</span> after having been made equal. ",targets:" <span>disjunction</span> or  <span>conjunction</span> with hidden doubles ",returns:" <span>disjunction</span> or  <span>conjunction</span> with the doubles  <span>removed</span>, or a single remaining value in case there only doubles to begin with ",effect:"This is a  <span>simplifying operation</span>, since we have  <span>eliminated</span> statements. ",steps:{makesame:"First we manipulate one of the doubles so that it becomes identical to the other.",thenpurge:"Now we can  <span>remove</span> one of them!"}}},expandPlusMinusInRel:{id:175,en:{name:"write plus minus as disjunction",explanation:" <span>Plus minus</span> is just a shorthand for when an  <span>expression</span> can be both positive or  <span>negative</span>, which is actually a  <span>disjunction</span>. Thus we can replace a  <span>plus minus</span> with the corresponding  <span>disjunction</span>. If the  <span>plus minus</span> is part of a  <span>relation</span>, it is advantageous to make two versions of the  <span>relation</span>, and not just the  <span>plus minus</span>  <span>operand</span>. ",targets:"an  <span>expression</span> with a  <span>plus minus</span> part ",returns:"a  <span>disjunction</span> ",effect:"This is a  <span>simplifying operation</span> as the  <span>plus minus</span> shorthand hides possibilities for further  <span>simplifications</span>. "},sv:{name:"skriv plus minus som disjunktion",explanation:" <span>Plus minus</span> är bara en förkortning för att ett  <span>uttryck</span> kan vara positivt eller negativt, vilket är en  <span>disjunktion</span>! Därför kan vi när som helst ersätta  <span>plus minus</span> med motsvarande  <span>disjunktion</span>. Ifall  <span>plus minus</span> förekommer inuti en  <span>relation</span> så är det fördelaktigt att göra två versioner av hela  <span>relationen</span>, och inte bara  <span>operanden</span> i  <span>plus minus</span>. ",targets:"ett  <span>uttryck</span> med  <span>plus minus</span> ",returns:"en  <span>disjunktion</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom skrivsättet med  <span>plus minus</span> döljer möjligheter till fortsatt  <span>förenkling</span>. "}},evalNumericDivTest:{id:194,en:{name:"evaluate numeric divisibility test",explanation:"A  <span>divisibility test</span> between two  <span>integers</span> can be evaluated. ",targets:"a  <span>divisibility test</span> between two  <span>integers</span> ",returns:" <span>true</span> or  <span>false</span> ",effect:"This is a  <span>simplifying operation</span> since we have replaced a  <span>divisibility test</span> with a  <span>truth value</span>. "},sv:{name:"utvärdera numeriskt delbarhetstest",explanation:"Ett  <span>delbarhetstest</span> mellan två  <span>heltal</span> kan utvärderas. ",targets:"ett  <span>delbarhetstest</span> mellan två  <span>heltal</span> ",returns:" <span>sant</span> eller  <span>falskt</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi ersätter ett  <span>delbarhetstest</span> med ett  <span>sanningsvärde</span>. "}},zeroFacExprToZero:{id:284,sv:{name:"kollapsa uttryck med faktor 0",explanation:"Ett  <span>uttryck</span> som innehåller en  <span>faktor</span>  <span>0</span> kan omvandlas till  <span>0</span>, genom att vi bryter ut  <span>faktorn</span>  <span>0</span> och sedan  <span>kollapsar</span> den resulterande  <span>produkten</span> till  <span>0</span>. ",targets:"ett  <span>uttryck</span> med  <span>faktor</span>  <span>0</span> ",returns:" <span>talet 0</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi ersatt ett  <span>uttryck</span> med ett  <span>heltal</span>. ",steps:{tozerodirectly:" <span>Uttrycket</span> var redan en  <span>produkt</span>, så vi kan  <span>kollapsa</span> den till  <span>0</span> direkt!",weliftzeroout:"Först bryter vi ut  <span>faktorn</span>  <span>0</span> ur  <span>uttrycket</span>.",thentozero:"Nu har vi en  <span>produkt</span> med  <span>faktor</span>  <span>0</span>, vilket vi kan  <span>kollapsa</span> till  <span>0</span>!"}},en:{name:"collapse expression with factor 0",explanation:"An  <span>expression</span> with a  <span>factor</span>  <span>0</span> can be  <span>collapsed</span> to  <span>0</span>, if we first extract the  <span>factor</span>  <span>0</span> and then  <span>collapse</span> the resulting  <span>product</span>. ",targets:"an  <span>expression</span> with a  <span>factor</span>  <span>0</span> ",returns:"the  <span>number 0</span> ",effect:"This is a  <span>simplifying operation</span> since we have replaced an  <span>expression</span> with an  <span>integer</span>. ",steps:{tozerodirectly:"The  <span>expression</span> was already a  <span>product</span>, so it can be  <span>collapsed</span> directly!",weliftzeroout:"First we extract the  <span>factor</span>  <span>0</span> from the  <span>expression</span>.",thentozero:"Now we have a  <span>product</span> containing a  <span>factor</span>  <span>0</span>, which we can  <span>collapse</span> to  <span>0</span>!"}}},collapseSumBaseSquare:{id:267,sv:{name:"jämna ut kvadrat med summabas",explanation:"En  <span>potens</span> med en  <span>summa</span> som  <span>bas</span> och  <span>exponenten 2</span> kan vecklas ut enligt kvadreringsregeln. ",targets:"en  <span>potens</span> med  <span>summa</span> med två  <span>termer</span> som  <span>bas</span> och  <span>heltalet</span> 2 som  <span>exponent</span> ",returns:"en  <span>summa</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom  <span>uttrycket</span> inte är lika djupt nästlat. ",steps:{firsttosum:"Först omvandlar vi  <span>potensen</span> till en  <span>summa</span>, där varje  <span>term</span> i  <span>basen</span> multipliceras med varje annan  <span>term</span>.",addsameys:"Vi slår ihop identiska  <span>termer</span>.",flattenterm:"Denna  <span>term</span> kan vi  <span>jämna ut</span> till en enda  <span>produkt</span>.",multterm:"Vi multiplicerar ihop alla numeriska  <span>faktorer</span> i denna  <span>term</span>.",smackfacs:"Vi slår ihop alla  <span>potenser</span> med samma  <span>bas</span> i denna  <span>term</span>."}},en:{name:"flatten square with sum base",explanation:"A  <span>power</span> with a  <span>sum base</span> and the  <span>exponent 2</span> can be opened up according to the quadration rule. ",targets:"a  <span>power</span> with a  <span>sum</span> with two  <span>terms</span> as  <span>base</span> and the  <span>integer</span> 2 as  <span>exponent</span> ",returns:"a  <span>sum</span> ",effect:"This is a  <span>simplifying operation</span> since the  <span>expression</span> isn't as deeply nested. ",steps:{firsttosum:"First we transform the  <span>power</span> to a  <span>sum</span>, where every  <span>base</span>  <span>term</span> is multiplied with every other  <span>base</span>  <span>term</span>.",addsameys:"We  <span>merge</span> identical  <span>terms</span>.",flattenterm:"This  <span>term</span> we can  <span>flatten</span> to one single  <span>product</span>.",multterm:"We multiply all numeric  <span>factors</span> in this  <span>term</span>.",smackfacs:"We  <span>merge</span> all  <span>bases</span> with common  <span>exponents</span> in this  <span>term</span>."}}},absorbProductFacs:{id:29,sv:{name:"absorbera produktfaktorer",explanation:" <span>Produkter</span> är  <span>associativa</span>, vilket innebär det är samma sak att nästla en  <span>produkt</span> inuti en annan  <span>produkt</span> som att låta den inre  <span>produktens</span>  <span>faktorer</span> ingå i den yttre. Därför kan vi absorbera  <span>produktfaktorer</span>, och  <span>jämna till</span> det hela till en enda  <span>produkt</span>. ",targets:"en  <span>produkt</span> med  <span>produktfaktorer</span> ",returns:"en  <span>produkt</span> med fler  <span>faktorer</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi har lika många  <span>faktorer</span> men de är inte längre lika nästlade. "},en:{name:"absorb product factors",explanation:" <span>Products</span> are  <span>associative</span>, which means that nesting a  <span>product</span> inside an outer  <span>product</span> is the same thing as letting the  <span>factors</span> of the inner  <span>product</span> be a part of the outer. We can therefore absorb  <span>product factors</span>, creating one, flat  <span>product</span>. ",targets:" <span>Products</span> with  <span>product factors</span> ",returns:" <span>Product</span> with more  <span>factors</span> ",effect:"This is a  <span>simplifying operation</span>, as we have just as many  <span>factors</span> but they aren't as nested anymore. "}},purgeOneFacs:{id:30,sv:{name:"ta bort faktorer 1",explanation:"Att multiplicera ett  <span>uttryck</span> med  <span>1</span> påverkar inte dess värde. Vi kan därför välja att  <span>ta bort</span> alla  <span>faktorer</span> bestående av  <span>talet 1</span> i en  <span>produkt</span>. ",targets:" <span>Produkt</span> med minst en  <span>faktor</span>  <span>1</span> ",returns:" <span>Produkt</span> med färre  <span>faktorer</span>, eller enda kvarvarande  <span>faktorn</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi  <span>tar bort</span>  <span>faktorer</span>. "},en:{name:"remove factors 1",explanation:"Multiplying an  <span>expression</span> by  <span>1</span> does not affect its value. We can therefore choose to  <span>remove</span> all  <span>factors</span> consisting of the  <span>number 1</span> from a  <span>product</span>. ",targets:" <span>Products</span> with at least one  <span>factor</span>  <span>1</span> ",returns:" <span>Product</span> with fewer  <span>factor</span>, or the last remaining  <span>factor</span> ",effect:"This is a  <span>simplifying operation</span>, since we are  <span>removing</span>  <span>factors</span>. "}},zeroFacProdToZero:{id:31,sv:{name:"kollapsa produkt med faktor 0",explanation:"I en  <span>produkt</span> så multipliceras de ingående  <span>faktorernas</span> värden med varandra. Om någon av  <span>faktorerna</span> är  <span>0</span> blir därför hela  <span>produktens</span> värde  <span>0</span>! I en  <span>produkt</span> som innehåller  <span>faktorn</span>  <span>0</span> kan vi därför  <span>ta bort</span> alla övriga  <span>faktorer</span>, så att endast  <span>talet 0</span> återstår. ",targets:"en  <span>produkt</span> med  <span>faktor</span>  <span>0</span> ",returns:" <span>talet 0</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi ersatt en  <span>produkt</span> med ett  <span>heltal</span>. "},en:{name:"collapse product with factor 0",explanation:"In a  <span>product</span> the values of the  <span>factors</span> are multiplied to each other. If any  <span>factor</span> is  <span>0</span>, then the value of the whole  <span>product</span> will be  <span>0</span>! If a  <span>product</span> contains the  <span>factor</span>  <span>0</span>, we can therefore  <span>remove</span> all other  <span>factors</span>, leaving only the  <span>number 0</span>. ",targets:"a  <span>product</span> with  <span>factor</span>  <span>0</span> ",returns:"the  <span>number 0</span> ",effect:"This is a  <span>simplifying operation</span>, since we replace a  <span>product</span> with an  <span>integer</span>. "}},distribute:{id:32,sv:{name:"distribuera faktor in i summafaktor",explanation:"En  <span>produkt</span> innehållandes en  <span>summafaktor</span> kan göras om till en  <span>summa</span>, där varje  <span>term</span> i den ursprungliga  <span>summafaktorn</span> multipliceras med alla övriga  <span>faktorer</span> i  <span>produkten</span>. ",targets:" <span>Produkt</span> med  <span>summafaktor</span> ",returns:" <span>Summa</span> av  <span>produkter</span> ",effect:"Detta räknas som en  <span>förenklande operation</span>. Trots att vi nu måste upprepa  <span>faktorn</span> vi  <span>distribuerade</span> in så är det lättare att förenkla en  <span>summa</span> av  <span>produkter</span> än en  <span>produkt</span> med  <span>summafaktor</span>. "},en:{name:"distribute factor into sum factor",explanation:"A  <span>product</span> with a  <span>sum factor</span> can be remade into a  <span>sum</span>, where every  <span>term</span> in the original  <span>sum factor</span> is multiplied with every other  <span>factor</span> in the  <span>product</span>. ",targets:" <span>Product</span> with  <span>sum factor</span> ",returns:" <span>Sum</span> of  <span>products</span> ",effect:"This counts as a  <span>simplifying operation</span>.  <span>Even though</span> we must now repeat the  <span>distributed</span>  <span>factor</span>, it is easier to  <span>simplify</span> a  <span>sum</span> of  <span>product</span> than a  <span>product</span> with a  <span>sum factor</span>. "}},multiplication:{id:33,sv:{name:"multiplikation",explanation:"En  <span>produkt</span> av två  <span>naturliga tal</span> kan genom  <span>multiplikation</span>  <span>slås ihop</span> till ett enda  <span>naturligt tal</span>. ",targets:"en  <span>produkt</span> av två  <span>naturliga tal</span> ",returns:"ett enda  <span>naturligt tal</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi slagit ihop två  <span>naturliga tal</span> till ett enda  <span>naturligt tal</span>. "},en:{name:"multiplication",explanation:"A  <span>product</span> of two natural  <span>number factors</span> can through  <span>multiplication</span> be  <span>merged</span> into a single natural  <span>number</span>. ",targets:"a  <span>product</span> of two  <span>natural numbers</span> ",returns:"a single natural  <span>number</span> ",effect:"This is a  <span>simplifying operation</span> since we have  <span>merged</span> two natural  <span>number factors</span> into a single natural  <span>number</span>. "}},splitFacsToProduct:{id:34,sv:{name:"gruppera faktorer till produktfaktor",explanation:"Att låta vissa  <span>faktorer</span> i en  <span>produkt</span> bilda en egen  <span>produktfaktor</span> påverkar inte  <span>uttryckets</span> värde. ",targets:" <span>Produkt</span> av minst tre  <span>faktorer</span> ",returns:" <span>Produkt</span> med  <span>produktfaktor</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom  <span>produkten</span> blir djupare nästlad. "},en:{name:"group factors into product factor",explanation:"To group some  <span>factors</span> in a  <span>product</span> into a  <span>product factor</span> will not affect the value of the  <span>product</span> as a whole. ",targets:" <span>Product</span> with at least three  <span>factors</span> ",returns:" <span>Product</span> with  <span>product factor</span> ",effect:"This is a  <span>complicating operation</span>, since the  <span>product</span> will be nested more deeply. "}},multiplyByOne:{id:35,sv:{name:"introducera faktor 1",explanation:"Eftersom att multiplicera med  <span>1</span> inte påverkar ett  <span>uttrycks</span> värde, så kan vi förvandla vilket  <span>uttryck</span> som helst till en  <span>produkt</span> genom att  <span>introducera</span>  <span>faktorn</span>  <span>1</span>. ",targets:"Alla  <span>matematiska uttryck</span> ",returns:" <span>Produkt</span> med  <span>faktor</span>  <span>1</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom vi lägger till en ny  <span>faktor</span>. "},en:{name:"introduce factor 1",explanation:"Since multiplying by  <span>1</span> doesn't affect the value of an  <span>expression</span>, we can turn any  <span>expression</span> into a  <span>product</span> by  <span>introducing</span> a  <span>factor</span>  <span>1</span>. ",targets:"Any  <span>mathematical expression</span> ",returns:" <span>Product</span> with  <span>factor</span>  <span>1</span> ",effect:"This is a  <span>complicating operation</span>, since we are  <span>introducing</span> a new  <span>factor</span>. "}},zeroToZeroFacProd:{id:36,sv:{name:"dela upp 0 till produkt med faktor 0",explanation:"Eftersom alla  <span>produkter</span> med en  <span>faktor</span>  <span>0</span> har värdet  <span>0</span>, så kan vi lägga till vilken  <span>faktor</span> som helst till en  <span>faktor</span>  <span>0</span> utan att förändra värdet. ",targets:" <span>Talet 0</span> ",returns:" <span>Produkt</span> med  <span>faktor</span>  <span>0</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom vi lägger till en ny  <span>faktor</span>. "},en:{name:"split 0 to product with factor 0",explanation:"Since all  <span>products</span> with a  <span>factor</span>  <span>0</span> has the value  <span>0</span>, we can turn  <span>0</span> into a  <span>product</span> of  <span>0</span> and any  <span>factor</span> of our choosing, without changing the value from  <span>0</span>. ",targets:"The  <span>number 0</span> ",returns:" <span>Product</span> with a  <span>factor</span>  <span>0</span> ",effect:"This is a  <span>complicating operation</span>, since we are  <span>introducing</span> a new  <span>factor</span>. "}},biSumToProd:{id:37,sv:{name:"bryt ut faktor ur summa",explanation:"Om vi har en  <span>summa</span> av  <span>produkter</span>, där alla  <span>produkttermerna</span> har en gemensam  <span>faktor</span>, så kan den  <span>faktorn</span> lyftas ut till en yttre  <span>produkt</span> där den andra  <span>faktorn</span> blir  <span>summan</span> med reducerade  <span>termer</span>. ",targets:" <span>Summa</span> av  <span>produkter</span> med gemensam  <span>faktor</span> ",returns:" <span>Produkt</span> med  <span>summafaktor</span> ",effect:"Detta är egentligen en  <span>förenklande operation</span> eftersom vi slipper upprepa den gemensamma  <span>faktorn</span>, men då det oftare är lättare att hantera  <span>produkter</span> i  <span>summor</span> än  <span>summor</span> i  <span>produkter</span> så är  <span>operationen</span> ändå ofta  <span>komplicerande</span>. "},en:{name:"extract factor from sum",explanation:"If we have a  <span>sum</span> of  <span>products</span>, where each  <span>product term</span> has a common  <span>factor</span>, we can extract that  <span>factor</span> to an outer  <span>product</span> where the other  <span>factor</span> will be the  <span>sum</span> with reduced  <span>terms</span>. ",targets:" <span>Sum</span> of  <span>products</span> with common  <span>factor</span> ",returns:" <span>Product</span> with  <span>sum factor</span> ",effect:"This should be a  <span>simplifying operation</span>, since we don't have to repeat the common  <span>factor</span>. But as a  <span>sum</span> of  <span>products</span> is easier to deal with compared to a  <span>product</span> of  <span>sums</span>, it is considered to be  <span>complicating</span>. "}},numToProd:{id:38,sv:{name:"faktorisera naturligt tal",explanation:"Genom omvänd  <span>multiplikation</span> kan vi  <span>faktorisera</span> ett  <span>naturligt tal</span> till en  <span>produkt</span> av  <span>tal</span>. ",targets:"ett  <span>naturligt tal</span> ",returns:"en  <span>produkt</span> av  <span>naturliga tal</span> ",effect:"Detta är en  <span>komplicerande operation</span> eftersom vi  <span>introducerar</span> nya  <span>faktorer</span>. "},en:{name:"factorise natural number",explanation:"By reverse  <span>multiplication</span> we can  <span>split</span> a natural  <span>number</span> into a  <span>product</span> of  <span>numbers</span>. ",targets:"a natural  <span>number</span> ",returns:"a  <span>product</span> of  <span>natural numbers</span> ",effect:"This is a  <span>complicating operation</span>, since we are  <span>introducing</span> new  <span>factors</span>. "}},distributeFacs:{id:39,sv:{name:"distribuera in faktorer i summa",explanation:"Eftersom vi kan  <span>distribuera</span> in en  <span>faktor</span> i en  <span>summa</span>  <span>faktor</span> så kan vi också  <span>distribuera</span> in flera, genom att först gruppera dem till en  <span>produktfaktor</span>. ",targets:"en  <span>produkt</span> med  <span>summafaktor</span> ",returns:"en  <span>produkt</span> med färre  <span>faktorer</span>, eller endast  <span>summan</span>. ",effect:"Detta är en  <span>förenklande operation</span>, eftersom en  <span>summa</span> av  <span>produkter</span> är lättare att förenkla än en  <span>produkt</span> med  <span>summafaktorer</span>. ",steps:{groupselfacs:"De  <span>faktorer</span> vi vill multiplicera in grupperar vi till en egen  <span>produktfaktor</span>.",groupfacsandsum:"Eftersom vi inte vill multiplicera in alla  <span>faktorer</span> i  <span>summan</span> så måste vi först samla de grupperade  <span>faktorerna</span> och  <span>summafaktorn</span> i en egen  <span>produkt</span>.",multinfacs:"Nu distribuerar vi in vår  <span>faktor</span> i  <span>summafaktorn</span>."}},en:{name:"distribute factors into sum",explanation:"Since we can  <span>distribute</span> a  <span>factor</span> into a  <span>sum factor</span> we can also  <span>distribute</span> many  <span>factors</span>, by first grouping them into a  <span>product factor</span>. ",targets:"a  <span>product</span> with  <span>sum factor</span> ",returns:"a  <span>product</span> with fewer  <span>factors</span>, or just the  <span>sum</span>. ",effect:"This is a  <span>simplifying operation</span>, since a  <span>sum</span> of  <span>products</span> is easier to  <span>simplify</span> compared to a  <span>product</span> with  <span>sum factors</span> ",steps:{groupselfacs:"We group  <span>factors</span> we want to  <span>distribute</span> into a  <span>product factor</span>.",groupfacsandsum:"Since we don't want to  <span>distribute</span> all  <span>factors</span> into the  <span>sum</span>, we first have to collect the grouped  <span>factors</span> and the  <span>sum factor</span> into a  <span>product</span> of their own.",multinfacs:"Now we  <span>distribute</span> our  <span>factor</span> into the  <span>sum factor</span>."}}},extractFacsFromTerms:{id:40,sv:{name:"bryt ut faktorer ur summa",explanation:"Vi kan bryta ut ett valfritt antal gemensamma  <span>faktorer</span> ur  <span>produkttermer</span> i en  <span>summa</span>. ",targets:"en  <span>summa</span> ",returns:"en  <span>summa</span> med  <span>produktterm</span>, eller endast  <span>produkt</span> ",effect:"Detta är egentligen en  <span>förenklande operation</span> eftersom vi slipper upprepa den gemensamma  <span>faktorn</span>, men då det oftare är lättare att hantera  <span>produkter</span> i  <span>summor</span> än  <span>summor</span> i  <span>produkter</span> så är  <span>operationen</span> ändå ofta  <span>komplicerande</span>. ",steps:{extractfacsfromterm:"Vi extraherar den utvalda  <span>faktorn</span> ur  <span>termen</span>.",makefacsequal:"Vi  <span>omformulerar</span>  <span>faktorn</span> så att den verkligen blir helt identisk med de andra.",groupbereftterms:"Eftersom vi inte bestal alla  <span>termerna</span>, så grupperar vi våra måltermer i en egen  <span>summa</span> som vi skall bryta ut  <span>faktorn</span> ur.",grouptargetpair:"Vi grupperar  <span>termerna</span> två i taget för att kunna tillämpa utbrytningen.",extractingselpair:"Nu bryter vi ut den valda  <span>faktorn</span> ur  <span>summan</span>.",groupextractedterms:"Vi grupperar de extraherade  <span>termerna</span>."}},en:{name:"extract factors from sum",explanation:"We can extract  <span>any number of</span> common  <span>factors</span> from  <span>product terms</span> in a  <span>sum</span>. ",targets:"a  <span>sum</span> ",returns:"a  <span>sum</span> with  <span>product term</span>, or just a  <span>product</span> ",effect:"This should be a  <span>simplifying operation</span>, since we don't have to repeat the common  <span>factor</span>. But as a  <span>sum</span> of  <span>products</span> is easier to deal with compared to a  <span>product</span> of  <span>sums</span>, it is considered to be  <span>complicating</span>. ",steps:{extractfacsfromterm:"We extract the chosen  <span>factor</span> from the  <span>term</span>.",makefacsequal:"We  <span>rephrase</span> the  <span>factor</span> in order to make it truly identical to the others.",groupbereftterms:"Since we're not stealing  <span>factors</span> from all  <span>terms</span>, we group the target  <span>terms</span> into a  <span>sum</span> of their own, to be extracted from.",grouptargetpair:"We group the  <span>terms</span> two at a time, so we can perform the extraction.",extractingselpair:"Now we extract the wanted  <span>factor</span> from the  <span>sum</span>.",groupextractedterms:"We group the extracted  <span>terms</span>."}}},mergeFracFacs:{id:41,sv:{name:"slå ihop kvotfaktorer",explanation:"Eftersom vi kan  <span>slå ihop</span> en  <span>produkt</span> av två  <span>kvotfaktorer</span> till en  <span>kvot</span>, så kan vi  <span>slå ihop</span> valfritt antal  <span>kvotfaktorer</span> i en större  <span>produkt</span> till en  <span>kvot</span>. ",targets:"en  <span>produkt</span> med två eller fler  <span>kvotfaktorer</span> ",returns:"en  <span>produkt</span> med färre  <span>faktorer</span>, eller endast  <span>kvot</span>. ",effect:"Detta är en  <span>förenklande operation</span>, eftersom en  <span>kvot</span> av  <span>produkter</span> är lättare att hantera än en  <span>produkt</span> av  <span>kvoter</span>. ",steps:{groupfracpair:"Vi grupperar två utvalda  <span>kvotfaktorer</span>, för att sedan kunna  <span>slå ihop</span> dem.",mergefracpair:"Vi  <span>slå ihop</span> de två  <span>kvotfaktorerna</span> till en enda  <span>kvot</span>.",flattenmergednumer:"Vi  <span>jämnar till</span>  <span>täljaren</span> i den ihopslagna  <span>kvoten</span> genom att absorbera  <span>produktfaktorn</span> som orsakades av ihopslagningen.",flattenmergeddenom:"Samma sak i  <span>nämnaren</span>.",removeonenumers:"Slutligen eliminerar vi alla  <span>faktorer</span>  <span>1</span> ur  <span>täljaren</span>."}},en:{name:"merge fraction factors",explanation:"Since we can  <span>merge</span> a  <span>product</span> of two  <span>fraction factors</span> into a single  <span>fraction</span>, we can also  <span>merge</span>  <span>any number of</span>  <span>fraction factors</span> in a larger  <span>product</span> into a  <span>fraction factor</span>. ",targets:"a  <span>product</span> with two or more  <span>fraction factors</span> ",returns:"a  <span>product</span> with fewer  <span>factors</span>, or just a  <span>fraction</span> ",effect:"This is a  <span>simplifying operation</span>, since a  <span>fraction</span> of  <span>products</span> is easier to deal with than a  <span>product</span> of  <span>fractions</span>. ",steps:{groupfracpair:"We group two selected  <span>fraction factors</span>, in order to be able to  <span>merge</span> them.",mergefracpair:"We  <span>merge</span> the two  <span>fraction factors</span> into a single  <span>fraction</span>.",flattenmergednumer:"We  <span>flatten</span> the  <span>numerator</span> in the  <span>merged</span>  <span>fraction</span> by absorbing the  <span>product factor</span> caused by the  <span>merge</span>.",flattenmergeddenom:"Same thing, of course, in the  <span>denominator</span>.",removeonenumers:"Finally we  <span>eliminate</span> all  <span>factors</span>  <span>1</span> from the  <span>numerator</span>."}}},multiplyNumFacs:{id:42,sv:{name:"multiplicera naturliga tal",explanation:"Eftersom en  <span>produkt</span> av två  <span>naturliga tal</span> via  <span>multiplikation</span> kan  <span>slås ihop</span> till ett enda  <span>naturligt tal</span>, så kan vi också multiplicera ihop valfritt antal  <span>faktorer</span> i en större  <span>produkt</span>. (Vi kan också multiplicera  <span>decimaltal</span>) ",targets:"en  <span>produkt</span> med minst två  <span>faktorer</span> som är  <span>naturliga tal</span> ",returns:" <span>Produkt</span> med färre  <span>faktorer</span>, eller endast ett  <span>naturligt tal</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi får färre  <span>faktorer</span>. ",steps:{groupmultpair:"Vi grupperar två  <span>naturliga tal</span> i en egen  <span>produkt</span>, för att sedan kunna multiplicera dem.",multpair:"Vi multiplicerar de två grupperade  <span>talfaktorerna</span>.",multpaircollapseproduct:"Vi multiplicerar  <span>produktens</span> sista två  <span>naturliga tal</span>, så att endast ett  <span>naturligt tal</span> återstår!"}},en:{name:"multiply natural numbers",explanation:"Since a  <span>product</span> of two  <span>natural numbers</span> can me  <span>merged</span> through  <span>multiplication</span> into a single natural  <span>number</span>, we can also  <span>merge</span>  <span>any number of</span> natural  <span>number factors</span> in a larger  <span>product</span>. ",targets:"a  <span>product</span> with at least two natural  <span>number factors</span> ",returns:"a  <span>product</span> with fewer  <span>factors</span>, or just a natural  <span>number</span> ",effect:"This is a  <span>simplifying operation</span>, since we get fewer  <span>factors</span>. ",steps:{groupmultpair:"We group two natural  <span>number factors</span> into a  <span>product</span> of their own, so we then can multiply them.",multpair:"We multiply the two grouped natural  <span>number factors</span>.",multpaircollapseproduct:"We multiply the final two natural  <span>number factors</span> in the  <span>product</span>, causing only a single natural  <span>number</span> to remain!"}}},multiplyPosNegNum:{id:43,sv:{name:"multiplicera heltal med olika tecken",explanation:"Vi kan multiplicera ett positivt  <span>heltal</span> med ett negativt genom att först lyfta bort  <span>negationen</span>, och sedan sätta tillbaka den över resultatet. ",targets:"en  <span>produkt</span> med positiv och  <span>negativ</span> heltalsfaktor ",returns:"en  <span>produkt</span> med en  <span>faktor</span> färre, eller endast ett negativt  <span>heltal</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi reducerar antalet  <span>faktorer</span>. ",steps:{firstexpandthenegnum:"Först expanderar vi  <span>negationen</span> så att vi frigör den inre heltalsfaktorn.",thenmultiplynums:"Nu multiplicerar vi de båda positiva  <span>heltalen</span>.",finallynegifyanswer:"Slutligen sätter vi tillbaka  <span>negationen</span> över resultatet."}},en:{name:"multiply integers with different signs",explanation:"We can multiply a positive  <span>integer</span> with a  <span>negative</span>  <span>integer</span>, by first  <span>removing</span> the  <span>negation</span> and then putting it back over the result. ",targets:" <span>Product</span> with positive and  <span>negative</span>  <span>integer</span>  <span>factor</span> ",returns:" <span>Product</span> with one less  <span>factor</span>, or just a  <span>negative</span>  <span>integer</span> ",effect:"This is a  <span>simplifying operation</span>, since we are losing a  <span>factor</span>. ",steps:{firstexpandthenegnum:"First we expand the  <span>negation</span> to free the inner  <span>integer</span>  <span>factor</span>.",thenmultiplynums:"Then we multiply the two positive  <span>numbers</span>.",finallynegifyanswer:"Finally we put the  <span>negation</span> back over the result."}}},multiplyAllNumFacs:{id:120,sv:{name:"multiplicera heltalsfaktorer",explanation:"Eftersom vi kan multiplicera alla positiva  <span>heltal</span>, och ett positivt och ett negativt  <span>heltal</span>, och två  <span>negationer</span> tar ut varandra, så kan vi multiplicera samtliga  <span>heltal</span> i en  <span>produkt</span>. ",targets:" <span>Produkt</span> med minst två heltalsfaktorer ",returns:" <span>Produkt</span> med färre  <span>faktorer</span>, eller endast ett  <span>heltal</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi eliminerar  <span>faktorer</span>. ",steps:{collapsethenegs:"Vi låter två  <span>negativa faktorer</span> avnegera varandra.",wemultiplyallpositivenumbers:"Vi multiplicerar alla positiva  <span>heltal</span>.",wemultiplyposandnegnumbers:"Vi multiplicerar det positiva och det  <span>negativa</span>  <span>heltalet</span>."}},en:{name:"multiply integer factors",explanation:"Since we can multiply all positive  <span>integers</span>, as well as a positive and a  <span>negative</span>  <span>integers</span>, and two  <span>negations</span> cancel each other out, that means we can multiply all  <span>integers</span> in a  <span>product</span>. ",targets:"a  <span>product</span> with at least two  <span>integers</span>  <span>factors</span>. ",returns:"a  <span>product</span> with fewer  <span>factors</span>, or just an  <span>integers</span> ",effect:"This is a  <span>simplifying operation</span>, since we get fewer  <span>factors</span>. ",steps:{collapsethenegs:"We let the  <span>negations</span> from two  <span>negative factors</span> cancel each other out.",wemultiplyallpositivenumbers:"We multiply all positive  <span>integers</span>.",wemultiplyposandnegnumbers:"We multiply the positive and  <span>negative</span>  <span>integer</span>."}}},exposeFacInNumber:{id:127,sv:{name:"bryt ut faktor ur heltal",explanation:"Vi kan  <span>faktorisera</span> fram ett  <span>heltal</span> ur ett annat, genom att göra om måltalet till en  <span>produkt</span> av det önskade  <span>heltalet</span> och en rest. ",targets:"ett  <span>heltal</span> ",returns:"en  <span>produkt</span> av två  <span>heltal</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom vi ersätter ett  <span>heltal</span> med en  <span>produkt</span>. ",steps:{denegifytargettooperate:"Vi lyfter bort  <span>negationen</span> från  <span>talfaktorn</span> vi vill  <span>faktorisera</span>.",factorisetargetnumbertoexposefac:"Vi  <span>faktoriserar</span> måltalet till en  <span>produkt</span> av det önskade  <span>talet</span> och en rest.",flattenprodwithprodandneg:"Vi  <span>jämnar ut</span>  <span>produkten</span> efter avnegifieringen.",putnegoverexposedfac:"Vi lägger  <span>negationen</span> över det önskade  <span>talet</span>, då vi ville ha det negativt.",putnegoverremain:"Vi lägger  <span>negationen</span> över talresten, eftersom vi ville ha det önskade  <span>talet</span> positivt.",addnegonestousefornegating:"Vi  <span>introducerar</span> två  <span>faktorer</span>  <span>-1</span>, för att kunna använda en av dem till att negera det önskade  <span>talet</span>."}},en:{name:"extract factor from inteer",explanation:"We can  <span>factor</span> out an  <span>integer</span> from another by changing the target  <span>integer</span> to a  <span>product</span> of the wanted  <span>integer</span> and a residue. ",targets:"an  <span>integer</span> ",returns:"a  <span>product</span> of two  <span>integers</span> ",effect:"This is a  <span>complicating operation</span>, since we are replacing an  <span>integer</span> with a  <span>product</span>. ",steps:{denegifytargettooperate:"We lift the  <span>negation</span> away from the target  <span>integer</span>.",factorisetargetnumbertoexposefac:"We  <span>factorise</span> the target  <span>integer</span> to a  <span>product</span> of the wanted  <span>integer</span> and a residue  <span>integer</span>.",flattenprodwithprodandneg:"We  <span>flatten</span> the  <span>product</span> after the denegifying.",putnegoverexposedfac:"We put the  <span>negation</span> over the wanted  <span>integer</span>, since we desired it to be  <span>negative</span>.",putnegoverremain:"We put the  <span>negation</span> over the residue  <span>integer</span>, since the wanted  <span>integer</span> should be positive.",addnegonestousefornegating:"We  <span>introduce</span> two  <span>factors</span>  <span>-1</span>, in order to use one of them to make the wanted  <span>integer</span>  <span>negative</span>."}}},extractFacsFromDenomAndPowify:{id:310,sv:{name:"extrahera potens från nämnare",explanation:"Vi kan bryta ut en  <span>faktor</span> från en  <span>nämnare</span>, men den blir då en  <span>potens</span> med  <span>exponent</span>  <span>-1</span>. ",targets:"en  <span>kvot</span> ",returns:"en  <span>produkt</span> av den utlyfta  <span>potensen</span> och resten av  <span>kvoten</span> ",effect:"Detta är en  <span>komplicerande operation</span> eftersom  <span>uttrycket</span> nu är djupare nästlat. ",steps:{extractfacsfromfrac:"Först bryter vi ut  <span>faktorn</span> från  <span>kvoten</span>. Det ger oss en  <span>kvot</span> med  <span>täljare</span>  <span>1</span>.",fractopow:"Den  <span>kvoten</span> kan vi omvandla till en  <span>potens</span> med  <span>negativ exponent</span>!",morenegbit:"Vi  <span>jämnar ut</span>  <span>exponenten</span>.",collapsedoubleneg:"Vi  <span>jämnar ut</span>  <span>exponenten</span>."}},en:{name:"extract power from denominator",explanation:"We can extract a  <span>factor</span> from a  <span>denominator</span>, but it will then become a  <span>power</span> with  <span>exponent</span>  <span>-1</span>. ",targets:"a  <span>fraction</span> ",returns:"a  <span>product</span> of the extracted  <span>power</span> and the rest of the  <span>fraction</span> ",effect:"This is a  <span>complicating operation</span> since the  <span>expression</span> is now more deeply nested. ",steps:{extractfacsfromfrac:"First we extract the  <span>factor</span> from the  <span>denominator</span>. This gives us a  <span>fraction</span> with  <span>numerator</span>  <span>1</span>.",fractopow:"That  <span>fraction</span> can be turned into a  <span>power</span> with a  <span>negative exponent</span>!",morenegbit:"We  <span>flatten</span> the  <span>exponent</span>.",collapsedoubleneg:"We  <span>flatten</span> the  <span>exponent</span>."}}},extractFacsFromExpression:{id:129,sv:{name:"extrahera faktorer ur uttryck",explanation:"Vi kan lyfta ut en  <span>faktor</span> ur ett  <span>uttryck</span>. ",targets:"Alla  <span>matematiska uttryck</span> ",returns:" <span>Produkt</span> av utlyfta  <span>faktorer</span> och resten av  <span>uttrycket</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom  <span>uttrycket</span> blir djupare nästlat. ",steps:{maketoproduct:"Vi multiplicerar med  <span>1</span> för att skapa en  <span>produkt</span> att lyfta ut  <span>faktorn</span> ur.",removeneg:"Vi lyfter bort  <span>negationen</span> som döljer  <span>produkten</span>.",extractfacsfromfrac:"Vi lyfter ut  <span>faktorerna</span> ur  <span>kvoten</span>.",integrateresult:"Vi  <span>jämnar ut</span>  <span>produkten</span> efter avnegeringen.",putnegback:"Nu när vi har extraherat vår  <span>faktor</span> så lägger vi tillbaka  <span>negationen</span>.",groupselfacs:"Vi grupperar de  <span>faktorer</span> vi vill bryta ut till en enda  <span>produktfaktor</span>.",groupotherfacs:"Vi grupperar de övriga  <span>faktorerna</span> vi inte vill bryta ut.",moveordertomatch:"Vi möblerar om i de utbrytna  <span>faktorerna</span> för att matcha."}},en:{name:"extract factors from expression",explanation:"We can extract a  <span>factor</span> from an  <span>expression</span>. ",targets:"Any  <span>mathematical expression</span>. ",returns:"A  <span>product</span> of the extracted  <span>factors</span> and the rest of the  <span>expression</span>. ",effect:"This is a  <span>complicating operation</span>, since the  <span>expression</span> will be nested more deeply. ",steps:{maketoproduct:"We multiply by  <span>1</span> in order to create a  <span>product</span> to extract the  <span>factor</span> from.",removeneg:"We lift away the  <span>negation</span> that hides the  <span>product</span>.",extractfacsfromfrac:"We extract the  <span>factors</span> from the  <span>fraction</span>.",integrateresult:"We  <span>flatten</span> the  <span>product</span> after the denegifying.",putnegback:"Now that we have extracted what we want, we put the  <span>negation</span> back.",groupselfacs:"We group the  <span>factors</span> we want to extract into a single  <span>product factor</span>.",groupotherfacs:"We group the remaining  <span>factors</span> that we don't want to extract.",moveordertomatch:"We rearranged the extracted  <span>factors</span> to match."}}},mergeSumFacs:{id:166,sv:{name:"slå ihop summafaktorer",explanation:"Genom att använda  <span>distribution</span> så kan vi  <span>slå ihop</span> alla  <span>summafaktorer</span> i en  <span>produkt</span>. ",targets:"en  <span>produkt</span> med minst två  <span>summafaktorer</span> ",returns:"en  <span>produkt</span> med en  <span>summafaktor</span>, eller enbart  <span>summan</span> ",effect:"Detta är en  <span>förenklande operation</span> av samma anledning som att  <span>distribution</span> är  <span>förenklande</span>; trots att vi nu måste upprepa  <span>faktorer</span> så är det mycket lättare att förenkla en  <span>summa</span> med  <span>produkttermer</span> än en  <span>produkt</span> med  <span>summafaktorer</span>. ",steps:{multin:"Vi distribuerar in en  <span>summafaktor</span> i en annan  <span>summafaktor</span>.",multinside:"Vi distribuerar in en av  <span>termerna</span> i den andra  <span>summafaktorn</span>.",evenoutprod:"Nu jämnar vi ut  <span>produkten</span> efter  <span>distributionen</span>.",evenoutpart:"Slutligen jämnar vi ut  <span>summan</span>, och vi är klara!"}},en:{name:"merge sum factors",explanation:"By using  <span>distribution</span> we can  <span>merge</span> all  <span>sum factors</span> in a  <span>product</span> into a single  <span>sum factor</span>. ",targets:"a  <span>product</span> with at least two  <span>sum factors</span> ",returns:"a  <span>product</span> with a single  <span>sum factor</span>, or the lone  <span>sum</span> ",effect:"This is a  <span>simplifying operation</span> for the same reason that  <span>distribution</span> is  <span>simplifying</span>;  <span>even though</span> we must now repeat  <span>factors</span>, it is much easier to  <span>simplify</span> a  <span>sum</span> with  <span>product terms</span> than a  <span>product</span> with  <span>sum factors</span>. ",steps:{multin:"We  <span>distribute</span> one  <span>sum factor</span> into another.",multinside:"We  <span>distribute</span> one  <span>term</span> into the  <span>sum factor</span>.",evenoutprod:"Now we  <span>flatten</span> the  <span>product</span> after the  <span>distribution</span>.",evenoutpart:"Finally we  <span>flatten</span> the  <span>sum</span>, and we are done!"}}},extractNumFacFromExpression:{id:182,sv:{name:"extrahera heltal från uttryck",explanation:"Vi kan alltid bryta ut valfritt  <span>heltal</span> från vilket  <span>uttryck</span> som helst. Antingen återfinns  <span>heltalet</span> som  <span>faktor</span> i  <span>uttrycket</span>, eller så kan det  <span>faktoriseras</span> fram ur en annan heltalsfaktor, eller så kan vi som sista utväg göra  <span>uttrycket</span> till en  <span>kvot</span> och förlänga med  <span>heltalet</span> vi vill ha. ",targets:"ett  <span>matematiskt uttryck</span> ",returns:"en  <span>produkt</span> av det eftersökta  <span>heltalet</span> och resten av  <span>uttrycket</span> ",effect:"Detta är en  <span>komplicerande operation</span> eftersom vi nu har fler  <span>faktorer</span> än tidigare, oavsett vilken metod vi tvingades använda. ",steps:{multonotherside:"Eftersom  <span>uttrycket</span> är den  <span>faktor</span> vi vill bryta ut så  <span>introducerar</span> vi en  <span>faktor</span>  <span>1</span> att spara, och är sedan klara!",liftingoutarg:"Det eftersökta  <span>heltalet</span> fanns som  <span>faktor</span> i  <span>uttrycket</span>, så vi bryter ut den!",liftingoutnetarg:"Det eftersökta  <span>heltalet</span> finns i en  <span>negation</span>, som vi bryter ut.",moveawayneg:"Sedan flyttar vi  <span>negationen</span>, och heltalsfaktorn är frigjord!",factorisingnumber:" <span>Uttrycket</span> har en heltalsfaktor som vi kan  <span>faktorisera</span> till en  <span>produkt</span> som innehåller det eftersökta  <span>heltalet</span>!",flattening:"Vi  <span>jämnar till</span>  <span>produkten</span> efter  <span>faktoriseringen</span>.",liftingoutfreedarg:"Nu har vi en  <span>produkt</span> som innehåller den eftersökta  <span>faktorn</span>, som vi därmed kan lyfta ut!",factorisingnegnumber:" <span>Uttrycket</span> har en  <span>negativ</span> heltalsfaktor som vi kan  <span>faktorisera</span> till en  <span>produkt</span> som innehåller det eftersökta  <span>heltalet</span>!",negtootherfac:"Vi flyttar  <span>negationen</span> från den nyskapta  <span>produkten</span>.",maketofraction:"Eftersom vi inte kan hitta det eftersökta  <span>heltalet</span> i  <span>uttrycket</span> så gör vi om  <span>uttrycket</span> till en  <span>kvot</span> som vi sedan kan förlänga.",prolonging:"Vi förlänger  <span>kvoten</span> med det eftersökta  <span>heltalet</span>, för att sedan bryta ut täljarfaktorn. Nämnarfaktorn kommer vi lämna kvar.",fixdenom:"Vi städar undan  <span>faktorn</span>  <span>1</span> ur  <span>nämnaren</span>.",liftingoutcreatedprolfac:"Nu lyfter vi ut vår eftersökta heltalsfaktor från  <span>täljaren</span>!"}},en:{name:"extract integer from expression",explanation:"We can always extract any  <span>integer</span> from any  <span>expression</span>. Either the  <span>integer</span> is found as a  <span>factor</span> inside the  <span>expression</span>, or it can be factored out of another  <span>integer</span>, or we can, as a last resort, turn the  <span>expression</span> into a  <span>fraction</span> an prolong with our wanted  <span>integer</span>. ",targets:"a  <span>mathematical expression</span> ",returns:"a  <span>product</span> of the wanted  <span>integer</span> and the rest of the  <span>expression</span> ",effect:"This is a  <span>complicating operation</span>. No matter what method was used, we now have more  <span>factors</span> than before. ",steps:{multonotherside:"Because the  <span>expression</span> is the  <span>integer</span> we seek, we  <span>introduce</span> a  <span>factor</span>  <span>1</span> to leave behind, and then we are done!",liftingoutarg:"The  <span>integer</span> we seek is a  <span>factor</span> inside the  <span>expression</span>, so we exract it and are done!",liftingoutnetarg:"The  <span>integer</span> we seek can be found as a  <span>negative factor</span>, which we extract.",moveawayneg:"We then move away the  <span>negation</span>, and the  <span>integer</span> is freed!",factorisingnumber:"The  <span>expression</span> has an  <span>integer</span>  <span>factor</span> that we can  <span>factorise</span> to a  <span>product</span> that contains the sought  <span>integer</span>!",flattening:"We  <span>flatten</span> the  <span>product</span> after the extraction.",liftingoutfreedarg:"Now we have a  <span>product</span> containing the  <span>integer</span> we want, which we can now extract!",factorisingnegnumber:"The  <span>expression</span> has a  <span>negative</span>  <span>integer</span>  <span>factor</span> that we can  <span>factorise</span> to a  <span>product</span> that contains the sought  <span>integer</span>!",negtootherfac:"We move the  <span>negation</span> away from the newly created  <span>product</span>.",maketofraction:"Because the  <span>integer</span> we want cannot be found inside the  <span>expression</span> we turn it to a  <span>fraction</span> which we can then prolong.",prolonging:"We prolong the  <span>fraction</span> with the wanted  <span>integer</span>, planning to extract the  <span>numerator factor</span>. The  <span>denominator factor</span> will be left behind.",fixdenom:"We clean away the  <span>factor</span>  <span>1</span> from the  <span>denominator</span>.",liftingoutcreatedprolfac:"Now we extract our wanted  <span>integer</span> from the  <span>numerator</span>!"}}},addTermWithNumerTerm:{id:296,sv:{name:"slå ihop term med täljarterm",explanation:"En  <span>term</span> i en  <span>summa</span> kan  <span>slås ihop</span> med en täljarterm i en  <span>kvotterm</span> om vi först gör om den första  <span>termen</span> till en  <span>kvot</span> med samma  <span>nämnare</span>. ",targets:"en  <span>summa</span> med  <span>term</span> som kan  <span>slås ihop</span> med täljarterm i en annan  <span>term</span> ",returns:"en  <span>summa</span> med en  <span>term</span> färre, eller endast  <span>kvoten</span> ifall vi bara hade två  <span>termer</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi slagit ihop två  <span>termer</span>. ",steps:{moveneg:"Innan vi börjar så flyttar vi undan  <span>negationen</span> från  <span>kvottermen</span>.",splitnumersumfrac:"Vi delar upp  <span>kvottermen</span> till en  <span>summa</span>.",absorbres:"Vi låter  <span>termerna</span> från  <span>kvoten</span> uppgå i den yttre  <span>summan</span>.",collectaddables:"Vi samlar  <span>termen</span> och  <span>kvoten</span> i en delsumma för att  <span>slå ihop</span> dem.",andfinallyadd:"Nu slår vi ihop  <span>termen</span> och  <span>kvottermen</span>!",andfinallyfinallybacktogether:"Slutligen slår vi ihop alla delar av ursprungskvoten igen, och vi är klara!"}},en:{name:"merge term with numerator term",explanation:"A  <span>term</span> in  <span>sum</span> can be  <span>merged</span> with a  <span>numerator</span>  <span>term</span> in a  <span>fraction term</span> if we turn the first  <span>term</span> into a  <span>fraction</span> with the same  <span>denominator</span>. ",targets:"a  <span>sum</span> with a  <span>term</span> that can be  <span>merged</span> with a  <span>numerator</span>  <span>term</span> in another  <span>term</span> ",returns:"a  <span>sum</span> with one fewer  <span>term</span>, or just the  <span>fraction</span> if we only had two  <span>terms</span> to begin with ",effect:"This is a  <span>simplifying operation</span> since we have  <span>merged</span> two  <span>terms</span>. ",steps:{moveneg:"Before we start we move away the  <span>negation</span> from the  <span>fraction term</span>.",splitnumersumfrac:"We  <span>split</span> the  <span>fraction term</span> into a  <span>sum</span>.",absorbres:"Now we absorb the  <span>fraction terms</span> into the outer  <span>sum</span>.",collectaddables:"We gather the  <span>fraction term</span> and the  <span>term</span> to be  <span>merged</span> in a  <span>sum term</span> of their own.",andfinallyadd:"Now we  <span>merge</span> the  <span>fraction</span> and the  <span>term</span>!",andfinallyfinallybacktogether:"Finally we put all parts of the original  <span>fraction term</span> back together, and we are done!"}}},absorbNegSum:{id:215,sv:{name:"absorbera negativ summaterm",explanation:"Vi kan absorbera  <span>termerna</span> i en  <span>negativ</span>  <span>summaterm</span> till den yttre  <span>summan</span> genom att först  <span>ta bort</span> dess  <span>negation</span> genom att negera varje  <span>term</span> i  <span>summatermen</span>. ",targets:"en  <span>summa</span> med en  <span>term</span> som är en  <span>negativ summa</span> ",returns:"en  <span>summa</span> med fler  <span>termer</span> ",effect:"Detta är en  <span>förenklande operation</span>. Vi har inte  <span>tagit bort</span> något, men den nya  <span>summan</span> är jämnare och enklare att förenkla vidare. ",steps:{firstcollapsesum:"Först  <span>tar vi bort</span>  <span>summatermens</span>  <span>negation</span> genom att istället negera varje  <span>term</span> i  <span>summan</span>.",thenflattensum:"Nu har vi en  <span>summa</span> med en  <span>summaterm</span>, vilket vi kan absorbera till en enda  <span>summa</span>."}},en:{name:"absorb negative sum term",explanation:"We can absorb the  <span>terms</span> of a  <span>negative</span>  <span>sum term</span> into the outer  <span>sum</span> by first  <span>removing</span> the  <span>negation</span> by negating each  <span>term</span> in the  <span>sum term</span> instead. ",targets:"a  <span>sum</span> with a  <span>negative</span>  <span>sum term</span> ",returns:"a  <span>sum</span> with more  <span>terms</span> ",effect:"This is a  <span>simplifying operation</span>. We haven't  <span>removed</span> anything, but the new  <span>sum</span> is more flattened and easier to  <span>simplify</span> further. ",steps:{firstcollapsesum:"First we  <span>remove</span> the  <span>negation</span> from the  <span>sum term</span> by negating each  <span>term</span> in the  <span>sum term</span> instead.",thenflattensum:"Now we have a  <span>sum</span> with a  <span>sum term</span>, which we can absorb and make one single  <span>sum</span>."}}},absorbSumTerms:{id:44,sv:{name:"absorbera summatermer",explanation:"Eftersom  <span>summor</span> är  <span>associativa</span> så är det samma sak att ha en  <span>summaterm</span> i en  <span>summa</span> som att låta  <span>summatermens</span>  <span>termer</span> ingå i den yttre  <span>summan</span>. ",targets:"en  <span>summa</span> med  <span>summaterm</span> ",returns:"en  <span>summa</span> med fler  <span>termer</span>, men utan  <span>summaterm</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi jämnat ut  <span>summan</span> och  <span>termerna</span> inte är lika djupt nästlade. "},en:{name:"absorb sum terms",explanation:"Because  <span>sums</span> are  <span>associative</span>, having a  <span>sum term</span> inside a  <span>sum</span> is the same thing as letting the  <span>terms</span> of the  <span>sum term</span> be part of the outer  <span>sum</span>. ",targets:"a  <span>sum</span> with  <span>sum term</span> ",returns:"a  <span>sum</span> with more  <span>terms</span> ",effect:"This is a  <span>simplifying operation</span>, as we flattened the  <span>sum</span> and the  <span>terms</span> aren't as deeply nested. "}},addition:{id:45,sv:{name:"addition",explanation:"Om en  <span>summa</span> består av två  <span>naturliga tal</span> så kan dessa  <span>termer</span> via  <span>addition</span>  <span>slås ihop</span> till ett enda  <span>naturligt tal</span>. ",targets:"en  <span>summa</span> av två  <span>naturliga tal</span> ",returns:"ett enda  <span>naturligt tal</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi har slagit ihop två  <span>naturliga tal</span> till ett enda. "},en:{name:"addition",explanation:"If a  <span>sum</span> consists of two  <span>natural numbers</span>, these  <span>terms</span> can via  <span>addition</span> be  <span>merged</span> into one single natural  <span>number</span>. ",targets:"a  <span>sum</span> of two  <span>natural numbers</span> ",returns:"one single natural  <span>number</span> ",effect:"This is a  <span>simplifying operation</span>, since we  <span>merged</span> two  <span>natural numbers</span> into a single natural  <span>number</span>. "}},subtraction:{id:46,sv:{name:"subtraktion",explanation:"Om en  <span>summa</span> består av två  <span>heltal</span>, där det ena  <span>heltalet</span> är negativt, kan vi använda  <span>subtraktion</span> för att  <span>slå ihop</span>  <span>termerna</span> till ett enda  <span>heltal</span>. ",targets:"en  <span>summa</span> av två  <span>heltal</span>, det ena negativt ",returns:"ett enda  <span>heltal</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi slagit ihop två  <span>termer</span> till en. "},en:{name:"subtraction",explanation:"A  <span>sum</span> of two  <span>integers</span>, one  <span>negative</span>, can through  <span>subtraction</span> be  <span>merged</span> into one single  <span>integer</span>. ",targets:"a  <span>sum</span> of two  <span>integers</span>, one  <span>negative</span> ",returns:"one single  <span>integer</span> ",effect:"This is a  <span>simplifying operation</span>, as we have  <span>merged</span> two  <span>terms</span> into a single  <span>term</span>. "}},subtractInSum:{id:47,sv:{name:"subtrahera i summa",explanation:"Eftersom vi kan utföra  <span>subtraktion</span> i en  <span>summa</span> av två  <span>heltal</span>, så kan vi också subtrahera  <span>heltal</span> i en större  <span>summa</span>. ",targets:" <span>Summa</span> som inkluderar två  <span>heltal</span>, varav minst ett negativt. ",returns:" <span>Summa</span> med en  <span>term</span> färre, eller den enda kvarvarande taltermen. ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi har slagit ihop två taltermer. ",steps:{firstgroupinvolvedterms:"Vi grupperar de  <span>heltal</span> vi skall subtrahera till en egen  <span>summa</span>.",thendothesubtraction:"Vi utför  <span>subtraktion</span> på de två  <span>heltalen</span> som är grupperade i en egen  <span>summa</span>."}},en:{name:"subtract in sum",explanation:"Since we can subtract in a  <span>sum</span> of two  <span>integers</span>, we can also subtract two  <span>integers</span> in a larger  <span>sum</span>. ",targets:"a  <span>sum</span> including two  <span>integers</span>, one  <span>negative</span> ",returns:"a  <span>sum</span> with one  <span>term</span> less, or just remaining  <span>integer</span> ",effect:"This is a  <span>simplifying operation</span> as we have  <span>merged</span> two  <span>integers</span>. ",steps:{firstgroupinvolvedterms:"We group the  <span>integers</span> we want to perform  <span>subtraction</span> with into a  <span>sum</span> of their own.",thendothesubtraction:"We perform  <span>subtraction</span> on the  <span>sum</span> of two  <span>integers</span>."}}},addZero:{id:48,sv:{name:"introducera term 0",explanation:"Eftersom vi inte påverkar ett  <span>uttrycks</span> värde genom att addera  <span>0</span>, så kan vi förvandla vilket  <span>uttryck</span> som helst till en  <span>summa</span> genom att  <span>introducera</span>  <span>termen</span>  <span>0</span>. ",targets:"ett  <span>matematiskt uttryck</span>, vilket som helst ",returns:"en  <span>summa</span> med  <span>term</span>  <span>0</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom vi  <span>introducerar</span> en ny  <span>term</span>. "},en:{name:"introduce term 0",explanation:"Since adding  <span>0</span> doesn't affect value, we can turn any  <span>expression</span> into a  <span>sum</span> by  <span>introducing</span> a  <span>term</span>  <span>0</span>. ",targets:"any  <span>mathematical expression</span> ",returns:"a  <span>sum</span> with  <span>term</span>  <span>0</span> ",effect:"This is a  <span>complicating operation</span>, as we are  <span>introducing</span> a new  <span>term</span>. "}},splitTermsToSum:{id:49,sv:{name:"gruppera termer till summaterm",explanation:"Vi kan gruppera ett antal  <span>termer</span> i en  <span>summa</span> till en inre  <span>summa</span>, utan att förändra den yttre  <span>summans</span> värde. ",targets:" <span>Summa</span> med minst tre  <span>termer</span> ",returns:" <span>Summa</span> med färre men nästlade  <span>termer</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom  <span>termerna</span> blir djupare nästlade. "},en:{name:"group terms into sum term",explanation:"We can group  <span>a number of</span>  <span>terms</span> into a  <span>term</span>  <span>sum</span>, without affecting the value of the outer  <span>sum</span>. ",targets:" <span>Sum</span> of at least three  <span>terms</span> ",returns:" <span>Sum</span> with fewer  <span>terms</span> ",effect:"This is a  <span>complicating operation</span>, since the  <span>terms</span> are now nested more deeply. "}},numToSum:{id:50,sv:{name:"dela upp heltal i summa",explanation:"Genom omvänd addition/subtraktion kan vi omvandla ett  <span>heltal</span> till en  <span>summa</span> av  <span>heltal</span>. ",targets:"ett  <span>heltal</span> ",returns:"en  <span>summa</span> av  <span>heltal</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom vi ersatt ett  <span>tal</span> med en  <span>summa</span>. "},en:{name:"split integer into sum",explanation:"Through reverse addition/subtraction, we can turn an  <span>integer</span> into a  <span>sum</span> of  <span>integer</span>, totalling to the same value. ",targets:"an  <span>integer</span> ",returns:"a  <span>sum</span> of  <span>integers</span> ",effect:"This is a  <span>complicating operation</span>, since we have replaced an  <span>integer</span> with a  <span>sum</span>. "}},purgeZeroTerms:{id:51,sv:{name:"ta bort termer 0",explanation:"Eftersom att addera  <span>0</span> inte förändrar ett  <span>uttrycks</span> värde, så kan vi  <span>ta bort</span> alla  <span>termer</span> bestående av  <span>talet 0</span>. ",targets:" <span>Summa</span> med minst en  <span>term</span>  <span>0</span> ",returns:" <span>Summa</span> med färre  <span>termer</span>, eller enda kvarvarande  <span>term</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi  <span>tagit bort</span>  <span>termer</span>. "},en:{name:"remove terms 0",explanation:"Since adding  <span>0</span> doesn't affect the value of an  <span>expression</span>, we can  <span>remove</span> all  <span>terms</span> consisting of the  <span>number 0</span>. ",targets:" <span>Sum</span> with at least one  <span>term</span>  <span>0</span> ",returns:" <span>Sum</span> with fewer  <span>terms</span>, or the only remaining  <span>term</span> ",effect:"This is a  <span>simplifying operation</span> as we have  <span>removed</span>  <span>terms</span>. "}},mergePosNumTerms:{id:52,sv:{name:"slå ihop naturliga taltermer",explanation:"Eftersom vi genom  <span>addition</span> kan  <span>slå ihop</span> en  <span>summa</span> av två  <span>naturliga tal</span>, så kan vi också addera  <span>naturliga tal</span> i en större  <span>summa</span> genom att gruppera  <span>termer</span>. ",targets:"en  <span>summa</span> med minst två naturliga taltermer ",returns:"en  <span>summa</span> med färre  <span>termer</span>, eller enda kvarvarande taltermen. ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi  <span>eliminerat</span>  <span>termer</span>. ",steps:{groupaddpair:"Vi grupperar två  <span>termer</span> vi vill addera i en egen  <span>summa</span>, för att kunna utföra additionen.",addpair:"Nu utför vi  <span>addition</span> på de två grupperade  <span>naturliga talen</span>.",addpaircollapsesum:"Nu utför vi  <span>addition</span> på  <span>summans</span> sista två  <span>termer</span>, så att endast ett  <span>heltal</span> återstår!"}},en:{name:"merge natural number terms",explanation:"Since we can use  <span>addition</span> to  <span>merge</span> a  <span>sum</span> of two  <span>natural numbers</span>, we can also add  <span>natural numbers</span> in a larger  <span>sum</span> by grouping  <span>terms</span>. ",targets:"a  <span>sum</span> with at least two natural  <span>number</span>  <span>terms</span> ",returns:"a  <span>sum</span> with fewer  <span>terms</span>, or only remaining natural  <span>number</span>  <span>term</span> ",effect:"This is a  <span>simplifying operation</span> as we get fewer  <span>terms</span>. ",steps:{groupaddpair:"We group two  <span>terms</span> to add in a  <span>sum</span> of their own, upon which we can then perform  <span>addition</span>.",addpair:"Now we perform  <span>addition</span> on the two grouped  <span>terms</span>.",addpaircollapsesum:"Now we perform  <span>addition</span> on the last two  <span>terms</span> of the  <span>sum</span>, leaving only a single  <span>number</span> behind!"}}},mergeNegNumTerms:{id:53,sv:{name:"slå ihop negativa heltalstermer",explanation:"Vi kan  <span>slå ihop</span> alla  <span>negativa</span> taltermer i en  <span>summa</span> genom att avnegera dem, addera dem, och sedan negera resultatet! ",targets:" <span>Summa</span> med minst två  <span>negativa</span> taltermer ",returns:" <span>Summa</span> med färre  <span>termer</span>, eller endast ett  <span>negativt tal</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi  <span>eliminerat</span>  <span>termer</span>. ",steps:{groupnegterms:"Först grupperar vi alla de  <span>negativa talen</span> till en egen  <span>summa</span>.",expandneg:"Sedan avnegerar vi varje  <span>tal</span>, så att det blir en  <span>produkt</span> av  <span>-1</span> och det positiva  <span>talet</span>.",extractnegone:"Nu när vi har en  <span>summa</span> av  <span>produkter</span> som alla innehåller  <span>faktorn</span>  <span>-1</span> så kan vi bryta ut den.",mergenegvals:"Nu består vår inre  <span>summa</span> endats av positiva  <span>tal</span>, som vi kan addera ihop!",negatingresult:"Slutligen sätter vi tillbaka  <span>negationen</span> över additionsresultatet."}},en:{name:"merge negative integer terms",explanation:"We can  <span>merge</span> all  <span>negative number</span>  <span>terms</span> in a  <span>sum</span> by denegifying them, grouping and adding them, and finally negifying the result! ",targets:" <span>Sum</span> with at least two  <span>negative number</span>  <span>terms</span> ",returns:" <span>Sum</span> with fewer  <span>terms</span>, or the remaining  <span>negative number</span> ",effect:"This is a  <span>simplifying operation</span> as we get fewer  <span>terms</span>. ",steps:{groupnegterms:"First we group all  <span>negative numbers</span> into a  <span>sum</span> of their own.",expandneg:"We then denegify every  <span>number</span>, turning them into a  <span>product</span> of  <span>-1</span> and the positive  <span>number</span>.",extractnegone:"Now that we have a  <span>sum</span> of  <span>products</span> that all contain the  <span>factor</span>  <span>-1</span>, we can extract that from the  <span>sum</span>.",mergenegvals:"The inner  <span>sum</span> now only consists of positive  <span>numbers</span>, which we can  <span>merge</span> through  <span>addition</span>!",negatingresult:"Finally we put the  <span>negation</span> back on the result of the  <span>addition</span>."}}},mergeAllNumTerms:{id:54,sv:{name:"slå ihop rationella termer",explanation:"Alla  <span>rationella</span>  <span>termer</span> i en  <span>summa</span> kan  <span>slås ihop</span>! ",targets:"en  <span>summa</span> med minst två  <span>rationella</span>  <span>termer</span> ",returns:"en summma med färre  <span>termer</span>, eller enda kvarvarande  <span>rationella</span>  <span>termen</span>. ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi  <span>eliminerat</span>  <span>termer</span>. ",steps:{mergeallintegerterms:"Vi slår ihop alla heltalstermer.",mergeallnumfracs:"Vi slår ihop alla  <span>kvoter</span> med numerisk  <span>nämnare</span>.",mergenumandfrac:"Vi slår ihop taltermen med  <span>kvottermen</span>.",zeronumerfractozero:" <span>Kvoten</span> som fick  <span>täljare</span>  <span>0</span> kan vi förenkla till  <span>0</span>."}},en:{name:"merge rational terms",explanation:"All  <span>rational</span>  <span>terms</span> ((<span>numbers</span>,  <span>fractions</span> of  <span>numbers</span>) in a  <span>sum</span> can be  <span>merged</span>! ",targets:"a  <span>sum</span> with at least two  <span>rational</span>  <span>terms</span> ",returns:"a  <span>sum</span> with fewer  <span>terms</span>, or the only remaining  <span>rational</span>  <span>term</span> ",effect:"This is a  <span>simplifying operation</span> as we get fewer  <span>terms</span>. ",steps:{mergeallposterms:"We  <span>merge</span> all  <span>integer</span>  <span>terms</span>.",mergeallnumfracs:"We  <span>merge</span> all  <span>fractions</span> with  <span>integer</span>  <span>denominator</span>.",mergenumandfrac:"We  <span>merge</span> the  <span>fraction term</span> with the  <span>integer</span>  <span>term</span>.",zeronumerfractozero:"The  <span>fraction</span> that got  <span>numerator</span>  <span>0</span> can be  <span>collapsed</span> to  <span>0</span>."}}},mergeAllIntegerTerms:{id:315,sv:{name:"slå ihop alla heltalstermer",explanation:"Alla heltalstermer i en  <span>summa</span> kan  <span>slås ihop</span> till ett enda  <span>heltal</span>. ",targets:"en  <span>summa</span> med minst två heltalstermer ",returns:"en  <span>summa</span> med färre  <span>termer</span>, eller enda kvarvarande  <span>heltalet</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi  <span>eliminerat</span>  <span>termer</span>. ",steps:{mergeallposterms:"Vi slår ihop alla positiva  <span>heltal</span>.",mergeallnegterms:"Vi slår ihop alla  <span>negativa</span> heltal",mergeposnegterms:"Nu slår vi ihop den positiva och  <span>negativa</span> taltermen."}},en:{name:"merge all integer terms",explanation:"All  <span>integer</span>  <span>terms</span> in a  <span>sum</span> can be  <span>merged</span> into one single  <span>integer</span>. ",targets:"a  <span>sum</span> with at least two  <span>integer</span>  <span>terms</span> ",returns:"a  <span>sum</span> with fewer  <span>terms</span>, or the only remaining  <span>integer</span>  <span>term</span> ",effect:"This is a  <span>simplifying operation</span> as we get fewer  <span>terms</span>. ",steps:{mergeallposterms:"We  <span>merge</span> all positive  <span>integers</span>.",mergeallnegterms:"We  <span>merge</span> all  <span>negative</span>  <span>integers</span>.",mergeposnegterms:"Now we  <span>merge</span> the positive and  <span>negative</span>  <span>integer</span>."}}},addMirroredNumber:{id:55,sv:{name:"introducera spegeltal",explanation:"Vi kan lägga till två  <span>heltal</span> till vilket  <span>uttryck</span> som helst, om de två  <span>heltalen</span> är samma bortsett från att det ena är negativt.  <span>Heltalen</span> kan då ta ut varandra, så värdet på det utsprungliga  <span>uttrycket</span> är oförändrat. ",targets:"ett  <span>matematiska uttryck</span> ",returns:"en  <span>summa</span> av  <span>uttrycket</span> och två  <span>heltal</span> ",effect:"Detta är en  <span>komplicerande operation</span> eftersom vi  <span>introducerat</span> två nya  <span>termer</span>. ",steps:{addzerototransform:"Först  <span>introducerar</span> vi till  <span>talet 0</span>, som vi sedan skall dela upp i en  <span>summa</span>.",expandzero:"Nu delar vi upp  <span>0</span> till en  <span>summa</span> av två  <span>heltal</span> genom omvänd  <span>subtraktion</span>.",absorbresultingsum:"Slutligen låter vi den skapade  <span>summan</span> uppgå i den yttre."}},en:{name:"introduce mirror numbers",explanation:"We can add two  <span>integers</span> to any  <span>expression</span> if the two  <span>numbers</span> are identical except for one being  <span>negative</span>. They can then cancel each other out, and the value of the original  <span>expression</span> is unchanged. ",targets:"any  <span>mathematical expression</span> ",returns:"a  <span>sum</span> of mirror  <span>numbers</span> and  <span>expression</span> ",effect:"This is a  <span>complicating operation</span>, as we have  <span>introduced</span> two new  <span>terms</span>. ",steps:{addzerototransform:"First we add a  <span>term</span>  <span>0</span>, which we will then  <span>split</span> into mirror  <span>numbers</span>.",expandzero:"Now we  <span>split</span> the  <span>0</span> into a  <span>sum</span> of mirror  <span>numbers</span> through reverse  <span>subtraction</span>.",absorbresultingsum:"Finally we let the created  <span>sum term</span> become part of the outer  <span>sum</span>, and we are done!"}}},zeroToMirroredExpression:{id:56,sv:{name:"dela upp 0 i summa av uttryck",explanation:" <span>Talet 0</span> kan omvandlas till en  <span>summa</span> av två identiska  <span>uttryck</span>, bortsett från att det ena är negativt.  <span>Summans</span> totala värde är då fortfarande  <span>0</span>, eftersom  <span>termerna</span> kan ta ut varandra. ",targets:" <span>talet 0</span> ",returns:"en  <span>summa</span> av två identiska  <span>uttryck</span> varav ett negativt ",effect:"Detta är en  <span>komplicerande operation</span> eftersom vi ersatt ett  <span>tal</span> med en  <span>summa</span>. ",steps:{turnzerotoprodwithexpr:"Först gör vi om  <span>0</span> till en  <span>produkt</span> av  <span>0</span> och det önskade  <span>uttrycket</span>.",splitzero:"Sedan delar vi upp  <span>faktorn</span>  <span>0</span> till en  <span>summa</span> av  <span>1</span> och  <span>-1</span>, som vi sedan kan  <span>distribuera</span> in uttrycksfaktorn i.",multinexpr:"Nu distribuerar vi in uttrycksfaktorn i  <span>summan</span> av  <span>1</span> och  <span>-1</span>.",collapseonefac:"Vi  <span>tar bort</span>  <span>faktorn</span>  <span>1</span>, och den positiva uttryckstermen är klar!",collapsenegonefac:"Sedan  <span>kollapsar</span> vi  <span>negationen</span>, och hela spegelsumman står färdig."}},en:{name:"split 0 to sum of mirrored expressions",explanation:"The  <span>number 0</span> can be turned into a  <span>sum</span> of two identical  <span>expressions</span>, apart from that one of them is  <span>negative</span>. The total value of the  <span>sum</span> will then still be  <span>0</span>, as the  <span>terms</span> can cancel each other out. ",targets:"The  <span>number 0</span> ",returns:" <span>Sum</span> of two identical  <span>expressions</span>, one  <span>negative</span> ",effect:"This is a  <span>complicating operation</span>, since we have replaced a  <span>number</span> with a  <span>sum</span>. ",steps:{turnzerotoprodwithexpr:"First we  <span>split</span> the  <span>0</span> into a  <span>product</span> of  <span>0</span> and the wanted  <span>expression</span>.",splitzero:"Then we  <span>split</span> the  <span>factor</span>  <span>0</span> into a  <span>sum</span> of  <span>1</span> and  <span>-1</span>, which we next can  <span>distribute</span> the  <span>expression</span>  <span>factor</span> into.",multinexpr:"Now we  <span>distribute</span> the  <span>expression</span>  <span>factor</span> into our created  <span>sum</span>.",collapseonefac:"We  <span>remove</span> the  <span>factor</span>  <span>1</span>, and the positive  <span>expression</span>  <span>term</span> is complete!",collapsenegonefac:"Finally we  <span>collapse</span> the  <span>negation</span>, and the entire mirror  <span>sum</span> is finished."}}},addMirroredExpression:{id:57,sv:{name:"introducera spegeluttryck",explanation:"Till vilket  <span>uttryck</span> som helst kan vi addera två  <span>termer</span> som är identiska förutom att den ena är  <span>negativ</span>. Eftersom dessa kan ta ut varandra så påverkas inte ursprungsuttryckets värde. ",targets:"ett  <span>matematiska uttryck</span> ",returns:"en  <span>summa</span> med tre  <span>termer</span> ",effect:"Detta är en  <span>komplicerande operation</span> eftersom vi  <span>introducerat</span> två nya  <span>termer</span>. ",steps:{addzerototransform:"Först  <span>introducerar</span> vi en  <span>term</span>  <span>0</span>, som vi sedan skall dela upp i spegeluttryck.",expandzerotoexpr:"Nu delar vi upp  <span>termen</span>  <span>0</span> till en  <span>summa</span> av två identiska  <span>termer</span>, förutom att den ena är  <span>negativ</span>.",absorbresultingsum:"Slutligen låter vi den skapade  <span>summatermen</span> uppgå i den yttre  <span>summan</span>."}},en:{name:"introduce mirror expressions",explanation:"We can, to any  <span>expression</span>, add two  <span>terms</span> that are identical except that one is  <span>negative</span>. As they can cancel each other out, they won't affect the value of the original  <span>expression</span>. ",targets:"any  <span>mathematical expression</span> ",returns:"a  <span>sum</span> with three  <span>terms</span> ",effect:"This is a  <span>complicating operation</span>, as we have  <span>introduced</span> two new  <span>terms</span>. ",steps:{addzerototransform:"First we  <span>introduce</span> a  <span>term</span>  <span>0</span>, which we will next  <span>split</span> into a mirror  <span>sum</span>.",expandzerotoexpr:"Then we  <span>split</span> the  <span>0</span> into a  <span>sum</span> of mirror  <span>terms</span>.",absorbresultingsum:"Finally we let the created mirror  <span>sum</span> be absorbed into the outer  <span>sum</span>."}}},addExpressions:{id:117,sv:{name:"slå ihop termer",explanation:"Vi kan  <span>slå ihop</span> alla sorters  <span>termer</span> med varandra om det enda som skiljer dem åt är en heltalsfaktor. ",targets:"en  <span>summa</span> med kompatibla  <span>termer</span> ",returns:"en  <span>summa</span> med färre  <span>termer</span>, eller enda kvarvarande  <span>termen</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi slår ihop  <span>termer</span>. ",steps:{weextractexpressionstoadd:"Först bryter vi ut  <span>uttrycket</span> vi vill addera från alla  <span>termerna</span>. Då får vi en  <span>produkt</span> av  <span>uttrycket</span> och en  <span>summa</span> med enbart  <span>rationella</span>  <span>termer</span> vilket vi kan  <span>slå ihop</span>!",thendotheadding:"Nu slår vi ihop alla  <span>talen</span> i  <span>summan</span>, och resultatet blir det antal  <span>uttryck</span> vi nu har!",cleanupremainingone:"Eftersom resultatet blev  <span>1</span> så skippar vi den  <span>faktorn</span>.",cleanupremainingnegone:"Eftersom resultatet blev  <span>-1</span> så  <span>kollapsar</span> vi istället det som en  <span>negation</span> över  <span>uttrycket</span>.",zeroleftmeanszeroresult:"Eftersom resultatet blev  <span>0</span> så gör vi om hela  <span>produkten</span> till  <span>0</span>.  <span>Uttrycken</span> som vi adderade är nu helt borta ur  <span>summan</span>!",flattenresultingprod:"Vi  <span>jämnar ut</span> den skapade  <span>produkten</span>.",mergeexpressionintonumfac:"Eftersom resultatet blev en  <span>kvot</span> så multiplicerar vi in  <span>uttrycket</span> i  <span>kvotens</span>  <span>täljare</span>.",mergenumfacintofracexpression:"Eftersom  <span>uttrycket</span> är en  <span>kvot</span> så multiplicerar vi in resultatet i  <span>täljaren</span>."}},en:{name:"merge terms",explanation:"We can  <span>merge</span> all kinds of  <span>terms</span> with each other if the only difference between them is an  <span>integer</span>  <span>factor</span>. ",targets:"a  <span>sum</span> with compatible  <span>terms</span> ",returns:"a  <span>sum</span> with fewer  <span>terms</span>, or only remaining  <span>term</span> ",effect:"This is a  <span>simplifying operation</span>, since we are merging  <span>terms</span>. ",steps:{weextractexpressionstoadd:"First we extract the  <span>expression</span> we want to add from all the  <span>terms</span>. We then get a  <span>product</span> of the  <span>expression</span> and a  <span>sum</span> of only  <span>rational</span>  <span>terms</span> which we can add together!",thendotheadding:"Now we add all the  <span>numbers</span> in the  <span>sum</span>, and the result is  <span>the number of</span>  <span>expressions</span> we now have!",cleanupremainingone:"Since the result was  <span>1</span>, we skip that  <span>factor</span>.",cleanupremainingnegone:"As the result was  <span>-1</span>, we instead  <span>collapse</span> that as a  <span>negation</span> over the  <span>expression</span>.",zeroleftmeanszeroresult:"Since the result was  <span>0</span>, we turn the whole  <span>product</span> to  <span>0</span>. The  <span>expressions</span> we added are now completely  <span>removed</span> from the  <span>sum</span>!",flattenresultingprod:"We  <span>flatten</span> the created  <span>product</span>.",mergeexpressionintonumfac:"Since the result was a  <span>fraction</span>, we multiply the  <span>expression</span> into the  <span>numerator</span> of the  <span>fraction</span>.",mergenumfacintofracexpression:"Since the  <span>expression</span> was a  <span>fraction</span>, we multiply the result into the  <span>numerator</span>."}}},addEqualDenomFracs:{id:118,sv:{name:"slå ihop identiska nämnare",explanation:" <span>Kvottermer</span> med identisk  <span>nämnare</span> kan  <span>slås ihop</span> till en enda  <span>kvot</span> med samma  <span>nämnare</span> och  <span>summan</span> av täljarna i  <span>täljaren</span>. ",targets:"en  <span>summa</span> med minst två  <span>kvottermer</span> med identisk  <span>nämnare</span>. ",returns:"en  <span>summa</span> med färre  <span>termer</span>, eller enda kvarvarande  <span>kvottermen</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi slår ihop  <span>termer</span>. ",steps:{denegfrac:"Vi lyfter bort  <span>negationen</span> från  <span>kvoten</span> vi vill addera.",movenegtonumer:"Vi flyttar  <span>negationen</span> till  <span>täljaren</span> för att  <span>kvotens</span>  <span>nämnare</span> skall matcha de andras.",multbyonetokeep:"Denna  <span>kvot</span> har  <span>täljare</span>  <span>1</span>, så istället för att bryta ut den så multiplicerar vi  <span>kvoten</span> med  <span>1</span> direkt.",extractdenominator:"Vi bryter ut  <span>nämnaren</span> ur alla  <span>kvoterna</span>.",addnakedenomstogether:"Nu när alla  <span>kvoterna</span> är helt identiska så kan vi addera dem.",removeonedenom:"Vi skippar  <span>nämnare</span>  <span>1</span>.",putdnumerback:"Slutligen mutliplicerar vi tillbaka resultatet upp till  <span>täljaren</span>."}},en:{name:"merge equal denominators",explanation:" <span>Fraction terms</span> with a common  <span>denominator</span> can be  <span>merged</span> into a single  <span>fraction</span> with the same  <span>denominator</span> and a  <span>sum</span> of the  <span>numerators</span> as  <span>numerator</span>. ",targets:"a  <span>sum</span> with at least two  <span>fractions</span> with common  <span>denominators</span> ",returns:"a  <span>sum</span> with fewer  <span>terms</span>, or only remaining  <span>term</span> ",effect:"This is a  <span>simplifying operation</span> since we are merging  <span>terms</span>. ",steps:{denegfrac:"We lift the  <span>negation</span> from the  <span>fraction</span> we want to  <span>merge</span>.",movenegtonumer:"We move the  <span>negation</span> to the  <span>numerator</span>, so the  <span>denominator</span> matches that of the other  <span>fractions</span>.",multbyonetokeep:"This  <span>fraction</span> has  <span>numerator</span>  <span>1</span>, so instead of extracting that we multiply the  <span>fraction</span> with  <span>1</span> directly.",extractdenominator:"We extract the  <span>denominator</span> from all  <span>fractions</span>.",addnakedenomstogether:"Now we add the naked  <span>fractions</span> together!",removeonedenom:"We ignore  <span>denominator</span>  <span>1</span>.",putdnumerback:"Finally we multiply the result back into the  <span>numerator</span>."}}},addNumericDenomFracs:{id:119,sv:{name:"slå ihop heltalsnämnare",explanation:"Vi kan  <span>slå ihop</span>  <span>kvottermer</span> med heltalsnämnare genom att förlänga dem så att alla  <span>nämnare</span> blir identiska. ",targets:"en  <span>summa</span> med minst två  <span>kvoter</span> med heltalsnämnare ",returns:"en  <span>summa</span> med färre  <span>termer</span>, eller enda kvarvarande  <span>kvottermen</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi slår ihop  <span>termer</span>. ",steps:{weturntocorrectdenominator:"Vi förlänger  <span>kvoten</span> så att  <span>nämnaren</span> blir minsta möjliga gemensamma  <span>nämnare</span> för  <span>kvoterna</span> vi ska lägga ihop.",finallyaddfracstogether:"Sedan, när alla nämnarna är lika, slår vi ihop  <span>kvoterna</span>!"}},en:{name:"merge integer denominators",explanation:"We can  <span>merge</span> two  <span>fraction terms</span> with  <span>integer</span>  <span>denominators</span>  <span>even</span> if the  <span>denominators</span> are different, by prolonging the  <span>fractions</span> so the  <span>denominators</span> become equal. ",targets:" <span>Sum</span> with at least two  <span>fractions</span> with  <span>integer</span>  <span>denominators</span> ",returns:" <span>Sum</span> with fewer  <span>terms</span>, or only remaining  <span>fraction term</span> ",effect:"This is a  <span>simplifying operation</span> since we are merging  <span>terms</span>. ",steps:{weturntocorrectdenominator:"We prolong this  <span>fraction</span> so the  <span>denominator</span> becomes the smallest common  <span>denominator</span> of the  <span>fractions</span> we want to  <span>merge</span>.",finallyaddfracstogether:"Then, when all  <span>denominators</span> are equal, we  <span>merge</span> the  <span>fractions</span>!"}}},addNumericFracToNumber:{id:121,sv:{name:"slå ihop kvot och heltal",explanation:"Vi kan  <span>slå ihop</span> en heltalsterm och en  <span>kvotterm</span> med heltalsnämnare, genom att först göra om  <span>heltalet</span> till en  <span>kvot</span> och ge den samma  <span>nämnare</span>. ",targets:"en  <span>summa</span> med  <span>heltal</span> och  <span>kvot</span> med heltalsnämnare ",returns:"en  <span>summa</span> med en  <span>term</span> färre, alternativt kvarvarande  <span>kvottermen</span>. ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi får en  <span>term</span> färre. ",steps:{turnnumbertofraction:"Först förvandlar vi  <span>talet</span> till en  <span>kvot</span> genom att dela med  <span>1</span>.",addfractionstogether:"Nu har vi två  <span>kvoter</span> med numerisk  <span>nämnare</span>, och kan därmed  <span>slå ihop</span> dem!"}},en:{name:"merge fraction with integer",explanation:"We can  <span>merge</span> an  <span>integer</span> with a  <span>fraction term</span> with  <span>integer</span>  <span>denominator</span>, by first turning the  <span>integer</span> into a  <span>fraction</span>. ",targets:"a  <span>sum</span> with  <span>integer</span> and  <span>fraction</span> with  <span>integer</span>  <span>denominator</span> ",returns:"a  <span>sum</span> with one less  <span>term</span>, or the only remaining  <span>fraction term</span> ",effect:"This is a  <span>simplifying operation</span>, since we have one  <span>term</span> less. ",steps:{turnnumbertofraction:"First we turn the  <span>number</span> into a  <span>fraction</span> by dividing by  <span>1</span>.",addfractionstogether:"Now we have two  <span>fractions</span> with  <span>integer</span>  <span>denominators</span>, which can therefore be  <span>merged</span>!"}}},negOneFacBiProdToNeg:{id:58,sv:{name:"kollapsa faktor och -1",explanation:"En  <span>produkt</span> av  <span>-1</span> och ett  <span>uttryck</span> kan  <span>kollapsas</span> till en  <span>negation</span> av  <span>uttrycket</span>. ",targets:"en  <span>produkt</span> med två  <span>faktorer</span> varav en  <span>-1</span> ",returns:"ett negativt  <span>uttryck</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi slipper en  <span>faktor</span>. "},en:{name:"collapse factor and -1",explanation:"A  <span>product</span> of  <span>-1</span> and an  <span>expression</span> can be  <span>collapsed</span> to a  <span>negation</span> of the  <span>expression</span>. ",targets:" <span>Product</span> with two  <span>factors</span>, one of which is  <span>-1</span> ",returns:"A  <span>negative</span>  <span>expression</span> ",effect:"This is a  <span>simplifying operation</span>, as we have one  <span>factor</span> less. "}},twoNegOneFacProdToOne:{id:59,sv:{name:"kollapsa två faktorer -1",explanation:"En  <span>produkt</span> av två  <span>faktorer</span>  <span>-1</span> kan  <span>kollapsas</span> till  <span>1</span>. ",targets:"en  <span>produkt</span> med två  <span>faktorer</span>  <span>-1</span> ",returns:" <span>talet 1</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi ersätter två  <span>negativa faktorer</span> med en positiv. "},en:{name:"collapse two -1 factors",explanation:"A  <span>product</span> of two  <span>factors</span>  <span>-1</span> can be  <span>collapsed</span> to  <span>1</span>. ",targets:" <span>Product</span> of two  <span>factors</span>  <span>-1</span> ",returns:"The  <span>number 1</span> ",effect:"This is a  <span>simplifying operation</span>, as we replace two  <span>negative factors</span> with one positive. "}},negToNegOneFacProd:{id:60,sv:{name:"expandera negation",explanation:"Vi kan alltid expandera ett negativt  <span>uttryck</span> till en  <span>produkt</span> med  <span>faktorerna</span>  <span>-1</span> och det positiva  <span>uttrycket</span>. ",targets:"en  <span>negation</span> ",returns:"en  <span>produkt</span> med två  <span>faktorer</span>, varav en  <span>-1</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom vi  <span>introducerar</span> en  <span>faktor</span>. "},en:{name:"expand negation",explanation:"We can always expand a  <span>negative</span>  <span>expression</span> to a  <span>product</span> with  <span>factors</span>  <span>-1</span> and the positive  <span>expression</span>. ",targets:" <span>Negation</span> ",returns:" <span>Product</span> with two  <span>factors</span>, one of which is  <span>-1</span> ",effect:"This is a  <span>complicating operation</span> as we are  <span>introducing</span> a new  <span>factor</span>. "}},oneToTwoNegOneFacProd:{id:61,sv:{name:"dela upp 1 till produkt av -1",explanation:"Vi kan expandera  <span>1</span> till en  <span>produkt</span> av två  <span>faktorer</span>  <span>-1</span>, eftersom  <span>-1</span> multiplicerat med sig själv har samma värde som  <span>1</span>. ",targets:" <span>talet 1</span> ",returns:"en  <span>produkt</span> med två  <span>faktorer</span>  <span>-1</span> ",effect:"Detta är en  <span>komplicerande operation</span> eftersom vi ersätter  <span>talet 1</span> med en product "},en:{name:"split 1 to product of -1",explanation:"We can expand  <span>1</span> to a  <span>product</span> of two  <span>factors</span>  <span>-1</span>, since  <span>-1</span> multiplied with itself has the same value as  <span>1</span>. ",targets:"the  <span>number 1</span> ",returns:"a  <span>product</span> with two  <span>factors</span>  <span>-1</span> ",effect:"This is a  <span>complicating operation</span>, since we are replacing the  <span>number 1</span> with a  <span>product</span>. "}},expandNegFacs:{id:62,sv:{name:"expandera negativa faktorer",explanation:"Eftersom vi kan expandera en  <span>negation</span> till en  <span>produkt</span>, så kan vi expandera  <span>negativa faktorer</span> i en  <span>produkt</span> och absorbera den resulterande  <span>produktfaktorn</span>. ",targets:"en  <span>produkt</span> med  <span>negativa faktorer</span> ",returns:"en  <span>produkt</span> med fler  <span>faktorer</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom  <span>negationerna</span> nu gestaltas som  <span>faktorer</span>  <span>-1</span>. ",steps:{firstweexpandfac:"Först expanderar vi den  <span>negativa faktorn</span>.",thenweabsorbprod:"Sedan absorberar vi den resulterade  <span>produkten</span> av  <span>-1</span> och den positiva  <span>faktorn</span>."}},en:{name:"expand negative factors",explanation:"Since we can expand a  <span>negation</span> to a  <span>product</span>, we can also expand  <span>negative factors</span> inside a  <span>product</span> and absorb the resulting  <span>product factor</span>. ",targets:"a  <span>product</span> with  <span>negative factors</span> ",returns:"a  <span>product</span> with more  <span>factors</span> ",effect:"This is a compicating  <span>operation</span>, since the  <span>negations</span> are now new  <span>factors</span>  <span>-1</span>. ",steps:{firstweexpandfac:"First we expand the  <span>negative factor</span>.",thenweabsorbprod:"Then we absorb the resulting  <span>product</span> of  <span>-1</span> and the positive  <span>factor</span>."}}},collapseDoubleNeg:{id:63,sv:{name:"kollapsa dubbel negation",explanation:"En  <span>negation</span> av en  <span>negation</span> kan  <span>kollapsas</span> till det innersta  <span>uttrycket</span>, då de två  <span>negationerna</span> tar ut varandra. ",targets:"en  <span>negation</span> av en  <span>negation</span> ",returns:"föremålet för dubbelnegationen ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi eliminerar två  <span>negationer</span>. ",steps:{expandouterneg:"Först expanderar vi den yttre  <span>negationen</span> till en  <span>produkt</span> med  <span>faktor</span>  <span>-1</span> och den inre  <span>negationen</span>.",thencollapsewithinner:"Sedan använder vi  <span>faktorn</span>  <span>-1</span> för att  <span>kollapsa</span> den inre  <span>negationen</span>, så att bara det innersta  <span>uttrycket</span> återstår."}},en:{name:"collapse double negation",explanation:"A  <span>negation</span> of a  <span>negation</span> can be  <span>collapsed</span> to the innermost  <span>expression</span>, since the two  <span>negations</span> cancel each other out. ",targets:"a  <span>negation</span> of a  <span>negation</span> ",returns:"the target of the double  <span>negation</span> ",effect:"This is a  <span>simplifying operation</span>, since we  <span>eliminate</span> two  <span>negations</span>. ",steps:{expandouterneg:"First we expand the outer  <span>negation</span> to a  <span>product</span> with  <span>factors</span>  <span>-1</span> and the inner  <span>negation</span>.",thencollapsewithinner:"Then we use the  <span>factor</span>  <span>-1</span> to  <span>collapse</span> the inner  <span>negation</span>, leaving only the innermost  <span>expression</span>."}}},collapseNegProdWithNegFac:{id:64,sv:{name:"kollapsa negativ produkt",explanation:"En  <span>negativ produkt</span> som innehåller en  <span>negativ faktor</span> kan  <span>kollapsas</span> till en positiv  <span>produkt</span>. ",targets:"en  <span>negativ produkt</span> med en  <span>negativ faktor</span> ",returns:"en  <span>produkt</span> utan  <span>negativ faktor</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi slipper två  <span>negationer</span>. ",steps:{firstflattennegprod:"Först plattar vi ut den  <span>negativa produkten</span> genom att göra  <span>negationen</span> till en  <span>faktor</span>  <span>-1</span> i  <span>produkten</span>.",nowcollapsenegfacwithnegone:"Sedan  <span>kollapsar</span> vi den  <span>faktorn</span>  <span>-1</span> mot den andra  <span>negativa faktorn</span>."}},en:{name:"collapse negative product",explanation:"A  <span>negative product</span> which contains a  <span>negative factor</span> can be  <span>collapsed</span> to a positive  <span>product</span>. ",targets:"a  <span>negative product</span> with a  <span>negative factor</span> ",returns:"a  <span>product</span> without  <span>negative factor</span> ",effect:"This is a  <span>simplifying operation</span> since we  <span>eliminate</span> two  <span>negations</span>. ",steps:{firstflattennegprod:"First we turn the  <span>negation</span> of the  <span>product</span> to a  <span>factor</span>  <span>-1</span> inside the  <span>product</span>.",nowcollapsenegfacwithnegone:"Then we  <span>collapse</span> that  <span>factor</span>  <span>-1</span> with the other  <span>negative factor</span>."}}},collapseTwoNegFacs:{id:66,sv:{name:"kollapsa två negativa faktorer",explanation:"Har vi två  <span>negativa faktorer</span> i en  <span>produkt</span> så kan deras  <span>negationer</span> ta ut varandra. ",targets:"en  <span>produkt</span> med två  <span>negativa faktorer</span> ",returns:"en  <span>produkt</span> med lika många  <span>faktorer</span> men två färre  <span>negationer</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi slipper två  <span>negationer</span>. ",steps:{expandfac:"Vi expanderar  <span>negationen</span> till en  <span>produkt</span> med  <span>-1</span>.",groupnegones:"Vi grupperar  <span>faktorerna</span>  <span>-1</span> till en egen  <span>produkt</span>, för att kunna  <span>kollapsa</span> dem.",mergenegones:"Nu  <span>kollapsar</span> vi  <span>produkten</span> av två  <span>faktorer</span>  <span>-1</span> till  <span>talet 1</span>.",purgingtheone:"Slutligen  <span>tar vi bort</span> den resulterande  <span>faktorn</span>  <span>1</span> från  <span>produkten</span>."}},en:{name:"collapse two negative factors",explanation:"If we have two  <span>negative factors</span> in a  <span>product</span>, their  <span>negations</span> can cancel each other out. ",targets:"a  <span>product</span> with two  <span>negative factors</span> ",returns:"a  <span>product</span> with the same  <span>number</span> of  <span>factors</span>, but two fewer  <span>negations</span> ",effect:"This is a  <span>simplifying operation</span>, since we  <span>eliminate</span> two  <span>negations</span>. ",steps:{expandfac:"We expand the  <span>negation</span> to a  <span>product</span> with  <span>factor</span>  <span>-1</span>.",groupnegones:"Now we group the  <span>-1</span>  <span>factors</span> to their own  <span>product</span>, to be able to  <span>collapse</span> them.",mergenegones:"Now we  <span>collapse</span> the  <span>product</span> of two  <span>factors</span>  <span>-1</span> to the  <span>number 1</span>.",purgingtheone:"Finally we clean up the resulting  <span>factor</span>  <span>1</span> from the  <span>product</span>."}}},collapseNegNumerDenomFacs:{id:67,sv:{name:"kollapsa negationer i kvot",explanation:"Om vi har en  <span>negativ faktor</span> i både  <span>täljare</span> och  <span>nämnare</span> så kan dessa  <span>negationer</span> ta ut varandra. ",targets:"en  <span>kvot</span> med  <span>negativ faktor</span> i både  <span>täljare</span> och  <span>nämnare</span> ",returns:"en  <span>kvot</span> med två färre  <span>negationer</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi slipper två  <span>negationer</span>. ",steps:{bubblenumerneg:"Först lyfter vi upp  <span>negationen</span> ur  <span>täljaren</span> till  <span>kvoten</span>.",bubbledenomneg:"Vi gör likadant med  <span>nämnarens</span>  <span>negation</span>.",andcollapseneg:"Det gav oss en dubbel  <span>negation</span>, vilket vi kan  <span>kollapsa</span>!"}},en:{name:"collapse negations in fraction",explanation:"If we have  <span>negative factors</span> in both the  <span>numerator</span> and the  <span>denominator</span>, these  <span>negations</span> cancel out each other. ",targets:"a  <span>fraction</span> with  <span>negative factors</span> in both  <span>numerator</span> and  <span>denominator</span> ",returns:"a  <span>fraction</span> with two less  <span>negations</span> ",effect:"This is a  <span>simplifying operation</span>, since we  <span>eliminate</span> two  <span>negations</span>. ",steps:{bubblenumerneg:"First we lift up the  <span>negation</span> from the  <span>numerator</span> to the fraction",bubbledenomneg:"We do the same with the  <span>negation</span> in the  <span>denominator</span>.",andcollapseneg:"That gave us a double  <span>negation</span>, which we can  <span>collapse</span>!"}}},collapseNegFacNegFrac:{id:68,sv:{name:"kollapsa negativ kvot med negation",explanation:"Om en  <span>negativ kvot</span> innehåller en  <span>negativ faktor</span> så kan dessa  <span>negationer</span>  <span>eliminera</span> varandra! ",targets:"en  <span>negativ kvot</span> med  <span>negativ faktor</span> i  <span>täljare</span> eller  <span>nämnare</span> ",returns:"en  <span>kvot</span> utan  <span>negationer</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi slipper två  <span>negationer</span>. ",steps:{moveupneg:"Först lyfter vi upp  <span>negationen</span> till  <span>kvoten</span>.",andcollapseneg:"Det gav oss en dubbel  <span>negation</span>, vilket vi kan  <span>kollapsa</span>!"}},en:{name:"collapse negative fraction with negation",explanation:"If we have  <span>negative factor</span> in a  <span>negative fraction</span>, these  <span>negations</span> cancel out each other. ",targets:"a  <span>fraction</span> with  <span>negative factors</span> in either  <span>numerator</span> or  <span>denominator</span> ",returns:"a  <span>fraction</span> with two less  <span>negations</span> ",effect:"This is a  <span>simplifying operation</span>, since we  <span>eliminate</span> two  <span>negations</span>. ",steps:{moveupneg:"First we lift up the  <span>negation</span> to  <span>fraction</span> itself.",andcollapseneg:"That gave us a double  <span>negation</span>, which we can  <span>collapse</span>!"}}},flattenNegProdFac:{id:70,sv:{name:"absorbera negativ produktfaktor",explanation:"Om en  <span>produkt</span> har en  <span>faktor</span> som är en  <span>negativ produkt</span>, så kan vi lyfta bort  <span>negationen</span> och låta både den och den inre  <span>produktens</span>  <span>faktorer</span> ingå i den yttre. ",targets:" <span>Produkt</span> med  <span>negativ produktfaktor</span> ",returns:" <span>Produkt</span> med fler  <span>faktorer</span> ",effect:"På ett sätt är detta en  <span>komplicerande operation</span>, eftersom vi  <span>introducerar</span> en ny  <span>faktor</span>  <span>-1</span>. Men fördelarna med att de inre  <span>faktorerna</span> inte är gömda i  <span>negationen</span> väger tyngre, så detta är en  <span>förenklande operation</span>. ",steps:{firstflattennegprod:"Först låter vi  <span>negationen</span> bli en  <span>faktor</span> i den inre  <span>produkten</span>.",thenweabsorbprod:"Sedan absorberar vi alla den inre  <span>produktens</span>  <span>faktorer</span>, som nu också innefattar en  <span>faktor</span>  <span>-1</span>, i den yttre."}},en:{name:"absorb negative product factor",explanation:"If a  <span>product</span> has a  <span>factor</span> that is a  <span>negative product</span>, we can lift away the  <span>negation</span> and let that and the  <span>factors</span> of the inner  <span>product</span> become part of the outer  <span>product</span>. ",targets:" <span>Product</span> with  <span>negative product factor</span> ",returns:" <span>Product</span> with more  <span>factors</span> ",effect:"In a way this is a  <span>complicating operation</span>, as we are  <span>introducing</span> a new faktor  <span>-1</span>. But the advantages of not having the inner  <span>factors</span> hidden in the  <span>negation</span> are many, so this  <span>operation</span> is considered to be  <span>simplifying</span>. ",steps:{firstflattennegprod:"First we let the  <span>negation</span> become a  <span>factor</span> in the inner  <span>product</span>.",thenweabsorbprod:"Then we let the outer  <span>product</span> absorb the  <span>factors</span> of the inner, now also including a  <span>factor</span>  <span>-1</span>."}}},collapseNegOneFac:{id:71,sv:{name:"kollapsa faktor -1",explanation:"Istället för att ha  <span>-1</span> som en fristående  <span>faktor</span> så kan vi använda den till att negera en annan  <span>faktor</span> i  <span>produkten</span>. ",targets:"en  <span>produkt</span> med  <span>faktor</span>  <span>-1</span> ",returns:"en  <span>produkt</span> med en  <span>faktor</span> färre, eller sista  <span>negativa faktorn</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi får en  <span>faktor</span> färre. Visserligen är en annan  <span>faktor</span> nu nästlad i en  <span>negation</span>, men det är ofta lättare att hantera. ",steps:{firstgatherfacandnegone:"Först samlar vi  <span>-1</span> och den  <span>faktor</span> vi vill negera till en egen  <span>produkt</span>, för att kunna utföra  <span>negationen</span>.",thennegifythefac:"Vi använder  <span>-1</span> för att negera den andra  <span>faktorn</span>."}},en:{name:"collapse factor -1",explanation:"Instead of having  <span>-1</span> as a  <span>factor</span> of its own, we can use it to negate another  <span>factor</span> in the  <span>product</span>. ",targets:"a  <span>product</span> with  <span>factor</span>  <span>-1</span> ",returns:"a  <span>product</span> with one less  <span>factor</span>, or the last remaining  <span>negative factor</span> ",effect:"This is a  <span>simplifying operation</span>, as we now have one less  <span>factor</span>. Granted, another  <span>factor</span> is now wrapped in a  <span>negation</span>, but that is often easy to handle. ",steps:{firstgatherfacandnegone:"First we group  <span>-1</span> and the  <span>factor</span> we want to negate into a  <span>product</span> of their own, to be able to perform the  <span>negation</span>.",thennegifythefac:"We use  <span>-1</span> to negate the other  <span>factor</span>."}}},flattenNegProd:{id:72,sv:{name:"jämna ut negativ produkt",explanation:"Vi kan låta  <span>negationen</span> av en  <span>produkt</span> bli till en  <span>faktor</span>  <span>-1</span> i  <span>produkten</span>. ",targets:"en  <span>negativ produkt</span> ",returns:"en  <span>produkt</span> med  <span>faktor</span>  <span>-1</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom vi  <span>introducerar</span> en  <span>faktor</span>  <span>-1</span>. Visserligen är  <span>produktens</span>  <span>faktorer</span> inte längre dolda i en  <span>negation</span>, men det är sällan ett problem när  <span>produkten</span> är fristående. ",steps:{extractnegone:"Först expanderar vi  <span>negationen</span>, så att vi får en  <span>produkt</span> av  <span>faktorn</span>  <span>-1</span> och en inre  <span>produktfaktor</span>.",flattenresult:"Sedan låter vi den inre  <span>produkten</span> uppgå i den yttre, så vi får en enda  <span>produkt</span> av  <span>-1</span> och ursprungsfaktorerna."}},en:{name:"flatten negative product",explanation:"We can let the  <span>negation</span> around a  <span>product</span> become a  <span>factor</span>  <span>-1</span> inside the  <span>product</span>. ",targets:"a  <span>negative product</span> ",returns:"a  <span>product</span> with  <span>factor</span>  <span>-1</span> ",effect:"This is a compicating  <span>operation</span>, since we  <span>introduce</span> a  <span>factor</span>  <span>-1</span>. The  <span>product</span> is no longer wrapped in a  <span>negation</span>, but that is rarely a problem when the  <span>negative product</span> isn't itself a  <span>factor</span>. ",steps:{extractnegone:"First we expand the  <span>negation</span> so that we get a  <span>product</span> of  <span>factor</span>  <span>-1</span> and a  <span>product factor</span>.",flattenresult:"Then we absorb the inner  <span>product</span> into the outer, making one single  <span>product</span> of  <span>-1</span> and the original  <span>factors</span>."}}},moveNegBetweenFacs:{id:111,sv:{name:"flytta negation mellan faktorer",explanation:"Vi kan flytta en  <span>negation</span> från en  <span>faktor</span> till en annan. ",targets:"en  <span>produkt</span> med  <span>negativ faktor</span> ",returns:"en  <span>produkt</span> med annan  <span>negativ faktor</span> ",effect:"Denna  <span>operation</span> är egentligen endast  <span>omformulerande</span>, eftersom vi bara har flyttat  <span>negationen</span> och ingenting annat har förändrats. Men om vi kan flytta  <span>negationen</span> till ett nummer från ett objekt som inte är ett nummer, då är  <span>operationen</span>  <span>förenklande</span> eftersom  <span>negativa tal</span> är lättare att hantera än exempelvis  <span>negativa</span>  <span>variabler</span>. Därför är denna  <span>operation</span>  <span>villkorligt förenklande</span>. ",steps:{firstweextractthenegation:"Först expanderar vi den  <span>negativa faktorn</span>, så att vi får en ny  <span>faktor</span>  <span>-1</span> i  <span>produkten</span>.",movethenegationsowedontchangeorder:"Vi flyttar  <span>faktorn</span>  <span>-1</span> så att vi inte kommer ändra ordning när vi sedan negerar målfaktorn.",thenwenegifytheotherfacinstead:"Sedan använder vi den frigjorda  <span>faktorn</span>  <span>-1</span> för att negera målfaktorn istället."}},en:{name:"move negation between factors",explanation:"We can move a  <span>negation</span> from one  <span>factor</span> to another. ",targets:"a  <span>product</span> with  <span>negative factor</span> ",returns:"a  <span>product</span> with another  <span>negative factor</span> ",effect:"This  <span>operation</span> is essentially merely  <span>rephrasing</span>, since have just moved the  <span>negation</span> and nothing else has changed. But if we can move the  <span>negation</span> to a  <span>number</span> from a non-number object, then the  <span>operation</span> is  <span>simplifying</span> since a  <span>negative number</span> is easier to deal with than for example a  <span>negative</span>  <span>variable</span>. Thus this  <span>operation</span> is  <span>conditionally simplifying</span>. ",steps:{firstweextractthenegation:"First we expand the  <span>negative factor</span>,  <span>introducing</span> a new  <span>factor</span>  <span>-1</span> into the  <span>product</span>.",movethenegationsowedontchangeorder:"We move the  <span>factor</span>  <span>-1</span> so that we won't change the order when we later negate the target  <span>factor</span>.",thenwenegifytheotherfacinstead:"Then we use the freed  <span>factor</span>  <span>-1</span> to negate the target  <span>factor</span> instead!"}}},moveNegFromProdToFac:{id:112,sv:{name:"flytta produktnegation till faktor",explanation:"Istället för att ha en  <span>negativ produkt</span>, så kan vi flytta  <span>negationen</span> till en av dess  <span>faktorer</span>. ",targets:"en  <span>negativ produkt</span> ",returns:"en  <span>produkt</span> ",effect:"Detta är en  <span>villkorligt förenklande</span>  <span>operation</span>, då det anses  <span>förenklande</span> om vi kan flytta  <span>negationen</span> till en  <span>talfaktor</span>. Annars är det endast en  <span>omformulerande</span>  <span>operation</span>. ",steps:{wefreeprodnegation:"Först frigör vi  <span>negationen</span> från  <span>produkten</span>.",andflattentoproduct:"Sedan plattar vi ut så att  <span>faktorn</span>  <span>-1</span> nu ingår i  <span>produkten</span>.",thennegifythefac:"Slutligen sätter vi  <span>negationen</span> över den utvalda  <span>faktorn</span>."}},en:{name:"move negation from product to factor",explanation:"Instead of having a  <span>negative product</span>, we can move the  <span>negation</span> to one of the  <span>factors</span>. ",targets:"a  <span>negative product</span> ",returns:"a  <span>product</span> ",effect:"This is a  <span>conditionally simplifying operation</span>, as it is considered  <span>simplifying</span> if we can move the  <span>negation</span> to a  <span>number factor</span>. Otherwise it is merely  <span>rephrasing</span>. ",steps:{wefreeprodnegation:"First we free the  <span>negation</span> from the  <span>product</span>.",andflattentoproduct:"Then we  <span>flatten</span> the result, so that the  <span>factor</span>  <span>-1</span> now is part of the original  <span>negative product</span>.",thennegifythefac:"Finally we move the  <span>negation</span> to the selected  <span>factor</span>."}}},moveNegFromFacToProd:{id:113,sv:{name:"flytta faktornegation till produkt",explanation:"Vi kan flytta en  <span>negation</span> från en  <span>faktor</span> till att omfatta hela  <span>produkten</span>. ",targets:"en  <span>produkt</span> med  <span>negativ faktor</span> ",returns:"en  <span>negativ produkt</span> ",effect:"Detta är en  <span>omformulerande</span>  <span>operation</span>, eftersom vi endast flyttat en  <span>negation</span>. ",steps:{wefreenegtobemoved:"Först expanderar vi  <span>negationen</span> vi skall flytta.",andcollecttheotherfacs:"Nu grupperar vi de övriga  <span>faktorerna</span> i en  <span>produktfaktor</span>.",finallycollapsethenegoverthem:"Slutligen  <span>kollapsar</span> vi  <span>negationen</span> över de samlade  <span>faktorerna</span>."}},en:{name:"move negation from factor to product",explanation:"We can move a  <span>negation</span> from a  <span>factor</span> to envelop the whole  <span>product</span>. ",targets:"a  <span>product</span> with  <span>negative factor</span> ",returns:"a  <span>negative product</span> ",effect:"This is a  <span>rephrasing operation</span>, since all we have done is moved a  <span>negation</span> around. ",steps:{wefreenegtobemoved:"First we expand the  <span>negation</span> to be moved.",andcollecttheotherfacs:"Now we group the remaining  <span>factors</span> in a  <span>product factor</span>.",finallycollapsethenegoverthem:"Finally we  <span>collapse</span> the  <span>negation</span> over the grouped  <span>factors</span>."}}},moveNegBetweenFloorsInFrac:{id:114,sv:{name:"flytta negation inuti kvot",explanation:"En  <span>negation</span> kan flyttas från en  <span>faktor i täljaren</span> till en  <span>faktor i nämnaren</span> eller tvärtom. ",targets:"en  <span>kvot</span> med  <span>negativ faktor</span> i  <span>täljare</span> eller  <span>nämnare</span> ",returns:"en  <span>kvot</span> med  <span>negativ faktor</span> i  <span>nämnare</span> eller  <span>täljare</span> ",effect:"Detta är en  <span>omformulerande</span>  <span>operation</span>, eftersom vi endast flyttat en  <span>negation</span>. ",steps:{weprolongwithnegone:"Vi förlänger  <span>kvoten</span> med  <span>-1</span>, som vi kommer använda för att  <span>kollapsa</span>  <span>negationen</span> vi vill flytta.",flattensourcenumer:"Vi  <span>jämnar ut</span>  <span>täljaren</span> för att kunna  <span>kollapsa</span>  <span>negationen</span> som skall flyttas till  <span>nämnaren</span>.",flattensourcedenom:"Vi  <span>jämnar ut</span>  <span>nämnaren</span> för att kunna  <span>kollapsa</span>  <span>negationen</span> som skall flyttas till  <span>täljaren</span>.",removethefactobemoved:"Nu  <span>kollapsar</span> vi  <span>negationen</span> som skall flyttas med hjälp av den  <span>introducerade</span>  <span>faktorn</span>  <span>-1</span>.",flattendestnumer:" <span>Täljaren</span> måste  <span>jämnas ut</span> för att kunna flytta in den  <span>introducerade</span>  <span>negationen</span>.",flattendestdenom:" <span>Nämnaren</span> måste  <span>jämnas ut</span> för att kunna flytta in den  <span>introducerade</span>  <span>negationen</span>.",insteadnegifytargetfac:"Slutligen negerar vi målfaktorn, och vi är klara!"}},en:{name:"move negation inside fraction",explanation:"A  <span>negation</span> can be moved from a  <span>factor</span> in the  <span>numerator</span> to a  <span>factor</span> in the  <span>denominator</span> or reverse. ",targets:"a  <span>fraction</span> with a  <span>negative factor</span> in the  <span>numerator</span> or  <span>denominator</span> ",returns:"a  <span>fraction</span> with a  <span>negative factor</span> in the  <span>denominator</span> or  <span>numerator</span> ",effect:"This is just a  <span>rephrasing operation</span>, as all we have done is moved a  <span>negation</span> around. ",steps:{weprolongwithnegone:"First we multiply the  <span>fraction</span> with a  <span>factor</span>  <span>-1</span>, which we will use to  <span>collapse</span> the  <span>negation</span> to me moved.",flattensourcenumer:"We  <span>flatten</span> the  <span>numerator</span> to be able to  <span>collapse</span> the  <span>negation</span> we're looking to move to the  <span>denominator</span>.",flattensourcedenom:"We  <span>flatten</span> the  <span>denominator</span> to be able to  <span>collapse</span> the  <span>negation</span> we're looking to move to the  <span>numerator</span>.",removethefactobemoved:"Now we  <span>collapse</span> the  <span>negation</span> to me moved using the  <span>introduced</span>  <span>factor</span>  <span>-1</span>.",flattendestnumer:"The  <span>numerator</span> must be flattened in preparation to move in the  <span>negation</span>.",flattendestdenom:"The  <span>denominator</span> must be flattened in preparation to move in the  <span>negation</span>.",insteadnegifytargetfac:"Finally we negate the target  <span>factor</span>, and we are done!"}}},moveNegFromFloorFacToFrac:{id:115,sv:{name:"lyft upp negation till kvot",explanation:"En  <span>negation</span> kan flyttas upp från en  <span>faktor</span> inuti en  <span>kvot</span> till att istället omfatta själva  <span>kvoten</span>. ",targets:"en  <span>kvot</span> med  <span>negativ faktor</span> ",returns:"en  <span>negativ kvot</span> ",effect:"Detta är en  <span>omformulerande</span>  <span>operation</span>, eftersom vi endast flyttat en  <span>negation</span>. ",steps:{removethefactobemoved:"Först expanderar vi  <span>negationen</span> som vi skall flytta.",liftoutnegfromfrac:"Nu bryter vi ut  <span>negationen</span> från  <span>kvoten</span>.",moveupnegfromdenom:"Vi flyttar den från  <span>nämnaren</span> till  <span>täljaren</span>.",finallyenvelopfrac:"Slutligen så låter vi  <span>negationen</span> omfamna  <span>kvoten</span>!"}},en:{name:"lift up negation to fraction",explanation:"A  <span>negation</span> can be moved up from a  <span>factor</span> inside a  <span>fraction</span> to instead envelop the whole  <span>fraction</span>. ",targets:"a  <span>fraction</span> with  <span>negative factor</span> ",returns:"a  <span>negative fraction</span> ",effect:"This is a  <span>rephrasing operation</span>, since all we have done is moved a  <span>negation</span> around. ",steps:{removethefactobemoved:"First we expand the  <span>negation</span> we want to move.",liftoutnegfromfrac:"Now we extract that  <span>negation</span> from the  <span>fraction</span>.",moveupnegfromdenom:"We move it up from the  <span>denominator</span>.",finallyenvelopfrac:"Finally we let the  <span>negation</span> envelop the original  <span>fraction</span>!"}}},moveNegFromFracToFloorFac:{id:116,sv:{name:"flytta in negation i kvot",explanation:"En  <span>negation</span> kan flyttas från en  <span>kvot</span> till en  <span>faktor</span> inuti  <span>kvoten</span>. ",targets:"en  <span>negativ kvot</span> ",returns:"en  <span>kvot</span> med  <span>negativ faktor</span> ",effect:"Detta är en  <span>omformulerande</span>  <span>operation</span>, eftersom vi endast flyttat en  <span>negation</span>. ",steps:{expandnegtobemoved:"Först expanderar vi  <span>negationen</span>.",turntofrac:"Vi förvandlar  <span>negationen</span> till en  <span>kvot</span>.",preparemovingnegtodenom:"Eftersom  <span>negationen</span> ska till  <span>nämnaren</span> så måste vi flytta ned den. Vi börjar med att förlänga den nya  <span>kvoten</span> med  <span>-1</span>.",collapsenumernegone:"Vi tar sedan bort  <span>negationen</span> i  <span>täljaren</span>.",cleanupdenom:"Sedan städar vi upp i  <span>nämnaren</span>. Nu har vi  <span>negationen</span> i  <span>nämnaren</span>, redo att multipliceras in i ursprungskvoten!",mergenegonesintoourfraction:"Nu slår vi ihop  <span>kvoterna</span>!",removeresidue:"Vi  <span>tar bort</span>  <span>faktorn</span>  <span>1</span> som uppstod efter ihopslagningen.",insteadnegifytargetfacnumer:"Slutligen låter vi  <span>negationen</span> omfatta hela  <span>täljaren</span>, och vi är klara!",insteadnegifytargetfacdenom:"Slutligen låter vi  <span>negationen</span> omfatta hela  <span>nämnaren</span>, och vi är klara!",preparetonegifyfac:"Vi  <span>jämnar ut</span>  <span>produkten</span> så att vi kan flytta in  <span>negationen</span> till rätt  <span>faktor</span>.",negifychosenfac:"Slutligen flyttar vi  <span>negationen</span> till  <span>faktorn</span>, och vi är klara!"}},en:{name:"sink negation into fraction",explanation:"A  <span>negation</span> can be moved from a  <span>fraction</span> to a  <span>factor</span> inside the  <span>fraction</span> ",targets:"a  <span>negative fraction</span> ",returns:"a  <span>fraction</span> with a  <span>negative factor</span> ",effect:"This is a  <span>rephrasing operation</span>, since all we have done is moved a  <span>negation</span> around. ",steps:{expandnegtobemoved:"First we expand the  <span>negation</span>.",turntofrac:"We turn the  <span>negation</span> to a  <span>fraction</span>.",preparemovingnegtodenom:"Since then  <span>negation</span> is going to the  <span>denominator</span>, we have to move it down. To start we prolong the new  <span>fraction</span> with  <span>-1</span>.",collapsenumernegone:"We then  <span>remove</span> the  <span>numerator</span>  <span>negation</span>.",cleanupdenom:"Now we clean up the  <span>denominator</span>, and the  <span>negation</span> has been successfully lowered.",mergenegonesintoourfraction:"Now we  <span>merge</span> the  <span>fractions</span>!",removeresidue:"We  <span>remove</span> the  <span>factor</span>  <span>1</span> that appeared in the merging.",insteadnegifytargetfacnumer:"Finally we let the  <span>negation</span> envelop the  <span>numerator</span>, and we are done!",insteadnegifytargetfacdenom:"Finally we let the  <span>negation</span> envelop the  <span>denominator</span>, and we are done!",preparetonegifyfac:"We  <span>flatten</span> the  <span>product</span> so we can move the  <span>negation</span> to the target  <span>factor</span>.",negifychosenfac:"Finally we move the  <span>negation</span> to the target  <span>factor</span>, and we are done!"}}},collapseNegSum:{id:123,sv:{name:"distribuera summas negation",explanation:"Vi kan expandera  <span>negationen</span> kring en  <span>negativ summa</span> och  <span>distribuera</span> in den i  <span>summan</span>. ",targets:"en  <span>negativ summa</span> ",returns:"en  <span>summa</span> ",effect:"Detta är  <span>villkorligt förenklande</span>, eftersom vi bara tjänar på det om minst hälften av  <span>termerna</span> i  <span>summafaktorn</span> är  <span>negativa</span>. Om så är fallet så blir det totala antalet  <span>negationer</span> färre efter  <span>distributionen</span>! ",steps:{firstexpandneg:"Först expanderar vi  <span>negationen</span>, så att vi får en  <span>negativ faktor</span> vi kan  <span>distribuera</span> in i  <span>summan</span>.",thenmirrorthesum:"Sedan distribuerar vi in  <span>negationen</span> och  <a href='#' class='wordlink' linkto='swapsign'>byter tecken</a> på alla  <span>termer</span>!"}},en:{name:"distribute sum negation",explanation:"We can expand the  <span>negation</span> around a  <span>negative sum</span> and  <span>distribute</span> it into the  <span>sum</span>. ",targets:"a  <span>negative sum</span> ",returns:"a  <span>sum</span> ",effect:"This is a  <span>conditionally simplifying operation</span>, since we only gain from it if at least half of the  <span>terms</span> in the  <span>sum factor</span> were  <span>negative</span> before the  <span>distribution</span>. If they were, that means that the total  <span>number</span> of  <span>negations</span> after we are done is less than before! ",steps:{firstexpandneg:"First we expand the  <span>negation</span>, giving us a  <span>negative factor</span> to  <span>distribute</span>.",thenmirrorthesum:"Now we  <span>distribute</span> the  <span>negation</span> into the  <span>sum factor</span>, and switch  <span>negation</span> signs for all  <span>terms</span>!"}}},mirrorSumWithNegInFrac:{id:133,sv:{name:"distribuera negtion i kvot",explanation:"Om en  <span>kvot</span> har en  <span>summa</span> på ena  <span>våningen</span> och en  <span>negation</span> på den andra, så kan vi flytta  <span>negationen</span> till samma  <span>våning</span> och  <span>distribuera</span> in den i  <span>summan</span>. ",targets:"en  <span>kvot</span> med  <span>summafaktor</span> på ena  <span>våningen</span> och en  <span>negativ faktor</span> på andra ",returns:"en  <span>kvot</span> utan  <span>negativ faktor</span> ",effect:"Detta är  <span>villkorligt förenklande</span>, eftersom vi bara tjänar på det om minst hälften av  <span>termerna</span> i  <span>summafaktorn</span> är  <span>negativa</span>. Om så är fallet så blir det totala antalet  <span>negationer</span> färre efter  <span>distributionen</span>! ",steps:{movenegtosumfloor:"Först flyttar vi  <span>negationen</span> till samma  <span>våning</span> som  <span>summan</span>.",mirrorthesum:"Sedan distribuerar vi in  <span>negationen</span> i  <span>summan</span> genom att  <a href='#' class='wordlink' linkto='swapsign'>byta tecken</a> på alla  <span>termer</span>!"}},en:{name:"distribute negation in fraction",explanation:"If a  <span>fraction</span> has a  <span>sum factor</span> on one  <span>floor</span>, and a  <span>negative factor</span> on the other, we can move the  <span>negation</span> to the same  <span>floor</span> and  <span>distribute</span> it into the  <span>sum</span>. ",targets:"a  <span>fraction</span> with  <span>sum factor</span> on one  <span>floor</span> and a  <span>negative factor</span> on the other ",returns:"a  <span>fraction</span> without  <span>negative factor</span> ",effect:"This is a  <span>conditionally simplifying operation</span>, since we only gain from it if at least half of the  <span>terms</span> in the  <span>sum factor</span> were  <span>negative</span> before the  <span>distribution</span>. If they were, that means that the total  <span>number</span> of  <span>negations</span> after we are done is less than before! ",steps:{movenegtosumfloor:"First we move the  <span>negation</span> to the same  <span>floor</span> as the  <span>sum</span>.",mirrorthesum:"Then we  <span>distribute</span> the  <span>negation</span> into the  <span>sum</span> by switching  <span>negation</span> signs for all  <span>terms</span>!"}}},mirrorSumWithNegInProd:{id:130,sv:{name:"distribuera negation i summafaktor",explanation:"Om en  <span>produkt</span> innehåller en  <span>negativ faktor</span> och en  <span>summafaktor</span>, så kan vi genom  <span>distribution</span> flytta  <span>negationen</span> från  <span>faktorn</span> till varje  <span>term</span> i  <span>summafaktorn</span>. ",targets:"en  <span>produkt</span> med  <span>negativ faktor</span> och  <span>summafaktor</span> ",returns:"en  <span>produkt</span> utan  <span>negativ faktor</span> ",effect:"Detta är  <span>villkorligt förenklande</span>, eftersom vi bara tjänar på det om minst hälften av  <span>termerna</span> i  <span>summafaktorn</span> är  <span>negativa</span>. Om så är fallet så blir det totala antalet  <span>negationer</span> färre efter  <span>distributionen</span>! ",steps:{expandneg:"Först expanderar vi  <span>negationen</span> vi vill  <span>distribuera</span>.",movenegoneintosum:"Vi distribuerar in  <span>negationen</span> i  <span>summafaktorn</span>. Nu gör vi varje  <span>term</span> positiv eller  <span>negativ</span>.",negbecomespos:"Denna  <span>term</span> var redan  <span>negativ</span> och blev därför positiv!",negifyterm:"Denna  <span>term</span> var positiv så den blev  <span>negativ</span>."}},en:{name:"distribute negation into sum factor",explanation:"If a  <span>product</span> contains a  <span>negative factor</span> and a  <span>sum factor</span>, we can use  <span>distribution</span> to move the  <span>negation</span> from the  <span>factor</span> onto every  <span>term</span> in the  <span>sum factor</span>. ",targets:"a  <span>product</span> with a  <span>negative factor</span> and a  <span>sum factor</span> ",returns:"a  <span>product</span> without  <span>negative factor</span> ",effect:"This is a  <span>conditionally simplifying operation</span>, since we only gain from it if at least half of the  <span>terms</span> in the  <span>sum factor</span> were  <span>negative</span> before the  <span>distribution</span>. If they were, that means that the total  <span>number</span> of  <span>negations</span> after we are done is less than before! ",steps:{expandneg:"First we expand the  <span>negation</span> to  <span>distribute</span>.",movenegoneintosum:"We  <span>distribute</span> the  <span>negation</span> into the  <span>sum factor</span>. Now we will make every  <span>term</span> positive or  <span>negative</span>.",negbecomespos:"This  <span>term</span> was  <span>negative</span>, so it now becomes positive.",negifyterm:"This  <span>term</span> was positive, so it now becomes  <span>negative</span>."}}},addTwoNegOneFacsToExpression:{id:131,sv:{name:"introducera två faktorer -1",explanation:"Utan att förändra en  <span>produkts</span> värde så kan vi  <span>introducera</span> två stycken  <span>faktorer</span>  <span>-1</span>. ",targets:"alla  <span>matematiska uttryck</span> ",returns:"en  <span>produkt</span> av ursprungsuttrycket med två nya  <span>faktorer</span>  <span>-1</span> ",effect:"Detta är en  <span>komplicerande operation</span> eftersom vi har  <span>introducerat</span> två nya  <span>faktorer</span>. ",steps:{multwithonetoturntonegones:"Först  <span>introducerar</span> vi en  <span>faktor</span>  <span>1</span>, som vi sedan skall expandera.",splitonetotwonegones:"Nu  <span>faktoriserar</span> vi  <span>faktorn</span>  <span>1</span> till en  <span>produkt</span> av två  <span>faktorer</span>  <span>-1</span>.",flattentosingleprod:"Slutligen låter vi de nya  <span>faktorerna</span> uppgå i den urpsrungliga  <span>produkten</span>."}},en:{name:"introduce two factors -1",explanation:"Without changing the value of a  <span>product</span>, we can  <span>introduce</span> two  <span>factors</span>  <span>-1</span>. ",targets:"any  <span>mathematical expression</span> ",returns:"a  <span>product</span> with the original  <span>expression</span> and two new  <span>factors</span>  <span>-1</span> ",effect:"This is a  <span>complicating operation</span>, since we have  <span>introduced</span> two new  <span>factors</span>  <span>-1</span>. ",steps:{multwithonetoturntonegones:"First we  <span>introduce</span> a  <span>factor</span>  <span>1</span>, which we will then expand.",splitonetotwonegones:"Now we  <span>factorise</span> the  <span>factor</span>  <span>1</span> into a  <span>product</span> of two  <span>factors</span>  <span>-1</span>.",flattentosingleprod:"Finally we let the new  <span>factors</span> become part of the original  <span>product</span>."}}},oneDenomFracToNumer:{id:74,sv:{name:"ta bort nämnare 1",explanation:"Att dela ett  <span>uttryck</span> med  <span>1</span> förändrar inte  <span>uttryckets</span> värde. Därför  <span>nämnare</span> bestående av  <span>talet 1</span>  <span>tas bort</span>, vilket gör att  <span>kvoten</span>  <span>kollapsas</span> till att endast bestå av  <span>täljaren</span>! ",targets:" <span>Kvot</span> med  <span>nämnare</span>  <span>1</span> ",returns:" <span>Täljaren</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi  <span>tagit bort</span>  <span>nämnaren</span>. "},en:{name:"remove denominator 1",explanation:"Dividing an  <span>expression</span> by  <span>1</span> does not change its value. Therefore we can  <span>remove</span> a  <span>denominator</span> consisting of the  <span>number 1</span>, which will cause the  <span>fraction</span> to  <span>collapse</span> into becoming just the  <span>numerator</span>. ",targets:" <span>Fraction</span> with  <span>denominator</span>  <span>1</span> ",returns:"The  <span>numerator</span> ",effect:"This is a  <span>simplifying operation</span>, since we have  <span>removed</span> the  <span>denominator</span>. "}},sameNumerDenomFracToOne:{id:75,sv:{name:"kollapsa kvot till 1",explanation:"Eftersom en  <span>kvot</span> ställer frågan 'hur många gånger får  <span>nämnaren</span> plats i täljaren', så blir svaret alltid  <span>1</span> när  <span>täljaren</span> och  <span>nämnaren</span> är lika. ",targets:"en  <span>kvot</span> med identisk  <span>täljare</span> och  <span>nämnare</span> ",returns:" <span>heltalet</span>  <span>1</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi ersatt en  <span>kvot</span> med  <span>1</span>. "},en:{name:"collapse fraction to 1",explanation:"Since a  <span>fraction</span> asks the question 'how many times does the  <span>denominator</span> fit inside the numerator', the answer is always  <span>1</span> if the  <span>numerator</span> and  <span>denominator</span> are equal. ",targets:"a  <span>fraction</span> with identical  <span>numerator</span> and  <span>denominator</span> ",returns:"the  <span>integer</span>  <span>number 1</span> ",effect:"This is a  <span>simplifying operation</span>, since we have replaced a  <span>fraction</span> with  <span>1</span>. "}},biFracProdToBiProdFrac:{id:76,sv:{name:"slå ihop produkt av två kvoter",explanation:"Att multiplicera två  <span>kvotfaktorer</span> innebär att man slår ihop dem till en ny  <span>kvot</span>, där  <span>täljaren</span> och  <span>nämnaren</span> är  <span>produkter</span> av de ingående  <span>kvoternas</span>  <span>täljare</span> och  <span>nämnare</span>. ",targets:" <span>Produkt</span> av två  <span>kvoter</span> ",returns:" <span>Kvot</span> av  <span>produkter</span> ",effect:"Detta är en  <span>förenklande operation</span>. Visserligen är det totala antalet objekt detsamma, men det är lättare att förenkla i en  <span>kvot</span> av  <span>produkter</span> än i en  <span>produkt</span> av  <span>faktorer</span>. "},en:{name:"merge product of two fractions",explanation:"To multiply two  <span>fraction factors</span>, we  <span>merge</span> them into a new  <span>fraction</span> where the  <span>numerator</span> is a  <span>product</span> of the  <span>numerators</span> of the  <span>fraction factors</span>, and same for the  <span>denominator</span>. ",targets:" <span>Product</span> of two  <span>fractions</span> ",returns:" <span>Fraction</span> of  <span>products</span> ",effect:"This is a  <span>simplifying operation</span>. The total  <span>number</span> of objects is the same, but it is easier to  <span>simplify</span> in a  <span>fraction</span> of  <span>products</span> than in a  <span>product</span> of  <span>fractions</span>. "}},zeroDenomFracToUndef:{id:77,sv:{name:"förbjud kvot med nämnare 0",explanation:"En  <span>kvot</span> representerar konceptet  <span>division</span>, och  <span>division</span> är inte definierat när  <span>nämnaren</span> är  <span>0</span>.  <span>Nämnaren</span> berättar i hur många högar vi skall dela upp  <span>täljaren</span>, men det går inte att dela upp något i  <span>0</span> högar! Därför kan vi aldrig ha  <span>0</span> i  <span>nämnaren</span>, och om vi ändå har det så är  <span>kvoten</span>  <span>odefinierad</span>. ",targets:"en  <span>kvot</span> med  <span>nämnare</span>  <span>0</span> ",returns:" <span>odefinierat</span> ",effect:"Detta är en  <span>integritetsoperation</span>, då den omvandlar ogiltiga  <span>kvoter</span> till  <span>odefinierat</span>. "},en:{name:"forbid fraction with denominator 0",explanation:"A  <span>fraction</span> represents the concept of  <span>division</span>, and  <span>division</span> is not defined for  <span>denominator</span>  <span>0</span>. The  <span>denominator</span> states into how many piles we should  <span>split</span> the  <span>numerator</span>, but it is not possible to  <span>split</span> something into  <span>0</span> piles! Therefore we can never have  <span>0</span> in the  <span>denominator</span>, and if we do, the  <span>fraction</span> is  <span>undefined</span>. ",targets:"a  <span>fraction</span> with  <span>denominator</span>  <span>0</span> ",returns:" <span>undefined</span> ",effect:"This is an  <span>integrity operation</span>, as it transforms illegal  <span>fractions</span> to  <span>undefined</span>. "}},divideByOne:{id:78,sv:{name:"introducera nämnare 1",explanation:"Att dela med  <span>1</span> påverkar inte ett  <span>uttrycks</span> värde, så vi kan förvandla ett  <span>uttryck</span> till en  <span>kvot</span> genom att  <span>introducera</span> en  <span>nämnare</span>  <span>1</span>. ",targets:"ett  <span>matematiskt uttryck</span> ",returns:"en  <span>kvot</span> med  <span>nämnare</span>  <span>1</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom vi har  <span>introducerat</span> en  <span>nämnare</span>. "},en:{name:"introduce denominator 1",explanation:"Dividing by  <span>1</span> does not affect the value of an  <span>expression</span>. Therefore we can turn any  <span>expression</span> to a  <span>fraction</span> by  <span>introducing</span> a  <span>denominator</span>  <span>1</span>. ",targets:"a  <span>mathematical expression</span> ",returns:"a  <span>fraction</span> with  <span>denominator</span>  <span>1</span> ",effect:"This is a  <span>complicating operation</span>, since we have  <span>introduced</span> a  <span>denominator</span>. "}},oneToSameNumerDenomFrac:{id:79,sv:{name:"dela upp 1 till kvot",explanation:"Eftersom en  <span>kvot</span> med identisk  <span>täljare</span> och  <span>nämnare</span> är lika med  <span>1</span>, så kan  <span>talet 1</span> delas upp i en  <span>kvot</span> med identisk  <span>täljare</span> och  <span>nämnare</span>. ",targets:" <span>heltalet</span>  <span>1</span> ",returns:"en  <span>kvot</span> med identisk  <span>täljare</span> och  <span>nämnare</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom vi  <span>delade upp</span> ett  <span>tal</span> i en  <span>kvot</span>. "},en:{name:"split 1 to fraction",explanation:"Since a  <span>fraction</span> with identical  <span>numerator</span> and  <span>denominator</span> equals  <span>1</span>, the  <span>number 1</span> can reversely be  <span>split</span> into a  <span>fraction</span> with identical  <span>numerator</span> and  <span>denominator</span>. ",targets:"the  <span>integer</span>  <span>1</span> ",returns:"a  <span>fraction</span> with identical  <span>numerator</span> and  <span>denominator</span> ",effect:"This is a  <span>complicating operation</span>, since we  <span>split</span> a  <span>number</span> into a  <span>fraction</span>. "}},biProdFracToBiFracProd:{id:80,sv:{name:"dela upp kvot av produkter",explanation:"Om vi har en  <span>kvot</span> där både  <span>täljare</span> och  <span>nämnare</span> är  <span>produkter</span> med två  <span>faktorer</span> så kan vi  <span>faktorisera</span>  <span>kvoten</span> till en  <span>produkt</span> av två  <span>kvoter</span>, där  <span>kvoterna</span> får en  <span>faktor</span> var från ursprungskvotens  <span>täljare</span> och  <span>nämnare</span>. ",targets:"en  <span>kvot</span> med  <span>produkt</span> av två  <span>faktorer</span> i både  <span>täljare</span> och  <span>nämnare</span> ",returns:"en  <span>produkt</span> med två  <span>kvotfaktorer</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom en  <span>produkt</span> av  <span>kvoter</span> är svårare att förenkla än en  <span>kvot</span> av  <span>produkter</span>. "},en:{name:"split fraction of products",explanation:"If we have a  <span>fraction</span> were both the  <span>numerator</span> and the  <span>denominator</span> are  <span>products</span>, we can  <span>factorise</span> that  <span>fraction</span> into a  <span>product</span> of two  <span>fractions</span>. Each of those  <span>fractions</span> will get one  <span>factor</span> each from the  <span>numerator</span> and  <span>denominator</span> of the original  <span>fraction</span>. ",targets:"a  <span>fraction</span> with a  <span>product</span> with two  <span>factors</span> as  <span>numerator</span> and  <span>denominator</span> ",returns:"a  <span>product</span> with two  <span>fraction factors</span> ",effect:"This is a  <span>complicating operation</span>, since a  <span>product</span> of  <span>fractions</span> is harder to  <span>simplify</span> than a  <span>fraction</span> of  <span>products</span>. "}},multFacsIntoFrac:{id:82,sv:{name:"multiplicera in faktorer i kvotfaktor",explanation:"Om en  <span>produkt</span> innehåller en  <span>kvotfaktor</span>, så kan vi flytta övriga  <span>faktorer</span> till  <span>kvotens</span>  <span>täljare</span>. ",targets:"en  <span>produkt</span> med  <span>kvotfaktor</span> (som kan vara  <span>negativ</span>) ",returns:"en  <span>produkt</span> med färre  <span>faktorer</span>, eller endast  <span>kvoten</span> om samtliga övriga  <span>faktorer</span> multiplicerades in ",effect:"Detta är en  <span>förenklande operation</span>, eftersom det är lättare att hantera en  <span>kvot</span> av  <span>produkter</span> än en  <span>produkt</span> med  <span>kvoter</span>. ",steps:{moveneg:"Vi flyttar först  <span>negationen</span> från  <span>kvotfaktorn</span> så att vi fritt kan multiplicera in i  <span>täljaren</span>.",groupselectedfacs:"Först grupperar vi de valda  <span>faktorerna</span> i en  <span>produktfaktor</span>.",turnchoicetofrac:"Vi förvandlar de valda  <span>faktorerna</span> till en  <span>kvot</span> genom att dela med  <span>1</span>.",mergefracs:"Nu multiplicerar vi ihop de två  <span>kvotfaktorerna</span>.",removeonedenom:"Vi  <span>tar bort</span>  <span>faktorn</span>  <span>1</span> som utgjorde vår tillfälliga  <span>nämnare</span>.",removeoneinnumer:"Vi  <span>tar bort</span>  <span>faktorn</span>  <span>1</span> från  <span>täljaren</span>.",flatteningprod:"Vi  <span>jämnar ut</span> täljarprodukten."}},en:{name:"multiply factors into fraction factor",explanation:"If a  <span>product</span> contains a  <span>fraction factor</span>, the other  <span>factors</span> can be moved into the  <span>fraction numerator</span>. ",targets:"a  <span>product</span> with  <span>fraction factor</span> ",returns:"a  <span>product</span> with fewer  <span>factors</span>, or just the  <span>fraction</span> if all other  <span>factors</span> where moved in ",effect:"This is a  <span>simplifying operation</span>, since it is easier to  <span>simplify</span> a  <span>fraction</span> of  <span>products</span> than a  <span>product</span> with  <span>fraction factors</span>. ",steps:{moveneg:"Before we start we move the  <span>negation</span> from the  <span>fraction factor</span> so that we have access to move in the other  <span>factors</span>.",groupselectedfacs:"First we group the selected  <span>factors</span> into a  <span>product factor</span>.",turnchoicetofrac:"We turn the selected  <span>factors</span> into a  <span>fraction</span> by dividing by  <span>1</span>.",mergefracs:"Now we multiply the two  <span>fraction factors</span>.",removeonedenom:"We  <span>remove</span> the  <span>factor</span>  <span>1</span> that served as our temporary  <span>denominator</span>.",removeoneinnumer:"We  <span>remove</span>  <span>factor</span>  <span>1</span> from the  <span>numerator</span>.",flatteningprod:"We  <span>flatten</span> the  <span>numerator</span>  <span>product</span>."}}},flattenFracNumer:{id:83,sv:{name:"kollapsa kvottäljare",explanation:"En  <span>kvot</span> där  <span>täljaren</span> också är en  <span>kvot</span> kan  <span>kollapsas</span>, genom att  <span>täljarkvotens</span>  <span>nämnare</span> blir en  <span>faktor</span> i den yttre  <span>kvotens</span>  <span>nämnare</span>. ",targets:"en  <span>kvot</span> med  <span>täljarkvot</span> ",returns:"en  <span>kvot</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom objektet inte längre är lika djupt nästlat. ",steps:{firstmovenumernegintonumernumer:"Först flyttar vi  <span>negationen</span> från  <span>kvottäljaren</span> till dess  <span>täljare</span>.",extractnumerfrac:"Vi bryter ut  <span>kvottäljaren</span>, så att vi får en  <span>produkt</span> av två  <span>kvoter</span>.",mergeitback:"Sedan multiplicerar vi ihop de två  <span>kvoterna</span>, vilket gör att den tidigare  <span>täljarkvotens</span>  <span>nämnare</span> hamnar i ursprungskvotens  <span>nämnare</span>.",removenumerone:"Slutligen  <span>tar vi bort</span>  <span>talet 1</span> som utgjorde den tillfälliga  <span>täljaren</span>."}},en:{name:"collapse fraction numerator",explanation:"A  <span>fraction</span> with a  <span>fraction numerator</span> can be  <span>collapsed</span>, by letting the  <span>denominator</span> of the  <span>fraction numerator</span> become a  <span>factor</span> in the outer fraction's  <span>denominator</span>. ",targets:" <span>Fraction</span> with  <span>fraction numerator</span> ",returns:" <span>Fraction</span> ",effect:"This is a  <span>simplifying operation</span>, since the object is no longer as deeply nested. ",steps:{firstmovenumernegintonumernumer:"First we move the  <span>negation</span> from the  <span>fraction numerator</span> into its  <span>numerator</span>.",extractnumerfrac:"We extract the  <span>fraction numerator</span>, leaving us with a  <span>product</span> of two  <span>fraction factors</span>.",mergeitback:"Then we  <span>merge</span> the two  <span>fractions</span>  <span>factors</span> into a single  <span>fraction</span>, making the  <span>denominator</span> of the former  <span>numerator</span>  <span>fraction</span> end up in the  <span>denominator</span> of the original  <span>fraction</span>.",removenumerone:"Finally we  <span>remove</span> the  <span>number 1</span> which played the part of temporary  <span>numerator</span>."}}},flattenFracDenom:{id:84,sv:{name:"kollapsa kvotnämnare",explanation:"En  <span>kvot</span> där  <span>nämnaren</span> också är en  <span>kvot</span> kan  <span>kollapsas</span>, genom att  <span>nämnarkvotens</span>  <span>täljare</span> blir en  <span>faktor</span> i den yttre  <span>kvotens</span>  <span>täljare</span>. ",targets:"en  <span>kvot</span> med  <span>nämnarkvot</span> ",returns:"en  <span>kvot</span>, eller endast täljarprodukten ",effect:"Detta är en  <span>förenklande operation</span>, eftersom objektet inte längre är lika djupt nästlat. ",steps:{firstmovedenomnegintodenomnumer:"Först flyttar vi  <span>negationen</span> från  <span>nämnarkvoten</span> till dess  <span>täljare</span>.",prolongwithdenomdenom:"Vi förlänger hela  <span>kvoten</span> med  <span>nämnarkvotens</span>  <span>nämnare</span>.",multintodenomfrac:"Nu multiplicerar vi in den nya  <span>faktorn</span> i  <span>nämnarkvoten</span>.",eliminateindenom:"Nu kan vi förkorta bort den  <span>faktorn</span> i  <span>nämnarkvoten</span>, som därmed  <span>kollapsar</span> till sin  <span>täljare</span>!",collapsedenomfrac:"Eftersom  <span>nämnarkvotens</span>  <span>täljare</span> var  <span>talet 1</span>, så har den nu blivit en  <span>kvot</span> med identisk  <span>täljare</span> och  <span>nämnare</span>! Denna kan vi  <span>kollapsa</span> till  <span>talet 1</span>.",cleanupdenom:"Det ger oss en  <span>kvot</span> med  <span>nämnare</span>  <span>1</span>, vilken vi också kan  <span>kollapsa</span>.",cleanupnumer:"Slutligen  <span>tar vi bort</span>  <span>faktor</span>  <span>1</span> från den före detta täljarprodukten."}},en:{name:"collapse fraction denominator",explanation:"A  <span>fraction</span> with a  <span>fraction denominator</span> can be  <span>collapsed</span>, by letting the  <span>denominator</span> of the  <span>fraction denominator</span> become a  <span>factor</span> in the outer fraction's  <span>numerator</span>. ",targets:"a  <span>fraction</span> with  <span>fraction denominator</span> ",returns:"a  <span>fraction</span>, or the  <span>numerator</span>  <span>product</span> ",effect:"This is a  <span>simplifying operation</span>, since the object is no longer as deeply nested. ",steps:{firstmovedenomnegintodenomnumer:"First we move the  <span>negation</span> from the  <span>denominator</span>  <span>fraction</span> into its  <span>numerator</span>.",prolongwithdenomdenom:"We prolong the outer  <span>fraction</span> with the  <span>denominator</span> of the  <span>denominator</span>  <span>fraction</span>.",multintodenomfrac:"Now we multiply the new  <span>factor</span> into the  <span>denominator</span>  <span>fraction</span>.",eliminateindenom:"Now we can  <span>eliminate</span> that in the  <span>denominator</span>  <span>fraction</span>, which  <span>collapses</span> into its  <span>numerator</span>!",collapsedenomfrac:"Since the  <span>numerator</span> of the  <span>denominator</span>  <span>fraction</span> was  <span>1</span>, it has now become a  <span>fraction</span> with identical  <span>numerator</span> and  <span>denominator</span>. This we can now  <span>collapse</span> to the  <span>number 1</span>.",cleanupdenom:"That leaves us with a  <span>fraction</span> with  <span>denominator</span>  <span>1</span>, which we also can  <span>collapse</span>.",cleanupnumer:"Finally we  <span>remove</span> the  <span>factor</span>  <span>1</span> from the former  <span>numerator</span>  <span>product</span>."}}},flattenFracNumerDenom:{id:85,sv:{name:"kollapsa kvot av kvoter",explanation:"En  <span>kvot</span> av  <span>kvoter</span> kan förenklas till en  <span>kvot</span> av  <span>produkter</span> istället, genom att flytta  <span>täljarkvotens</span>  <span>nämnare</span> till den yttre  <span>kvotens</span>  <span>nämnare</span>, och  <span>nämnarkvotens</span>  <span>nämnare</span> till den yttre  <span>kvotens</span>  <span>täljare</span>. ",targets:"en  <span>kvot</span> av  <span>kvoter</span> ",returns:"en  <span>kvot</span> av  <span>produkter</span> ",effect:"Detta är en  <span>förenklande operation</span>. Inga objekt har försvunnit, men det är lättare att förenkla en  <span>kvot</span> av  <span>produkter</span> än en  <span>kvot</span> av  <span>kvoter</span>. ",steps:{firstmovenumernegintonumernumer:"Först flyttar vi  <span>negationen</span> från  <span>täljarkvoten</span> till dess  <span>täljare</span>.",firstflattendenom:"Vi  <span>kollapsar</span>  <span>nämnarkvoten</span> genom att låta dess  <span>nämnare</span> uppgå i den yttre  <span>kvotens</span>  <span>täljare</span>.",mergefacintonumerfrac:"Nu multiplicerar vi in den flyttade  <span>faktorn</span> i  <span>täljarkvotens</span>  <span>täljare</span>.",thenflattennumer:"Slutligen  <span>kollapsar</span> vi  <span>täljarkvoten</span> genom att flytta dess  <span>nämnare</span> till den yttre  <span>kvotens</span>  <span>nämnare</span>. Kvar har vi en  <span>kvot</span> utan  <span>kvoter</span>!",mergefacintoremainingfrac:"Eftersom  <span>nämnarkvoten</span> hade  <span>täljare</span>  <span>1</span> och därför  <span>kollapsade</span> helt, så återstår bara att multiplicera in dess forna  <span>täljare</span> i den kvarvarande  <span>kvoten</span>!"}},en:{name:"collapse fraction of fractions",explanation:"A  <span>fraction</span> of  <span>fractions</span> can be  <span>simplified</span> to a  <span>fraction</span> of  <span>products</span>, by moving the  <span>numerator</span> of the  <span>numerator</span>  <span>fraction</span> into the  <span>denominator</span>, and the  <span>denominator</span> of the  <span>denominator</span>  <span>fraction</span> into the  <span>numerator</span>. ",targets:"a  <span>fraction</span> of  <span>fractions</span> ",returns:"a  <span>fraction</span> of  <span>products</span> ",effect:"This is a  <span>simplifying operation</span>. No objects have disappeared, but it is easier to  <span>simplify</span> a  <span>fraction</span> of  <span>products</span> than a  <span>fraction</span> of  <span>fractions</span>. ",steps:{firstmovenumernegintonumernumer:"First we move the  <span>negation</span> from the  <span>numerator</span>  <span>fraction</span> into its  <span>numerator</span>.",firstflattendenom:"We  <span>collapse</span> the  <span>denominator</span>  <span>fraction</span> by moving its  <span>denominator</span> into the  <span>numerator</span> of the outer  <span>fraction</span>.",mergefacintonumerfrac:"Now we multiply the moved  <span>factor</span> into the  <span>numerator</span> of the  <span>numerator</span>  <span>fraction</span>.",thenflattennumer:"Finally we  <span>collapse</span> the  <span>numerator</span>  <span>fraction</span> by moving its  <span>denominator</span> into the  <span>denominator</span> of the outer  <span>fraction</span>. This leaves us with a  <span>fraction</span> without  <span>fractions</span>!",mergefacintoremainingfrac:"Since the  <span>denominator</span>  <span>fraction</span> had  <span>numerator</span>  <span>1</span> and therefore fully  <span>collapsed</span>, we now only have to multiply it's former  <span>numerator</span> into the remaining  <span>fraction</span>."}}},eliminateFromFrac:{id:86,sv:{name:"eliminera faktorer i kvot",explanation:"Om en  <span>faktor</span> förekommer i både  <span>täljaren</span> och  <span>nämnaren</span> så kan dessa  <span>eliminera</span> varandra. ",targets:"en  <span>kvot</span> med gemensamma  <span>faktorer</span> i  <span>täljare</span> och  <span>nämnare</span> ",returns:"en  <span>kvot</span> med färre  <span>faktorer</span> eller återstoden av  <span>täljaren</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi eliminerar  <span>faktorer</span>. ",steps:{extractchosenfacs:"Först bryter vi ut de  <span>faktorer</span> vi vill förkorta bort från  <span>kvoten</span>.",makeextractedbitsidentical:"Vi möblerar om så att  <span>täljaren</span> och  <span>nämnaren</span> i den utlyfta  <span>kvoten</span> blir exakt lika.",collapseextractedfrac:"Nu har den utlyfta  <span>kvoten</span> identisk  <span>täljare</span> och  <span>nämnare</span>, och kan därmed  <span>kollapsas</span> till  <span>talet 1</span>.",removeonefac:"Slutligen  <span>tar vi bort</span>  <span>faktorn</span>  <span>1</span>, så att endast den förkortade  <span>kvoten</span> återstår."}},en:{name:"eliminate factors in fraction",explanation:"If a  <span>fraction</span> contains identical  <span>factors</span> in the  <span>numerator</span> and  <span>denominator</span>, these can be  <span>removed</span>. ",targets:"a  <span>fraction</span> with common  <span>factors</span> in  <span>numerator</span> and  <span>denominator</span> ",returns:"a  <span>fraction</span> with fewer  <span>factors</span>, or the remains of the  <span>numerator</span> ",effect:"This is a  <span>simplifying operation</span> since we  <span>eliminate</span>  <span>factors</span>. ",steps:{extractchosenfacs:"First we extract the  <span>factors</span> to  <span>eliminate</span> from the fraction",makeextractedbitsidentical:"We rearrange the extracted  <span>fraction</span> so that the  <span>numerator</span> and  <span>denominator</span> are exactly alike.",collapseextractedfrac:"Now the extracted  <span>fraction</span> has identical  <span>numerator</span> and  <span>denominator</span>, and can therefore be  <span>collapsed</span> to the  <span>number 1</span>.",removeonefac:"Finally we  <span>remove</span> the  <span>factor</span>  <span>1</span>, leaving only what's left of the original  <span>fraction</span>."}}},eliminateCommonInnerFacsInFrac:{id:87,sv:{name:"eliminera inre faktorer i kvot",explanation:"Om en numerisk  <span>täljarfaktor</span> har en inre  <span>faktor</span> gemensam med en numerisk  <span>nämnarfaktor</span>, så kan denna gemensamma  <span>faktor</span> förkortas bort. Detta är vad vi i dagligt  <span>tal</span> kallar  <span>division</span>! ",targets:"en  <span>kvot</span> med  <span>faktorer</span> med gemensam inre  <span>faktor</span> ",returns:"en  <span>kvot</span> med förkortade  <span>faktorer</span>, eller enbart  <span>täljaren</span> om  <span>nämnaren</span> försvann helt ",effect:"Detta är en  <span>förenklande operation</span>, eftersom två numeriska  <span>faktorer</span> har blivit förkortade eller  <span>eliminerade</span>. ",steps:{freenumfromneg:"Vi befriar  <span>faktorn</span> från  <span>negationen</span>.",flattenresafternegfree:"Efter att ha expanderat  <span>negationen</span> så plattar vi till  <span>produkten</span>.",splitnumtofacs:"Vi  <span>faktoriserar</span> för att blotta den inre gemensamma  <span>faktorn</span>.",flattenresaftermultsplit:"Efter att ha  <span>faktoriserat</span> så plattar vi till  <span>produkten</span>.",eliminatefreedfacs:"Nu eliminerar vi de frilagda inre  <span>faktorerna</span>.",collapsethefreednegone:"Slutligen  <span>kollapsar</span> vi den frilagda  <span>faktorn</span>  <span>-1</span>."}},en:{name:"eliminate inner factors in fraction",explanation:"If a numeric  <span>numerator factor</span> has an inner  <span>factor</span> in common with a numeric  <span>denominator factor</span>, then the common inner  <span>factor</span> can be  <span>eliminated</span>. In other words, this is what we usually call  <span>division</span>! ",targets:"a  <span>fraction</span> with  <span>factors</span> with common inner  <span>factor</span> ",returns:"a  <span>fraction</span> with reduced  <span>factors</span>, or just the  <span>numerator</span> if the  <span>denominator</span> was fully  <span>eliminated</span> ",effect:"This is a  <span>simplifying operation</span>, since two numeric  <span>factors</span> have been reduced or  <span>eliminated</span>. ",steps:{freenumfromneg:"We free the  <span>factor</span> from the  <span>negation</span>.",flattenresafternegfree:"We  <span>flatten</span> the  <span>product</span> after having expanded the  <span>negation</span>.",splitnumtofacs:"We  <span>factorise</span> to expose the common inner  <span>factor</span>.",flattenresaftermultsplit:"We  <span>flatten</span> the  <span>product</span> after having exposed the inner  <span>factor</span>.",eliminatefreedfacs:"Now we  <span>eliminate</span> the exposed inner  <span>factors</span>.",collapsethefreednegone:"Finally we  <span>collapsed</span> the freed  <span>factor</span>  <span>-1</span>."}}},eliminateNegMirrorFacsFromFrac:{id:88,sv:{name:"eliminera spegelfaktorer i kvot",explanation:"Om  <span>täljaren</span> och  <span>nämnaren</span> innehåller en  <span>faktor</span> som är identisk förutom att den ena är  <span>negativ</span>, så kan vi  <span>eliminera</span> dessa och enbart behålla  <span>negationen</span>. ",targets:"en  <span>kvot</span> med identisk  <span>faktor</span> i  <span>täljare</span> och  <span>nämnare</span> fast ena är  <span>negativ</span> ",returns:"en  <span>kvot</span> med färre  <span>faktorer</span> eller återstoden av  <span>täljaren</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi eliminerar  <span>faktorer</span>. ",steps:{freenumfromneg:"Först expanderar vi  <span>negationen</span> så vi frilägger  <span>faktorn</span> vi vill  <span>eliminera</span>.",flattenresafternegfree:"Vi absorberar  <span>produktfaktorn</span> som uppstod när vi expanderade  <span>negationen</span>.",eliminatefreedfacs:"Nu eliminerar vi de identiska  <span>faktorerna</span> från  <span>kvoten</span>!"}},en:{name:"eliminate mirror factors in fraction",explanation:"If a  <span>fraction</span> contains identical  <span>factors</span> in the  <span>numerator</span> and  <span>denominator</span> except that one is  <span>negative</span>, these can be  <span>eliminated</span>, leaving only the  <span>negation</span>. ",targets:"a  <span>fraction</span> with common  <span>factors</span> in  <span>numerator</span> and  <span>denominator</span> except one is  <span>negative</span> ",returns:"a  <span>fraction</span> with fewer  <span>factors</span>, or the remains of the  <span>numerator</span> ",effect:"This is a  <span>simplifying operation</span> since we  <span>eliminate</span>  <span>factors</span>. ",steps:{freenumfromneg:"First we expand the  <span>negation</span> so that we free the  <span>factor</span> we want to  <span>eliminate</span>.",flattenresafternegfree:"We absorb the  <span>product factor</span> that was created when we expanded the  <span>negation</span>.",eliminatefreedfacs:"Now we  <span>eliminate</span> the identical  <span>factors</span> from the  <span>fraction</span>!"}}},collapseNegOneDenom:{id:89,sv:{name:"kollapsa nämnare -1",explanation:"En  <span>kvot</span> med  <span>nämnare</span>  <span>-1</span> kan  <span>kollapsas</span> till en  <span>negation</span> av  <span>täljaren</span>. ",targets:"en  <span>kvot</span> med  <span>nämnare</span>  <span>-1</span> ",returns:"en  <span>negation</span> av  <span>täljaren</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi kollapsat nämnarnegationen över  <span>täljaren</span>. ",steps:{firstweprolongwithnegone:"Först förlänger vi  <span>kvoten</span> med  <span>-1</span>, som vi skall använda för att  <span>kollapsa</span>  <span>nämnaren</span>.",collapsenegsindenom:"Nu slår vi ihop nämnarfaktorerna, vilket resulterar i  <span>talet 1</span>.",finallyremoveonedenom:"En  <span>nämnare</span>  <span>1</span> kan ignoreras, så att bara den förlängda  <span>täljaren</span> återstår.",andcollapsenegovernumer:"Slutligen använder vi den  <span>introducerade</span>  <span>faktorn</span>  <span>-1</span> för att negera den ursprungliga  <span>täljaren</span>."}},en:{name:"collapse denominator -1",explanation:"A  <span>fraction</span> with  <span>denominator</span>  <span>-1</span> can be  <span>collapsed</span> to a  <span>negation</span> of the  <span>numerator</span>. ",targets:"a  <span>fraction</span> with  <span>denominator</span>  <span>-1</span> ",returns:"a  <span>negation</span> of the  <span>numerator</span> ",effect:"This is a  <span>simplifying operation</span>, as the  <span>denominator</span> has been replaced with a  <span>negation</span> of the  <span>numerator</span>. ",steps:{firstweprolongwithnegone:"First we prolong the  <span>fraction</span> with  <span>-1</span>, which we will use to  <span>collapse</span> the  <span>denominator</span>.",collapsenegsindenom:"Now we  <span>merge</span> the  <span>denominator</span>  <span>factors</span>, resulting in the  <span>number 1</span>.",finallyremoveonedenom:"A  <span>numerator</span>  <span>1</span> can be dropped, leaving us with the prolonged  <span>numerator</span>.",andcollapsenegovernumer:"Finally we use the  <span>introduced</span>  <span>factor</span>  <span>-1</span> to negate the original  <span>numerator</span>."}}},extractFacsFromFrac:{id:90,sv:{name:"lyft ut faktorer från kvot",explanation:"Vi kan  <span>faktorisera</span> en  <span>kvot</span> genom att lyfta ut  <span>faktorer</span> från  <span>täljare</span> och  <span>nämnare</span> till en ny  <span>kvotfaktor</span>. ",targets:"en  <span>kvot</span> ",returns:"en  <span>produkt</span> ",effect:"Detta är en  <span>komplicerande operation</span> eftersom vi inte längre har  <span>faktorerna</span> samlade i en  <span>kvot</span>. ",steps:{chosenonesoaddingonefac:"Eftersom vi inte valde någon  <span>faktor</span> på denna  <span>våning</span> att bryta ut, så lägger vi till en ny  <span>faktor</span>  <span>1</span> som vi kan extrahera.",extractchosenfacsfromfloor:"Vi lyfter ut de valda  <span>faktorerna</span> på denna  <span>våning</span> till en egen  <span>produkt</span>.",nowsplittingfrac:"Nu när vi har isolerat de valda  <span>faktorerna</span> på båda  <span>våningarna</span> så delar vi upp  <span>kvoten</span>, så att de utvalda  <span>faktorerna</span> hamnar i en egen  <span>kvot</span>.",removingdenomone:"Slutligen  <span>tar vi bort</span> den meningslösa  <span>nämnaren</span>  <span>1</span>."}},en:{name:"extract factors from fraction",explanation:"We can  <span>factorise</span> a  <span>fraction</span> by extracting  <span>factors</span> from the  <span>numerator</span> and the  <span>denominator</span> into a new  <span>fraction factor</span>. ",targets:"a  <span>fraction</span> ",returns:"a  <span>product</span> ",effect:"This is a  <span>complicating operation</span> as the  <span>factors</span> are no longer collected in one  <span>fraction</span>. ",steps:{chosenonesoaddingonefac:"Since we didn't choose any  <span>factor</span> for extraction on this  <span>floor</span>, we add a  <span>factor</span>  <span>1</span> to etxract.",extractchosenfacsfromfloor:"We extract the chosen  <span>factors</span> on this  <span>floor</span> into a  <span>product</span> of their own.",nowsplittingfrac:"Now that the chosen  <span>factors</span> have been isolated into  <span>products</span> of their own, we  <span>split</span> the  <span>fraction</span> so that those  <span>products</span> end up in a  <span>fraction</span> of their own.",removingdenomone:"Finally we  <span>remove</span> the meaningless  <span>denominator</span>  <span>1</span>."}}},prolongFraction:{id:91,sv:{name:"förläng kvot",explanation:"Vi kan multiplicera  <span>täljare</span> och  <span>nämnare</span> i en  <span>kvot</span> med samma  <span>faktor</span>, utan att förändra  <span>kvotens</span> värde. ",targets:"en  <span>kvot</span> ",returns:"en  <span>kvot</span> med två fler  <span>faktorer</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom vi har infört två nya  <span>faktorer</span>. ",steps:{addfaconeforexpanding:"Först multiplicerar vi  <span>kvoten</span> med en  <span>faktor</span>  <span>1</span>, som vi sedan skall expandera.",expandingfacwitharg:"Nu expanderar vi  <span>faktorn</span>  <span>1</span> till en  <span>kvot</span> med identisk  <span>täljare</span> och  <span>nämnare</span>, som vi sedan skall  <span>slå ihop</span> med ursprungsfaktorn.",mergingfacs:"Slutligen multiplicerar vi ihop  <span>kvoterna</span>, vilket resulterar i att ursprungskvoten har fått den nya  <span>faktorn</span>  <span>introducerad</span> i  <span>täljare</span> och  <span>nämnare</span>."}},en:{name:"prolong fraction",explanation:"We can multiply the  <span>numerator</span> and  <span>denominator</span> in a  <span>fraction</span> with the same  <span>factor</span>, without changing the value of the  <span>fraction</span>. ",targets:"a  <span>fraction</span> ",returns:"a  <span>fraction</span> with two more  <span>factors</span> ",effect:"This is a  <span>complicating operation</span>, since we have  <span>introduced</span> two new  <span>factors</span> ",steps:{addfaconeforexpanding:"We start by multiplying the  <span>fraction</span> with a  <span>factor</span>  <span>1</span>, which we will then  <span>split</span>.",expandingfacwitharg:"Now we  <span>split</span> the  <span>factor</span>  <span>1</span> to a  <span>fraction</span> with identical  <span>numerator</span> and  <span>denominator</span>, which we will then  <span>merge</span> with the original  <span>fraction</span>.",mergingfacs:"Finally we multiply the  <span>fractions</span> together, which results in the original  <span>fraction</span> getting the new  <span>factor</span>  <span>introduced</span> in its  <span>numerator</span> and  <span>denominator</span>."}}},sameSpiritNumerDenomFracToOne:{id:110,sv:{name:"kollapsa kvot av tvillingar",explanation:"Vi kan  <span>kollapsa</span> en  <span>kvot</span> av två  <span>uttryck</span> som kan bli identiska efter ommöblering. ",targets:"en  <span>kvot</span> av  <span>uttryck</span> som är potentiellt identiska ",returns:" <span>talet 1</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi har kollapsat en  <span>kvot</span> till ett  <span>heltal</span>. ",steps:{firstwemakethemidentical:"Först gör vi  <span>täljaren</span> och  <span>nämnaren</span> identiska genom att omformulera dem.",thenwecollapsetoone:"Nu när de blivit identiska så kan vi  <span>kollapsa</span>  <span>kvoten</span> till  <span>talet 1</span>."}},en:{name:"collapse fraction of twins",explanation:"We can  <span>collapse</span> a  <span>fraction</span> of two  <span>expressions</span> which can become identical after  <span>rephrasing</span>. ",targets:"a  <span>fraction</span> of potentially identical objects ",returns:"the  <span>number 1</span> ",effect:"This is a  <span>simplifying operation</span>, since we have replaced a  <span>fraction</span> with an  <span>integer</span>. ",steps:{firstwemakethemidentical:"First we make the  <span>numerator</span> and  <span>denominator</span> truly identical by  <span>rephrasing</span> them.",thenwecollapsetoone:"Now that they are identical, we can  <span>collapse</span> the  <span>fraction</span> to the  <span>number 1</span>."}}},eliminateFromSumsInFrac:{id:122,sv:{name:"eliminera från kvot med summor",explanation:"Vi kan  <span>eliminera</span> en  <span>faktor</span> i en  <span>kvot</span> med  <span>summor</span> om  <span>faktorn</span> finns i varje  <span>term</span>. ",targets:"en  <span>kvot</span> där täljare/och eller  <span>nämnare</span> är  <span>summor</span> och alla  <span>termer</span> har en gemensam  <span>faktor</span> ",returns:"en  <span>kvot</span> med den gemensamma  <span>faktorn</span>  <span>eliminerad</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi  <span>tar bort</span>  <span>faktorer</span>. ",steps:{extractchosenfacsfromnumer:"Vi bryter ut  <span>faktorn</span> vi skall  <span>eliminera</span> från  <span>summan</span> i  <span>täljaren</span>.",extractchosenfacsfromdenom:"Vi bryter ut  <span>faktorn</span> vi skall  <span>eliminera</span> från  <span>summan</span> i  <span>nämnaren</span>.",eliminateextractedfacs:"Nu kan vi  <span>eliminera</span>  <span>faktorn</span> från  <span>kvoten</span>!"}},en:{name:"eliminate from fraction with sums",explanation:"We can  <span>eliminate</span> a  <span>factor</span> in a  <span>fraction</span> with  <span>sums</span> if the  <span>factor</span> can be found in each  <span>term</span>. ",targets:"a  <span>fraction</span> where the  <span>numerator</span> and/or  <span>denominator</span> are  <span>sums</span> and all  <span>terms</span> have a  <span>factor</span> in common ",returns:"a  <span>fraction</span> with the common  <span>factor</span>  <span>eliminated</span> ",effect:"This is a  <span>simplifying operation</span> since we are  <span>removing</span>  <span>factors</span>. ",steps:{extractchosenfacsfromnumer:"We extract the  <span>factor</span> to be  <span>eliminated</span> from the  <span>sum</span> in the  <span>numerator</span>.",extractchosenfacsfromdenom:"We extract the  <span>factor</span> to be  <span>eliminated</span> from the  <span>sum</span> in the  <span>denominator</span>.",eliminateextractedfacs:"Now we can proceed to  <span>eliminate</span> the  <span>factor</span> from the  <span>fraction</span>!"}}},eliminateMirrorSumFacsFromFrac:{id:124,sv:{name:"eliminera spegelsummor från kvot",explanation:"Om  <span>täljaren</span> och  <span>nämnaren</span> innehåller  <span>summafaktorer</span> som är identiska förutom att termnegationerna är reverserade, så kan dessa  <span>elimineras</span>. ",targets:"en  <span>kvot</span> med  <span>summafaktorer</span> i  <span>täljare</span> och  <span>nämnare</span> som är spegelbilder. ",returns:"en förkortad  <span>kvot</span>, eller återstoden av  <span>täljaren</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi eliminerar två  <span>faktorer</span>. ",steps:{addnegonestouseformirroring:"Vårt mål är att reversera  <span>negationerna</span> i ena  <span>summafaktorn</span>. Först  <span>introducerar</span> vi två  <span>faktorer</span>  <span>-1</span>.",nowwenegatthesumfactor:"Nu använder vi en av  <span>faktorerna</span>  <span>-1</span> för att reversera  <span>negationerna</span> i  <span>täljarens</span>  <span>summafaktor</span>.",integrateresultintonumer:"Vi låter den skapade  <span>produkten</span> uppgå i täljarprodukten.",nowweeliminatethesums:"Nu när  <span>summafaktorerna</span> efter negationsreverseringen har blivit helt identiska, så kan de  <span>elimineras</span> från  <span>kvoten</span>!"}},en:{name:"eliminate mirrorsums from fraction",explanation:"If the  <span>numerator</span> and  <span>denominator</span> contains  <span>sum factors</span> which are identical except that the  <span>term</span>  <span>negations</span> are reversed, then these  <span>sum factors</span> can be  <span>eliminated</span>. ",targets:"a  <span>fraction</span> with mirror image  <span>sum factors</span> in  <span>numerator</span> and  <span>denominator</span>. ",returns:"a reduced  <span>fraction</span>, or the remains of the  <span>numerator</span> ",effect:"This is a  <span>simplifying operation</span>, since we  <span>eliminate</span> two  <span>factors</span>. ",steps:{addnegonestouseformirroring:"Our goal is to reverse the  <span>negation</span> of one of the  <span>sum factors</span>. First we  <span>introduce</span> two  <span>factors</span>  <span>-1</span>.",nowwenegatthesumfactor:"Now we use one of the  <span>factors</span>  <span>-1</span> to reverse the  <span>negation</span> in the  <span>numerator</span>  <span>sum factors</span>.",integrateresultintonumer:"We let the created  <span>product</span> become part of the  <span>numerator</span>  <span>product</span>.",nowweeliminatethesums:"Now that the  <span>negation</span> reversal made the  <span>sum factors</span> completely identical, they can be  <span>eliminated</span> from the  <span>fraction</span>!"}}},eliminateInnerNumFacsInSumsInFrac:{id:126,sv:{name:"eliminera talfaktorer från summor i kvot",explanation:"Om varje  <span>term</span> i en  <span>kvot</span> där  <span>täljare</span> och/eller  <span>nämnare</span> är  <span>summor</span> har en gemensam inre  <span>talfaktor</span>, så kan denna  <span>elimineras</span>! ",targets:"en  <span>kvot</span> där  <span>täljaren</span> och/eller  <span>nämnaren</span> är  <span>summor</span> och alla  <span>termer</span> har en gemensam inre  <span>faktor</span> ",returns:"en  <span>kvot</span> med den inre  <span>faktorn</span> borttagen ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi förkortar/eliminerar  <span>talfaktorer</span>. ",steps:{extractchosenfac:"Vi frigör den inre gemensamma  <span>faktorn</span> i denna  <span>term</span>.",absorbrevealedfacintotermprod:"Vi  <span>jämnar ut</span>  <span>produkten</span> efter  <span>faktoriseringen</span>.",noweliminaterevealedfacs:"Nu kan vi förkorta bort den frigjorda  <span>faktorn</span> från  <span>kvoten</span>!"}},en:{name:"eliminate inner factors from sum fraction",explanation:"In a  <span>fraction</span> where the  <span>numerator</span> and/or  <span>denominator</span> are  <span>sums</span>, if all  <span>terms</span> have an inner  <span>integer</span>  <span>factor</span> in common, that  <span>factor</span> can be  <span>removed</span>! ",targets:"a  <span>fraction</span> where the  <span>numerator</span> and/or  <span>denominator</span> are  <span>sums</span> and all  <span>terms</span> have an inner  <span>factor</span> in common ",returns:"a  <span>fraction</span> with the common inner  <span>factor</span>  <span>eliminated</span> ",effect:"This is a  <span>simplifying operation</span> since we  <span>eliminate</span>  <span>factors</span> and/or make  <span>integers</span> lower. ",steps:{extractchosenfac:"We free the inner common  <span>factor</span> in this  <span>term</span>.",absorbrevealedfacintotermprod:"We  <span>flatten</span> the  <span>product</span> after the factorisation.",noweliminaterevealedfacs:"Now we can  <span>eliminate</span> the exposed inner  <span>factor</span> from the  <span>fraction</span>!"}}},eliminateSameBasePowsInSumsInFrac:{id:128,sv:{name:"förkorta potenser i kvot med summor",explanation:"Om varje  <span>term</span> i en  <span>kvot</span> där  <span>täljare</span> och/eller  <span>nämnare</span> är  <span>summor</span> har en  <span>potens</span> med gemensam  <span>bas</span>, så kan dessa förkortas! ",targets:"en  <span>kvot</span> där  <span>täljaren</span> och/eller  <span>nämnaren</span> är  <span>summor</span> och alla  <span>termer</span> har en  <span>potens</span> med gemensam  <span>bas</span> ",returns:"en  <span>kvot</span> med förkortade  <span>potensfaktorer</span> i alla  <span>termer</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi förkortar/eliminerar  <span>potenser</span>. ",steps:{collapsepowone:"Vi  <span>tar bort</span>  <span>exponenten</span>  <span>1</span>.",extractnegpartofpowersinceindenom:"Vi bryter ut en  <span>potens</span> med  <span>exponent</span> med motsatt tecken mot vad vi vill ha här eftersom vi är i  <span>termens</span>  <span>nämnare</span> och ska lyfta upp  <span>faktorn</span> till  <span>täljaren</span>.",absorbextractedpowintodenomprod:"Vi  <span>jämnar ut</span>  <span>nämnaren</span> till en enda  <span>produkt</span> för att sedan kunna bryta ut den frigjorda  <span>potensen</span>.",extractpowfromdenom:"Nu bryter vi ut den frigjorda  <span>potensen</span> från  <span>kvottermen</span>.",makeextractedpowpositive:"Vi  <a href='#' class='wordlink' linkto='swapsign'>byter tecken</a> på  <span>potensens</span>  <span>exponent</span> genom att lyfta upp den från den tillfälliga  <span>nämnaren</span>, och nu har vi frigjort  <span>potensen</span> så som vi vill ha den från  <span>kvoten</span>!",cleanuponedenom:"Vi  <span>tar bort</span>  <span>exponenten</span>  <span>1</span>.",extractpowertoeliminate:"Vi bryter ut  <span>potensen</span> vi vill ha ur  <span>termen</span>.",noweliminateextractedpows:"Nu har vi brytit ut en identisk  <span>faktor</span> från  <span>potensfaktorerna</span> i alla  <span>termer</span>, och kan därmed  <span>eliminera</span>  <span>faktorn</span> från  <span>kvoten</span>!"}},en:{name:"eliminate from powers in sum fraction",explanation:"In a  <span>fraction</span> where the  <span>numerator</span> and/or  <span>denominator</span> are  <span>sums</span>, if all  <span>terms</span> have a  <span>power factor</span> with identical  <span>bases</span>, these  <span>powers</span> can be  <span>simplified</span>! ",targets:"a  <span>fraction</span> where the  <span>numerator</span> and/or  <span>denominator</span> are  <span>sums</span> and all  <span>terms</span> have a  <span>power</span> with a common  <span>base</span> ",returns:"a  <span>fraction</span> with the  <span>power factors</span>  <span>simplified</span> or  <span>eliminated</span> ",effect:"This is a  <span>simplifying operation</span> since we  <span>eliminate</span> or  <span>simplify</span>  <span>power factors</span>. ",steps:{collapsepowone:"We  <span>remove</span> the  <span>exponent</span>  <span>1</span>.",extractnegpartofpowersinceindenom:"We extract a  <span>power</span> with the  <span>exponent</span> having a sign reversed to what we want here, since we are in the  <span>term</span>  <span>numerator</span> and can reverse the sign when we extract the  <span>power</span>.",absorbextractedpowintodenomprod:"We  <span>flatten</span> the  <span>denominator</span> to a single  <span>power</span> in order to be able to  <span>factor</span> out our freed  <span>power</span>.",extractpowfromdenom:"We extract the  <span>power</span> from the  <span>fraction term</span>.",makeextractedpowpositive:"Now we move the  <span>power</span> up from the  <span>denominator</span>, which also means switching signs in the  <span>exponent</span>. It is now the  <span>factor</span> we wanted!",cleanuponedenom:"We  <span>remove</span> the  <span>exponent</span>  <span>1</span>.",extractpowertoeliminate:"We extract the  <span>power</span> we want from this  <span>term</span>.",noweliminateextractedpows:"Now we have extracted an identical  <span>factor</span> from all  <span>terms</span>, and we can now proceed to  <span>eliminate</span> that  <span>factor</span>!"}}},prolongNumericFraction:{id:142,sv:{name:"förläng och förenkla heltalskvot",explanation:"En  <span>kvot</span> där  <span>täljaren</span> och/eller  <span>nämnaren</span> är  <span>heltal</span> kan förlängas med ett  <span>heltal</span> som sedan multipliceras in för att ändra storleken på  <span>täljaren</span> och/eller  <span>nämnaren</span>. ",targets:"en  <span>kvot</span> där  <span>täljaren</span> och/eller  <span>nämnaren</span> är  <span>heltal</span> ",returns:"en  <span>kvot</span> med större  <span>heltal</span> ",effect:"Detta är en  <span>komplicerande operation</span> eftersom  <span>kvoten</span> kommer bestå av större  <span>heltal</span>. ",steps:{weprolongwithdesiredfac:"Först förlänger vi  <span>kvoten</span> med ett  <span>heltal</span>.",thenwemultiplythedenom:"Vi multiplicerar  <span>nämnaren</span> med det  <span>introducerade</span>  <span>heltalet</span>.",flattenthenumer:"Vi  <span>jämnar ut</span>  <span>produkten</span> i  <span>täljaren</span>.",cleanupthenumer:"Slutligen multiplicerar vi i  <span>täljaren</span>."}},en:{name:"prolong and simplify integer fraction",explanation:"A  <span>fraction</span> where the  <span>numerator</span> and/or  <span>denominator</span> are  <span>integers</span> can be prolonged with an  <span>integer</span> which is then multiplied in to change the value of the  <span>numerator</span> and/or  <span>denominator</span>. ",targets:"a  <span>fraction</span> where the  <span>numerator</span> and/or  <span>denominator</span> are  <span>integers</span> ",returns:"a  <span>fraction</span> with larger  <span>integers</span> ",effect:"This is a  <span>complicating operation</span> since the  <span>fraction</span> now contains larger  <span>integers</span>. ",steps:{weprolongwithdesiredfac:"First we prolong the  <span>fraction</span> with an  <span>integer</span>.",thenwemultiplythedenom:"We multiply the  <span>denominator</span> with the  <span>introduced</span>  <span>integer</span>.",flattenthenumer:"We  <span>flatten</span> the  <span>numerator</span>  <span>product</span>.",cleanupthenumer:"Finally we multiply the  <span>numerator</span>."}}},collapseNegationsInSumsInFrac:{id:145,sv:{name:"eliminera negationer i summakvot",explanation:"I en  <span>kvot</span> där  <span>täljare</span> och/eller  <span>nämnare</span> är  <span>summor</span>, om varje  <span>term</span> har en  <span>negativ faktor</span> så kan dessa  <span>negationer</span>  <span>elimineras</span>. ",targets:"en  <span>kvot</span> där  <span>täljaren</span> och/eller  <span>nämnaren</span> är  <span>summor</span> och alla  <span>termer</span> har en  <span>negativ faktor</span> ",returns:"en  <span>kvot</span> med  <span>termer</span> utan  <span>negativa faktorer</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi eliminerar  <span>negationer</span>. ",steps:{expandnegfac:"Vi frigör  <span>negationen</span> till en egen  <span>faktor</span>  <span>-1</span>.",falttenintoprod:"Vi  <span>jämnar ut</span>  <span>produkten</span> för att kunna extrahera vår  <span>faktor</span>.",liftoutnegfromnumer:"Vi lyfter ut  <span>negationen</span> från  <span>termens</span>  <span>täljare</span>.",liftoutnegfromdenom:"Vi lyfter ut  <span>negationen</span> från  <span>termens</span>  <span>nämnare</span>.",liftupnegfromdenom:"Sedan flyttar vi upp  <span>negationen</span> från  <span>nämnaren</span>.",extractnegfromnumer:"Vi bryter nu ut en  <span>negation</span> från alla  <span>termer</span> i  <span>täljaren</span>.",extractnegfromdenom:"Vi bryter nu ut en  <span>negation</span> från alla  <span>termer</span> i  <span>nämnaren</span>.",eliminatenegs:"Slutligen eliminerar vi  <span>faktorerna</span>  <span>-1</span> från  <span>kvoten</span>!"}},en:{name:"eliminate negations in sum fraction",explanation:"In a  <span>fraction</span> where the  <span>numerator</span> and/or  <span>denominator</span> are  <span>sums</span>, if all  <span>terms</span> have a  <span>negative factor</span>, those  <span>negations</span> can be  <span>eliminated</span>! ",targets:"a  <span>fraction</span> where the  <span>numerator</span> and/or  <span>denominator</span> are  <span>sums</span> and all  <span>terms</span> have a  <span>negative factor</span> ",returns:"a  <span>fraction</span> with  <span>terms</span> without  <span>negative factors</span> ",effect:"This is a  <span>simplifying operation</span> since we  <span>eliminate</span>  <span>negations</span>. ",steps:{expandnegfac:"We free the  <span>negation</span> into a  <span>factor</span>  <span>-1</span>.",falttenintoprod:"We  <span>flatten</span> the  <span>product</span> in order to be able to extract the  <span>factor</span>.",liftoutnegfromnumer:"We extract the  <span>factor</span> from the term's  <span>numerator</span>.",liftoutnegfromdenom:"We extract the  <span>factor</span> from the term's  <span>denominator</span>.",liftupnegfromdenom:"We then move up the  <span>negation</span> from the  <span>denominator</span>.",extractnegfromnumer:"Now we extract a  <span>negation</span> from all  <span>terms</span> in the  <span>numerator</span>.",extractnegfromdenom:"Now we extract a  <span>negation</span> from all  <span>terms</span> in the  <span>denominator</span>.",eliminatenegs:"Finally we can  <span>eliminate</span> the  <span>factors</span>  <span>-1</span> from the  <span>fraction</span>!"}}},sumNumerFracToSum:{id:173,sv:{name:"dela upp kvot med summatäljare",explanation:"En  <span>kvot</span> med summatäljare kan omvandlas till en  <span>summa</span> av  <span>kvottermer</span>. ",targets:"en  <span>kvot</span> med summatäljare ",returns:"en  <span>summa</span> av  <span>kvottermer</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom vi nu upprepar  <span>nämnaren</span>. ",steps:{firstweextractnumer:"Först bryter vi ut täljarsumman.",nowmultinthenumer:"Sedan distribuerar vi in  <span>kvoten</span> i  <span>summan</span>.",wemulttermintonumer:"Varje  <span>term</span> multipliceras in i sin  <span>kvotfaktor</span>."}},en:{name:"split fraction with sum numerator",explanation:"A  <span>fraction</span> with a  <span>numerator</span>  <span>sum</span> kan be transformed into a  <span>sum</span> of  <span>fraction terms</span>. ",targets:"a  <span>fraction</span> with  <span>sum</span>  <span>numerator</span> ",returns:"a  <span>sum</span> of  <span>fraction terms</span>. ",effect:"This is a  <span>complicating operation</span>, as we are now repeating the  <span>numerator</span>. ",steps:{firstweextractnumer:"First we extract the  <span>numerator</span>  <span>sum</span>.",nowmultinthenumer:"We then  <span>distribute</span> the  <span>fraction</span> into the  <span>sum</span>.",wemulttermintonumer:"Every  <span>term</span> is  <span>merged</span> with its  <span>fraction factor</span>."}}},undefChildObjToUndef:{id:92,sv:{name:"förbjud uttryck med odefinierad del",explanation:"Om någon del av ett  <span>uttryck</span> är  <span>odefinierat</span>, så är hela  <span>uttrycket</span>  <span>odefinierat</span>. ",targets:"ett  <span>uttryck</span> med odefierad del ",returns:" <span>odefinierat</span> ",effect:"Detta är en  <span>integritetsoperation</span>, eftersom den ersätter förbjudna  <span>uttryck</span> med  <span>odefinierat</span>. "},en:{name:"forbid expression with undefined part",explanation:"If any part of an  <span>expression</span> is  <span>undefined</span>, that whole  <span>expression</span> is also  <span>undefined</span>. ",targets:"an  <span>expression</span> with  <span>undefined</span> part ",returns:" <span>undefined</span> ",effect:"This is an  <span>integrity operation</span>, since it replaced a forbidden  <span>expression</span> with  <span>undefined</span>. "}},rearrangeTerms:{id:93,sv:{name:"ändra ordning på termer",explanation:"Eftersom  <span>summor</span> är  <span>kommutativa</span> så kan vi ändra ordning bland  <span>termer</span> utan att påverka  <span>summans</span> värde. ",targets:"en  <span>summa</span> ",returns:"en ommöblerad  <span>summa</span> ",effect:"Detta är en  <span>omformulerande</span>  <span>operation</span> eftersom endast ordningen har ändrats. "},en:{name:"rearrange terms",explanation:"Because  <span>sums</span> are  <span>commutative</span>, we can change the order of the  <span>terms</span> without affecting the value of the  <span>sum</span>. ",targets:"a  <span>sum</span> ",returns:"a rearranged  <span>sum</span>. ",effect:"This is a  <span>rephrasing operation</span> as only the order has changed. "}},rearrangeFacs:{id:318,sv:{name:"ändra ordning på faktorer",explanation:"Eftersom  <span>produkter</span> är  <span>kommutativa</span> så kan vi ändra ordning bland  <span>faktorer</span> utan att påverka  <span>produktens</span> värde. ",targets:"en  <span>produkt</span> ",returns:"en ommöblerad  <span>produkt</span> ",effect:"Detta är en  <span>omformulerande</span>  <span>operation</span> eftersom endast ordningen har ändrats. "},en:{name:"rearrange factors",explanation:"Because  <span>products</span> are  <span>commutative</span>, we can change the order of the  <span>factors</span> without affecting the value of the  <span>product</span>. ",targets:"a  <span>product</span> ",returns:"a rearranged  <span>product</span>. ",effect:"This is a  <span>rephrasing operation</span> as only the order has changed. "}},rearrangeInCon:{id:319,sv:{name:"ändra ordning i konjunktion",explanation:"Eftersom  <span>konjunktioner</span> är  <span>kommutativa</span> så kan vi ändra ordning bland  <span>utsagorna</span> utan att påverka  <span>konjunktionens</span>  <span>sanningsvärde</span>. Detta är logiskt; en  <span>konjunktion</span> är  <span>sann</span> om samtliga ingående  <span>utsagor</span> är  <span>sanna</span>, så den inbördes ordningen bland  <span>utsagorna</span> påverkar inte. ",targets:"en  <span>konjunktion</span> ",returns:"en ommöblerad  <span>konjunktion</span> ",effect:"Detta är en  <span>omformulerande</span>  <span>operation</span> eftersom endast ordningen har ändrats. "},en:{name:"rearrange propositions in conjunction",explanation:"Because  <span>conjunctions</span> are  <span>commutative</span>, we can change the order of the  <span>propositions</span> without affecting the  <span>truth value</span> of the  <span>conjunction</span>. This makes sense; since a  <span>conjunction</span> is  <span>true</span> only if all contained  <span>propositions</span> are  <span>true</span>, it doesn't matter in what order the  <span>propositions</span> are read. ",targets:"a  <span>conjunction</span> ",returns:"a rearranged  <span>conjunction</span>. ",effect:"This is a  <span>rephrasing operation</span> as only the order has changed. "}},rearrangeInDis:{id:319,sv:{name:"ändra ordning i disjunktion",explanation:"Eftersom  <span>disjunktioner</span> är  <span>kommutativa</span> så kan vi ändra ordning bland  <span>utsagorna</span> utan att påverka  <span>disjunktionens</span>  <span>sanningsvärde</span>. Detta är logiskt; en  <span>disjunktion</span> är  <span>sann</span> om den innehåller minst en  <span>sann</span>  <span>utsaga</span>, men vilken plats den kommer på spelar ingen roll. ",targets:"en  <span>disjunktion</span> ",returns:"en ommöblerad  <span>disjunktion</span> ",effect:"Detta är en  <span>omformulerande</span>  <span>operation</span> eftersom endast ordningen har ändrats. "},en:{name:"rearrange propositions in disjunction",explanation:"Because  <span>disjunctions</span> are  <span>commutative</span>, we can change the order of the  <span>propositions</span> without affecting the  <span>truth value</span> of the  <span>disjunction</span>. This makes sense; a  <span>disjunction</span> is  <span>true</span> if it contains at least one  <span>true</span>  <span>proposition</span>, but on which position that  <span>proposition</span> appears is irrelevant. ",targets:"a  <span>disjunction</span> ",returns:"a rearranged  <span>disjunction</span>. ",effect:"This is a  <span>rephrasing operation</span> as only the order has changed. "}},makeEqual:{id:102,sv:{name:"gör lika",explanation:"Ibland kan objekt göras identiska genom att man utför  <span>omformulerande operationer</span>. ",targets:"Objekt som är andligt lika ",returns:"Objekt som är helt lika ",effect:"Detta är en  <span>omformulerande</span>  <span>operation</span>, då den endast innefattar  <span>omformulerande operationer</span>. ",steps:{movenegfromfractofloor:"Vi flyttar  <span>negationen</span> från  <span>kvoten</span> till en av  <span>våningarna</span>, för att matcha det andra objektet.",movenegfromfloortofrac:"Vi flyttar  <span>negationen</span> från en av  <span>våningarna</span> till att omfatta hela  <span>kvoten</span>, så att vi matchar det andra objektet.",movenegbetweenfloors:"Vi flyttar  <span>negationen</span> från ena  <span>våningen</span> till den andra, så att vi matchar den andra  <span>kvoten</span>.",reorderinglisttomatch:"Vi ändrar ordning på barnen så att vi matchar det andra objektet.",movingnegfromprodtofac:"Vi flyttar  <span>negationen</span> från  <span>produkten</span> till en av  <span>faktorerna</span>, så att vi matchar den andra  <span>produkten</span>.",movingnegfromfactoprod:"Vi flyttar  <span>negationen</span> från  <span>faktorn</span> till att omfatta hela  <span>produkten</span>, så att vi matchar den andra  <span>negativa produkten</span>.",movingnegbetweenfacs:"Vi flyttar  <span>negationen</span> från en  <span>faktor</span> till en annan så att vi matchar den andra  <span>produkten</span>.",makesameposchildrensame:"Vi gör barnen på samma position i objekten lika."}},en:{name:"make equal",explanation:"Some objects can be made identical by applying  <span>rephrasing operations</span>. ",targets:"Object which are spiritually identical ",returns:"Objects which are actually identical ",effect:"This is a  <span>rephrasing operation</span> since it only contains  <span>rephrasing operations</span>. ",steps:{movenegfromfractofloor:"We move the  <span>negation</span> from the  <span>fraction</span> to one of the  <span>floor</span>, in order to match the other object.",movenegfromfloortofrac:"We move the  <span>negation</span> from one of the  <span>floors</span> to the  <span>fraction</span>, in order to match the other object.",movenegbetweenfloors:"We move a  <span>negation</span> from one  <span>floor</span> to the other, so that we match the other  <span>fraction</span>.",reorderinglisttomatch:"We change the order of the children so that we match the other object.",movingnegfromprodtofac:"We move the  <span>negation</span> from the  <span>product</span> to one of the  <span>factors</span>, so that we match the other  <span>product</span>.",movingnegfromfactoprod:"We move the  <span>negation</span> from the  <span>factor</span> to contain the whole  <span>product</span>, so that we match the other  <span>negative product</span>.",movingnegbetweenfacs:"We move the  <span>negation</span> from a  <span>factor</span> to another, so that we match the other  <span>product</span>.",makesameposchildrensame:"We make the children on the same positions in the objects equal."}}},decNumToFrac:{id:161,sv:{name:"dela upp decimaltal i kvot av heltal",explanation:"Vi kan skriva om ett  <span>decimaltal</span> till en  <span>kvot</span> av  <span>heltal</span>. ",targets:"ett  <span>decimaltal</span> ",returns:"en  <span>kvot</span> av  <span>heltal</span> ",effect:"Även om det har tillkommit objekt så anses detta vara en  <span>förenklande operation</span>, eftersom  <span>heltal</span> är lättare att hantera än  <span>decimaltal</span>. "},en:{name:"split decimal number into fraction of integers",explanation:"We can rewrite a  <span>decimal number</span> into a  <span>fraction</span> of  <span>integers</span>. ",targets:"a  <span>decimal</span>  <span>numbers</span> ",returns:"a  <span>fraction</span> of  <span>integers</span> ",effect:" <span>Even though</span> new objects have been  <span>introduced</span>, this is considered a  <span>simplifying operation</span> since  <span>integers</span> are easier to deal with than  <span>decimal</span>  <span>numbers</span>. "}},integerifyDecNumsInFrac:{id:162,sv:{name:"omvandla decimaltal i kvot",explanation:"Om  <span>täljaren</span> och/eller  <span>nämnaren</span> i en numerisk  <span>kvot</span> är ett  <span>decimaltal</span>, så kan vi genom förlängning omvandla  <span>kvoten</span> till en heltalskvot. ",targets:"en numerisk  <span>kvot</span> där  <span>täljaren</span> och/eller  <span>nämnaren</span> är  <span>decimaltal</span> ",returns:"en  <span>kvot</span> av  <span>heltal</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi inte längre har några  <span>decimaltal</span>. ",steps:{prolongwithneeded:"Vi förlängen  <span>kvoten</span> med en  <span>potens</span> av 10, med lika många nollor som det största antalet  <span>decimaler</span> i  <span>kvoten</span>.",multnumer:"Sedan multiplicerar vi ihop  <span>talen</span> i  <span>täljaren</span>...",multdenom:"...och i  <span>nämnaren</span>! Nu har vi en  <span>kvot</span> av  <span>heltal</span>."}},en:{name:"rewrite decimal numbers in fraction",explanation:"If the  <span>numerator</span> and/or  <span>denominator</span> in a numeric  <span>fraction</span> is a  <span>decimal number</span>, we can multiply the  <span>fraction</span> with a  <span>power</span> of 10 to convert the  <span>decimal</span>  <span>numbers</span> to  <span>integers</span>. ",targets:"a numeric  <span>fraction</span> where the  <span>numerator</span> and/or  <span>denominator</span> are  <span>decimal</span>  <span>numbers</span> ",returns:"a  <span>fraction</span> of  <span>integers</span> ",effect:"This is a  <span>simplifying operation</span> since we no longer have any  <span>decimal</span>  <span>numbers</span>. ",steps:{prolongwithneeded:"First we multiply the  <span>fraction</span> with a  <span>power</span> of 10, with as many zeroes as the biggest  <span>number</span> of decimals in the  <span>fraction</span>.",multnumer:"Then we multiply the  <span>numbers</span> in the  <span>numerator</span>...",multdenom:"...and finally the  <span>denominator</span>. Now we have a  <span>fraction</span> of  <span>integers</span>!"}}},collapseRootOfISquared:{id:317,en:{name:"collapse root of i squared",explanation:"The  <span>square root</span> of the  <span>constant i</span> with  <span>exponent 2</span> is the  <span>constant i</span>. ",targets:"a  <span>square root</span> of a  <span>power</span> of  <span>constant i</span> with  <span>exponent 2</span> ",returns:"the  <span>constant i</span> ",effect:"This is a  <span>simplifying operation</span> since we replaced a  <span>root</span> with a  <span>constant</span>. "},sv:{name:"kollapsa rot av kvadrat av i",explanation:"Kvadratroten av  <span>konstanten i</span> upphöjt till 2 är  <span>konstanten i</span>. ",targets:"kvadratroten av en  <span>potens</span> med kostanten i som  <span>bas</span> och  <span>exponenten 2</span> ",returns:" <span>konstanten i</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi ersatt en  <span>rot</span> med en  <span>konstant</span>. "}},collapseAbsI:{id:316,en:{name:"collapse absolute value of i",explanation:"The  <span>absolute value</span> of  <span>the complex constant i</span> is the  <span>number 1</span>. ",targets:"an  <span>absolute value</span> of the  <span>constant i</span> ",returns:"the  <span>number 1</span> ",effect:"This is a  <span>simplifying operation</span> since we have replaced an  <span>absolute value</span> with a natural  <span>number</span>. "},sv:{name:"kollapsa absolutbelopp av i",explanation:"Det absoluta värdet av  <span>den komplexa konstanten i</span> är  <span>talet 1</span>. ",targets:"ett  <span>absolutbelopp</span> av  <span>den komplexa konstanten i</span> ",returns:" <span>talet 1</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi har ersatt ett  <span>absolutbelopp</span> med ett  <span>naturligt tal</span>. "}},eqIToFalse:{en:{name:"collapse equality of complex number",explanation:"An  <span>equality</span> between a  <a href='#' class='wordlink' linkto='complexnum'>complex number</a> and a  <span>real number</span> is always  <span>false</span>. ",targets:"an  <span>equality</span> between a  <a href='#' class='wordlink' linkto='complexnum'>complex number</a> and a  <span>real number</span> ",returns:"the  <span>truth value</span>  <span>false</span> ",effect:"This is a  <span>simplifying operation</span> since we have  <span>collapsed</span> an  <span>equality</span> to a  <span>truth value</span>. "},sv:{name:"kollapsa likhet av komplext tal",explanation:"En  <span>likhet</span> mellan ett  <a href='#' class='wordlink' linkto='complexnum'>komplext tal</a> och ett reellt  <span>tal</span> är alltid  <span>falsk</span>. ",targets:"en  <span>likhet</span> mellan ett  <a href='#' class='wordlink' linkto='complexnum'>komplext tal</a> och ett reellt  <span>tal</span> ",returns:" <span>sanningsvärdet</span>  <span>falskt</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi kollapsat en  <span>likhet</span> till ett  <span>sanningsvärde</span>. "}},neqIToTrue:{sv:{name:"kollapsa förbjuden likhet av komplext tal",explanation:"En  <span>förbjuden likhet</span> mellan ett  <a href='#' class='wordlink' linkto='complexnum'>komplext tal</a> och ett reellt  <span>tal</span> är alltid  <span>sann</span>. ",targets:"en  <span>förbjuden likhet</span> mellan ett  <a href='#' class='wordlink' linkto='complexnum'>komplext tal</a> och ett reellt  <span>tal</span> ",returns:" <span>sanningsvärdet</span>  <span>sant</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi kollapsat en  <span>förbjuden likhet</span> till ett  <span>sanningsvärde</span>. "},en:{name:"collapse forbidden equality of complex number",explanation:"A  <span>forbidden equality</span> between a  <a href='#' class='wordlink' linkto='complexnum'>complex number</a> and a  <span>real number</span> is always  <span>true</span>. ",targets:"a  <span>forbidden equality</span> between a  <a href='#' class='wordlink' linkto='complexnum'>complex number</a> and a  <span>real number</span> ",returns:"the  <span>truth value</span>  <span>true</span> ",effect:"This is a  <span>simplifying operation</span> since we have  <span>collapsed</span> a  <span>forbidden equality</span> to a  <span>truth value</span>. "}},percentToFrac:{id:105,sv:{name:"skriv procent som kvot",explanation:" <span>Procent</span> är en  <span>konstant</span> som står för  <span>kvoten</span> 1/100. Vi kan därmed närsomhelst byta ut procentsymbolen mot den  <span>kvoten</span>. ",targets:" <span>procentkonstanten</span> ",returns:" <span>kvoten</span> 1/100 ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi inte längre har en  <span>konstant</span>, vilket gör det lättare att förenkla vidare. "},en:{name:"write per cent as fraction",explanation:" <span>Per cent</span> is a  <span>constant</span> representing the  <span>fraction</span> 1/100. We can therefore replace the  <span>percent</span> symbol with that  <span>fraction</span> at any time. ",targets:"the  <span>per cent</span> symbol ",returns:"the  <span>fraction</span> 1/00 ",effect:"This is a  <span>simplifying operation</span> since we no longer have a  <span>constant</span>, which makes it easier to  <span>simplify</span> further. "}},percentFacProdToFrac:{id:106,sv:{name:"skriv procentfaktor som kvot",explanation:"När  <span>procentkonstanten</span> är  <span>faktor</span> i en  <span>produkt</span> så kan vi ersätta den genom att ge  <span>produkten</span> en  <span>nämnare</span> med  <span>heltalet</span> 100. ",targets:"en  <span>produkt</span> med  <span>procentkonstanten</span> som  <span>faktor</span> ",returns:"en  <span>kvot</span> med  <span>nämnare</span> 100 ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi inte längre har en  <span>konstant</span>, vilket gör det lättare att förenkla vidare. ",steps:{turnpercenttofrac:"Först skriver vi om  <span>procentkonstanten</span> som en  <span>faktor</span>.",multotherfacsintopercentfrac:"Sedan flytter vi in övriga  <span>faktorer</span> i  <span>täljaren</span>."}},en:{name:"write per cent factor as fraction",explanation:"When the  <span>per cent constant</span> is  <span>factor</span> in a  <span>product</span>, it can be replaced by giving the  <span>product</span> a  <span>denominator</span> with the  <span>integer</span> 100. ",targets:"a  <span>product</span> with a  <span>per cent</span>  <span>factor</span> ",returns:"a  <span>fraction</span> with  <span>denominator</span> 100 ",effect:"This is a  <span>simplifying operation</span> since we no longer have a  <span>constant</span>, which makes it easier to  <span>simplify</span> further. ",steps:{turnpercenttofrac:"Först skriver vi om procentkonstanten som en faktor.",multotherfacsintopercentfrac:"Sedan flytter vi in övriga faktorer i täljaren."}}},iBaseTwoExpPowToNegOne:{id:107,sv:{name:"kollapsa kvadrat av konstanten i",explanation:" <span>Den komplexa konstanten i</span> är definierad att ha samma värde som  <span>-1</span> när den multipliceras med sig själv. Därför kan vi  <span>kollapsa</span> en  <span>potens</span> med  <span>den komplexa konstanten i</span> som  <span>bas</span> och 2 som  <span>exponent</span> till  <span>-1</span>. ",targets:"en  <span>potens</span> med  <span>den komplexa konstanten i</span> som  <span>bas</span> och 2 som  <span>exponent</span> ",returns:"det  <span>negativa</span>  <span>heltalet</span>  <span>-1</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi ersatt en  <span>potens</span> med ett  <span>heltal</span> ",steps:{splitpow:"Vi delar upp  <span>potensen</span> i en  <span>produkt</span> av två komplexa  <span>konstanter</span> i.",biiisnegone:"Nu kan vi utnyttja den speciella egenskapen hos  <span>den komplexa konstanten i</span> som säger att den multiplicerat med sig själv blir  <span>-1</span>."}},en:{name:"collapse square of constant i to -1",explanation:" <span>The complex constant i</span> is defined as having the same value as  <span>-1</span> when it is multiplied with itself. We can therefore exchange a  <span>power</span> with  <span>the complex constant i</span> as  <span>base</span> and  <span>exponent 2</span> with the  <span>negative</span>  <span>integer</span>  <span>-1</span>. ",targets:"a  <span>power</span> with  <span>the complex constant i</span> as  <span>base</span> and  <span>exponent 2</span> ",returns:"the  <span>negative</span>  <span>integer</span>  <span>-1</span> ",effect:"This is a  <span>simplifying operation</span> as we replace a  <span>power</span> with an  <span>integer</span>. ",steps:{splitpow:"We  <span>split</span> the  <span>power</span> into a  <span>product</span> of two  <span>factors</span> i.",biiisnegone:"Now we use the special characteristics of  <span>the complex constant i</span> which says that i times i equals  <span>-1</span>."}}},biIProdToNegOne:{id:153,sv:{name:"kollapsa produkt av två konstanter i",explanation:" <span>Den komplexa konstanten i</span> är definierad att ha samma värde som  <span>-1</span> när den multipliceras med sig själv. Därför kan vi byta ut en  <span>produkt</span> av två  <span>faktorer</span> som är  <span>den komplexa konstanten i</span> mot  <span>-1</span>. ",targets:"en  <span>produkt</span> av två  <span>faktorer</span> som är  <span>den komplexa konstanten i</span> ",returns:"det  <span>negativa</span>  <span>heltalet</span>  <span>-1</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi ersatt två  <span>faktorer</span> med ett  <span>heltal</span> "},en:{name:"collapse product of two constants i",explanation:" <span>The complex constant i</span> is defined as having the same value as  <span>-1</span> when it is multiplied with itself. We can therefore exchange a  <span>product</span> of two  <span>factors</span> being  <span>the complex constant i</span> with the  <span>negative</span>  <span>integer</span>  <span>-1</span>. ",targets:"a  <span>product</span> of two  <span>factors</span> being  <span>the complex constant i</span> ",returns:"the  <span>negative</span>  <span>integer</span>  <span>-1</span> ",effect:"This is a  <span>simplifying operation</span> as we replace two  <span>factors</span> with an  <span>integer</span>. "}},negOneToBiIProd:{id:192,sv:{name:"dela upp -1 till produkt av i",explanation:" <span>Den komplexa konstanten i</span> har, när den multipliceras med sig själv, samma värde som  <span>-1</span>. Vi kan därför byta ut  <span>-1</span> mot en  <span>produkt</span> av två  <span>faktorer</span> som är  <span>den komplexa konstanten i</span>. ",targets:"det  <span>negativa</span>  <span>heltalet</span>  <span>-1</span> ",returns:"en  <span>produkt</span> av två  <span>faktorer</span> som är  <span>den komplexa konstanten i</span> ",effect:"Detta är en  <span>komplicerande operation</span> eftersom vi ersatt ett  <span>tal</span> med en  <span>produkt</span>. "},en:{name:"split -1 to product of i",explanation:" <span>The complex constant i</span> is defined as having the same value as  <span>-1</span> when it is multiplied with itself. We can therefore exchange  <span>-1</span> for a  <span>product</span> of two  <span>factors</span> being  <span>the complex constant i</span>. ",targets:"the  <span>negative</span>  <span>integer</span>  <span>-1</span> ",returns:"a  <span>product</span> of two  <span>factors</span> being  <span>the complex constant i</span> ",effect:"This is a  <span>complicating operation</span> since we have replaced a  <span>number</span> with a  <span>product</span>. "}},negOneToISquared:{id:193,sv:{name:"dela upp -1 till kvadrat av konstanten i",explanation:" <span>Den komplexa konstanten i</span> har, när den multipliceras med sig själv, samma värde som  <span>-1</span>. Vi kan därför byta ut  <span>-1</span> mot en  <span>potens</span> med 2 som  <span>exponent</span> och  <span>den komplexa konstanten i</span> som  <span>bas</span>. ",targets:"det  <span>negativa</span>  <span>heltalet</span>  <span>-1</span> ",returns:"en  <span>potens</span> med 2 som  <span>exponent</span> och  <span>den komplexa konstanten i</span> som  <span>bas</span> ",effect:"Detta är en  <span>komplicerande operation</span> eftersom vi ersatt ett  <span>tal</span> med en  <span>potens</span>. "},en:{name:"split -1 to square of the constant i",explanation:" <span>The complex constant i</span> is defined as having the same value as  <span>-1</span> when it is multiplied with itself. We can therefore exchange  <span>-1</span> for a  <span>power</span> with  <span>the complex constant i</span> as  <span>base</span> and  <span>exponent 2</span>. ",targets:"the  <span>negative</span>  <span>integer</span>  <span>-1</span> ",returns:"a  <span>power</span> with  <span>the complex constant i</span> as  <span>base</span> and  <span>exponent 2</span> ",effect:"This is a  <span>complicating operation</span> since we have replaced a  <span>number</span> with a  <span>power</span>. "}},collapseIBaseEvenFacExpPow:{id:108,sv:{name:"kollapsa jämn potens av konstanten i",explanation:"Genom att utnyttja att  <span>den komplexa konstanten i</span> multiplicerat med sig själv blir  <span>-1</span>, så kan en  <span>potens</span> med  <span>konstanten i</span> som  <span>bas</span> och  <span>jämn</span> exponentfaktor  <span>kollapsas</span> till  <span>1</span> eller  <span>-1</span> upphöjt till kvarvarande exponentfaktorer. ",targets:"en  <span>potens</span> med  <span>konstanten i</span> som  <span>bas</span> och  <span>jämn</span> exponentfaktor ",returns:" <span>1</span> eller  <span>-1</span> upphöjt till kvarvarande exponentfaktorer ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi inte längre har en komplex  <span>bas</span>. ",steps:{collapseibaseexptwo:" <span>Konstanten i</span> upphöjt till 2 är  <span>-1</span>.",freetheexpfromneg:"Vi frigör  <span>exponenten</span> från  <span>negationen</span>.",flattenexpprod:"Sedan jämnar vi ut  <span>exponenten</span> till en enda  <span>produkt</span>.",freechosenfacfromneg:"Vi frigör den jämna exponentfaktorn från sin  <span>negation</span>.",extractevenfacfrombase:"Den jämna  <span>exponenten</span> är dold i en  <span>bas</span>, så vi lyfter ut en  <span>faktor</span>.",factorisetofreetwo:"Vi  <span>faktoriserar</span> den jämna  <span>exponenten</span> så att vi får fram  <span>faktorn</span> 2.",buildpowwithexptwo:"Nu bygger vi en  <span>potens</span> med  <span>bas</span> i och  <span>faktorn</span> 2 som  <span>exponent</span>, genom att lyfta upp övriga exponentfaktorer till en yttre  <span>exponent</span>.",collapsenegonebasepowoddexp:"Den skapade  <span>potensen</span> av  <span>-1</span> och  <span>udda</span>  <span>faktor</span> kan också  <span>kollapsas</span>.",collapsenegonebasepowevenexp:"Den skapade  <span>potensen</span> av  <span>-1</span> och  <span>jämn</span>  <span>faktor</span> kan också  <span>kollapsas</span>.",cleanupresidueone:" <span>Potensen</span>  <span>kollapsade</span> till en  <span>faktor</span>  <span>1</span>, som vi kan ignorera.",cleanupresiduenegone:" <span>Potensen</span>  <span>kollapsade</span> till en  <span>faktor</span>  <span>-1</span>, som vi använder för att negera resultatet."}},en:{name:"collapse even power of constant i",explanation:"By using the fact that  <span>the complex constant i</span> multiplied with itself equals  <span>-1</span>, a  <span>power</span> with  <span>base</span> i and an  <span>even</span>  <span>exponent</span>  <span>factor</span> can be  <span>collapsed</span> to  <span>1</span> or  <span>-1</span> raised by the remaining  <span>exponent</span>  <span>factors</span>. ",targets:"a  <span>power</span> with  <span>base</span> i and an  <span>even</span>  <span>exponent</span>  <span>factor</span> ",returns:" <span>1</span> or  <span>-1</span>, raised by the remainining  <span>exponent</span>  <span>factors</span> ",effect:"This is a  <span>simplifying operation</span> since we no longer have a complex  <span>power</span>. ",steps:{collapseibaseexptwo:"The  <span>constant i</span> raised by 2 is  <span>-1</span>.",freetheexpfromneg:"We free the  <span>exponent</span> from the  <span>negation</span>.",flattenexpprod:"Then we  <span>flatten</span> the  <span>exponent</span> to a single  <span>product</span>.",freechosenfacfromneg:"We free the  <span>even</span>  <span>exponent</span>  <span>factor</span> from the  <span>negation</span>.",extractevenfacfrombase:"The  <span>even</span>  <span>exponent</span> is hidden in a  <span>base</span>, so we extract a single  <span>factor</span>.",factorisetofreetwo:"We  <span>factorise</span> the  <span>even</span>  <span>exponent</span> to reveal a  <span>factor</span> 2.",buildpowwithexptwo:"Now we build a  <span>power</span> with only the  <span>factor</span> 2 as  <span>exponent</span>, by using the remaining  <span>exponent</span>  <span>factor</span> as an outer  <span>exponent</span>.",collapsenegonebasepowoddexp:"The created  <span>power</span> with  <span>base</span>  <span>-1</span> and an  <span>odd</span>  <span>factor</span> can also be  <span>collapsed</span>.",collapsenegonebasepowevenexp:"The created  <span>power</span> with  <span>base</span>  <span>-1</span> and an  <span>even</span>  <span>factor</span> can also be  <span>collapsed</span>.",cleanupresidueone:"That  <span>power</span>  <span>collapsed</span> to a  <span>factor</span>  <span>1</span>, which we can ignore.",cleanupresiduenegone:"That  <span>power</span>  <span>collapsed</span> to a  <span>factor</span>  <span>-1</span>, which we use to negate our result."}}},collapseIBaseOddFacExpPow:{id:109,sv:{name:"ta bort udda faktor från potens av i",explanation:"En  <span>udda</span> exponentfaktor i  <span>potens</span> med  <span>konstanten i</span> som  <span>bas</span> kan  <span>tas bort</span>, genom att utnyttja de speciella egenskaper  <span>konstanten i</span> har när den multipliceras med sig själv. ",targets:"en  <span>potens</span> med  <span>konstanten i</span> som  <span>bas</span> och  <span>udda</span> exponentfaktor ",returns:"i eller -i, upphöjt till övriga exponentfaktorer ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi  <span>tagit bort</span> exponentfaktorer. ",steps:{freetheexpfromneg:"Vi frigör  <span>exponenten</span> från  <span>negationen</span>.",flattenexpprod:"Sedan jämnar vi ut  <span>exponenten</span> till en enda  <span>produkt</span>.",freechosenfacfromneg:"Vi frigör den  <span>udda</span> exponentfaktorn från sin  <span>negation</span>.",buildoddexppow:"Nu bygger vi en  <span>potens</span> med enbart den  <span>udda</span>  <span>faktorn</span> som  <span>exponent</span>, genom att lyfta upp övriga exponentfaktorer till en yttre  <span>exponent</span>.",extractsingleifrompow:"Vi bryter ut en ensam  <span>faktor</span> av  <span>konstanten i</span> ur  <span>potensen</span>, så att vi får kvar en  <span>potens</span> med  <span>konstanten i</span> som  <span>bas</span> och  <span>jämn</span>  <span>exponent</span>. Dessa kan nämligen alltid  <span>kollapsas</span> till  <span>1</span> eller  <span>-1</span>!",collapseremainingevenexpfacpow:"Nu  <span>kollapsar</span> vi  <span>potensen</span> av  <span>konstanten i</span> med den jämna  <span>exponenten</span>.",cleanupresidueone:"Den blev  <span>1</span>, vilket vi kan  <span>ta bort</span>. Kvar är nu bara vårt utlyfta ensamma  <span>konstant</span> i!",cleanupresiduenegone:"Den blev  <span>-1</span>, vilket vi använder för att negera vårt ensamma utlyfta  <span>konstant</span> i.",putnegback:"Slutligen sätter vi tillbaka  <span>negationen</span> runt  <span>exponenten</span>."}},en:{name:"remove odd factor from power of i",explanation:"An  <span>odd</span>  <span>exponent</span>  <span>factor</span> in a  <span>power</span> with  <span>base</span> i can be  <span>removed</span>, by using the special qualities the  <span>constant i</span> has when multiplied with itself. ",targets:"a  <span>power</span> with the  <span>constant i</span> as  <span>base</span> and an  <span>odd</span>  <span>exponent</span>  <span>factor</span> ",returns:"i or -i, raised by the other  <span>exponent</span>  <span>factors</span> ",effect:"This is a simplfying  <span>operation</span> since we have  <span>removed</span>  <span>exponent</span>  <span>factors</span>. ",steps:{freetheexpfromneg:"We free the  <span>exponent</span> from the  <span>negation</span>.",flattenexpprod:"Then we  <span>flatten</span> the  <span>exponent</span> to a single  <span>product</span>.",freechosenfacfromneg:"We free the  <span>odd</span>  <span>exponent</span>  <span>factor</span> from the  <span>negation</span>.",buildoddexppow:"Now we build a  <span>power</span> with only the  <span>odd</span>  <span>factor</span> as  <span>exponent</span>, by using the remaining  <span>exponent</span>  <span>factor</span> as an outer  <span>exponent</span>.",extractsingleifrompow:"We break out a single i from the  <span>power</span>, leaving a  <span>power</span> with  <span>constant i</span> as  <span>base</span> and an  <span>even</span>  <span>exponent</span>. These can always be  <span>collapsed</span> to  <span>1</span> or  <span>-1</span>!",collapseremainingevenexpfacpow:"Now we  <span>collapse</span> the  <span>power</span> of the  <span>constant i</span> with the  <span>even</span>  <span>exponent</span>.",cleanupresidueone:"It became  <span>1</span>, which we can  <span>remove</span>. Now only our single  <span>constant i</span> remains!",cleanupresiduenegone:"It became  <span>-1</span>, which we use to negate our single remaining  <span>constant i</span>.",putnegback:"Finally we put the  <span>negation</span> back around the  <span>exponent</span>."}}},collapseRootAndSimplify:{id:279,sv:{name:"kollapsa rot och förenkla",explanation:"En  <span>rot</span> av en  <span>potens</span> med samma  <span>exponent</span> som  <span>rotens grad</span> kan  <span>kollapsas</span> till en  <span>logisk gren</span>, där vi sedan kan välja väg beroende på om  <span>exponenten</span> är delbar med 2 eller inte. ",targets:"en  <span>rot</span> av  <span>potens</span> med  <span>exponent</span> identisk med  <span>rotens grad</span> ",returns:"olika beroende på hur långt vi kan förenkla ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi inte längre har en  <span>rot</span>. ",steps:{collapseroot:"Först  <span>kollapsar</span> vi  <span>roten</span> till en  <span>logisk förgrening</span>.",evaltest:"Vi utvärderar huruvida  <span>exponenten</span> är delbar med 2, vilket avgör om vi får  <span>potensens</span>  <span>bas</span> eller  <span>absolutbeloppet</span> av  <span>potensens</span>  <span>bas</span>.",choosebranch:"Nu väljer vi gren!",collapseabs:"Eftersom  <span>basen</span> var en  <span>negation</span> så kan den  <span>tas bort</span> i och med  <span>absolutbeloppet</span>.",andfinallyabsnum:"Nu har vi ett  <span>absolutbelopp</span> av ett  <span>tal</span>, vilket vi kan förenkla!"}},en:{name:"collapse root and simplify",explanation:"A  <span>root</span> of a  <span>power</span> with the same  <span>exponent</span> as the  <span>root grade</span> can be  <span>collapsed</span> to a  <span>logic branching</span>, where we can then choose branch depending on whether or not the  <span>exponent</span> is divisible by 2. ",targets:"a  <span>root</span> of  <span>power</span> with  <span>exponent</span> identical to the  <span>root grade</span> ",returns:"different objects depending on how far we can  <span>simplify</span> ",effect:"This is a  <span>simplifying operation</span> as we no longer have a  <span>root</span>. ",steps:{collapseroot:"First we  <span>collapse</span> the  <span>root</span> to a  <span>logic branching</span>.",evaltest:"We evaluate if the  <span>exponent</span> is divisible by 2, which decides what branch to take.",choosebranch:"Now we select branch!",collapseabs:"Because the  <span>power base</span> was a  <span>negation</span>, that  <span>negation</span> can now be  <span>removed</span> since it is inside an  <span>absolute value</span>.",andfinallyabsnum:"This leaves us with an  <span>absolute value</span> of an  <span>integer</span>, which we can  <span>collapse</span>!"}}},objToRootProd:{id:243,sv:{name:"omvandla uttryck till rotprodukt",explanation:"Alla  <span>uttryck</span> kan skrivas som en  <span>produkt</span> av två kvadratrötter av  <span>uttrycket</span>. ",targets:"ett  <span>uttryck</span> ",returns:"en  <span>produkt</span> av två kvadratrötter av  <span>uttrycket</span> ",effect:"Detta är en  <span>komplicerande operation</span> eftersom vi ersätter ett  <span>uttryck</span> med en  <span>produkt</span> av  <span>rötter</span>. ",steps:{createexptosplit:"Först  <span>introducerar</span> vi en  <span>exponent</span>  <span>1</span> som vi sedan kan dela upp.",exptofrac:"Nu delar vi upp  <span>exponenten</span> till en  <span>kvot</span>.",splitexpnumer:"Vi delar upp  <span>täljaren</span> i exponentkvoten för att kunna dela upp den.",splitexptosum:"Nu delar vi upp  <span>exponenten</span> i en  <span>summa</span> av  <span>kvoter</span>, som kommer utgöra var sin  <span>exponent</span>.",toprod:"Vi omvandlar  <span>potensen</span> till en  <span>produkt</span> av två  <span>potenser</span>, som vi sedan kommer skriva om som  <span>rötter</span>.",firsttoroot:"Slutligen skriver vi första  <span>potensen</span> som en  <span>rot</span>...",andsecondtoroot:"...och sedan den andra. Nu har vi en  <span>produkt</span> av kvadratrötter av vårt ursprungliga  <span>uttryck</span>!"}},en:{name:"transform expression to root product",explanation:"Any  <span>expression</span> can be written as a  <span>product</span> of two  <span>square roots</span> of that  <span>expression</span>. ",targets:"an  <span>expression</span> ",returns:"a  <span>product</span> of two  <span>square roots</span> of the  <span>expression</span> ",effect:"This is a  <span>complicating operation</span> since we replace an  <span>expression</span> with a  <span>product</span> of  <span>roots</span>. ",steps:{createexptosplit:"First we  <span>introduce</span> an  <span>exponent</span> which we can then  <span>split</span>.",exptofrac:"Now we  <span>split</span> the  <span>exponent</span> into a  <span>fraction</span>, which we will now work to  <span>split</span> to a  <span>sum</span>.",splitexpnumer:"The first step towards making it a  <span>sum</span> is to  <span>split</span> the  <span>numerator</span> into a  <span>sum</span>.",splitexptosum:"Now we  <span>split</span> the  <span>fraction</span> into two  <span>fraction terms</span>, giving us a  <span>power</span> with a  <span>sum exponent</span>.",toprod:"A  <span>power</span> with a  <span>sum exponent</span> we can  <span>split</span> into a  <span>product</span> of  <span>powers</span>.",firsttoroot:"Finally we rewrite the first as a  <span>root</span>...",andsecondtoroot:"...and then the second. Now we have a  <span>product</span> of  <span>square roots</span> of our original  <span>expression</span>!"}}},simplifyRootWithNegIndex:{id:230,sv:{name:"förenkla rot med negativt index",explanation:"En  <span>rot</span> med negativt index kan omformuleras till en  <span>kvot</span> med samma  <span>rot</span> i  <span>nämnaren</span> fast med positivt index. ",targets:"en  <span>rot</span> med negativt index ",returns:"en  <span>kvot</span> med  <span>täljare</span>  <span>1</span> och  <span>rot</span> med positivt index i  <span>nämnaren</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi slipper en  <span>negativ</span>  <span>rotgrad</span>. ",steps:{rewritetopow:"Först formulerar vi  <span>roten</span> som en  <span>potens</span>, för att kunna använda potensreglerna.",extractnegtofracexp:"Vi flyttar  <span>negationen</span> från  <span>nämnaren</span> till  <span>kvoten</span>, med avsikt att använda den som en yttre  <span>exponent</span>.",splitnegexp:"Nu bryter vi ut  <span>negationen</span> till en egen  <span>faktor</span>  <span>-1</span>.",buildup:"Den  <span>faktorn</span>  <span>-1</span> använder vi nu som en yttre  <span>exponent</span>.",turntofrac:"En  <span>potens</span> med  <span>negativ exponent</span> kan vi göra om till en med positiv  <span>exponent</span> genom att degradera den till  <span>nämnaren</span>.",backtorootform:"Slutligen skriver vi tillbaka  <span>potensen</span> på rotform, och vi är klara!"}},en:{name:"simplify root with negative grade",explanation:"A  <span>root</span> with a  <span>negative</span>  <span>grade</span> can be rephrased to a  <span>fraction</span> with the same  <span>root</span> in the  <span>denominator</span> but with positive index. ",targets:"a  <span>root</span> with a  <span>negative</span> index ",returns:"a  <span>fraction</span> with  <span>numerator</span>  <span>1</span> and a positive index in the  <span>numerator</span> ",effect:"This is a  <span>simplifying operation</span> since we no longer have a  <span>negative</span>  <span>root</span> index. ",steps:{rewritetopow:"First we phrase the  <span>root</span> as a  <span>power</span>, so we can use the  <span>power</span> rules.",extractnegtofracexp:"We move the  <span>negation</span> from the  <span>denominator</span> to the  <span>fraction</span>, intending to use it as an outer  <span>exponent</span>.",splitnegexp:"We extract the  <span>negation</span> to a  <span>factor</span>  <span>-1</span>.",buildup:"That  <span>factor</span>  <span>-1</span> we now use as an outer  <span>power</span>.",turntofrac:"Now we have a  <span>power</span> with a  <span>negative exponent</span>, which we can give a positive  <span>exponent</span> by demoting it to a  <span>denominator</span>.",backtorootform:"Finally we rewrite the  <span>power</span> back to  <span>root</span> form, and we're done!"}}},simplifyRootWithFracIndex:{id:229,sv:{name:"förenkla rot med kvotindex",explanation:"En  <span>rot</span> med kvotindex kan omformuleras till en  <span>rot</span> med indexets  <span>nämnare</span> som index, och  <span>radikanden</span> for indexets  <span>täljare</span> som  <span>potens</span>. ",targets:"en  <span>rot</span> med kvotindex ",returns:"en  <span>rot</span> av en  <span>potens</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi slipper ett kvotindex. ",steps:{rewritetofrac:"Först skriver vi  <span>roten</span> på potensform.  <span>Exponenten</span> blir då en  <span>kvot</span> där  <span>nämnaren</span> är en  <span>kvot</span>.",flattenexp:"Den  <span>kvoten</span> jämnar vi nu ut.",thentoroot:"Det ger oss en  <span>potens</span> med kvotexponent, vilket vi kan omformulera till en enklare  <span>rot</span> än vad vi utgick ifrån!"}},en:{name:"simplify root with fraction index",explanation:"A  <span>root</span> with a  <span>fraction</span>  <span>grade</span> can be rephrased as a  <span>root</span> with the  <span>grade</span>  <span>numerator</span> as  <span>grade</span>, and  <span>the radicand</span> gets the index  <span>numerator</span> as an  <span>exponent</span>. ",targets:"a  <span>root</span> with  <span>fraction</span>  <span>grade</span> ",returns:"a  <span>root</span> of a  <span>power</span> ",effect:"This is a  <span>simplifying operation</span> since we no longer have a  <span>fraction</span> index. ",steps:{rewritetofrac:"First we rewrite the  <span>root</span> as a  <span>power</span>. The  <span>exponent</span> then becomes a  <span>fraction</span> where the  <span>denominator</span> is a  <span>fraction</span>.",flattenexp:"That  <span>fraction</span> we can  <span>flatten</span>.",thentoroot:"That gave us a  <span>power</span> with a  <span>fraction</span>  <span>exponent</span>, which we can  <span>rephrase</span> as a simpler  <span>root</span> than the one we started with!"}}},collapseRootWithIndexOne:{id:228,sv:{name:"kollapsa rot med grad 1",explanation:"En  <span>rot</span> av grad  <span>1</span> representerar det  <span>tal</span> som multiplicerat med sig själv en gång blir  <span>radikanden</span>. Detta är så klart  <span>radikanden</span> själv, så en  <span>rot</span> av grad  <span>1</span> kan  <span>kollapsas</span> till  <span>radikanden</span>. ",targets:"en  <span>rot</span> med grad  <span>1</span> ",returns:" <span>rotens</span>  <span>radikand</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi  <span>tagit bort</span>  <span>rotgraden</span>. ",steps:{rewritetofrac:"Först skriver vi om  <span>roten</span> som den  <span>potens</span> den egentligen är.",collapseexp:"Vi  <span>tar bort</span>  <span>nämnaren</span>  <span>1</span> från  <span>exponenten</span>.",collapsepow:"Nu är  <span>exponenten</span>  <span>1</span> vilket kan  <span>tas bort</span>, och så återstår endast  <span>radikanden</span>!"}},en:{name:"collapse root with degree 1",explanation:"A  <span>root</span> with degree  <span>1</span> represents the  <span>number</span> that multiplied with itself one time becomes  <span>the radicand</span>. This is of course  <span>the radicand</span> itself, and so a  <span>root</span> with degree  <span>1</span> can be  <span>collapsed</span> to  <span>the radicand</span>. ",targets:"a  <span>root</span> with degree  <span>1</span> ",returns:"the  <span>root</span>  <span>radicand</span> ",effect:"This is a  <span>simplifying operation</span> since we have  <span>removed</span> the  <span>root</span> degree. ",steps:{rewritetofrac:"First we rewrite the  <span>root</span> as the  <span>power</span> it is.",collapseexp:"We  <span>remove</span> the  <span>denominator</span>  <span>1</span> from the  <span>exponent</span>.",collapsepow:"Now the  <span>exponent</span> is  <span>1</span> which can be  <span>removed</span>, leaving only  <span>the radicand</span>."}}},rootWithGradeZeroToUndef:{id:227,sv:{name:"förbjud rot med grad 0",explanation:"En  <span>rot</span> av grad  <span>0</span> representerar det  <span>tal</span> som multiplicerat med sig själv  <span>0</span> gånger blir  <span>radikanden</span>. Detta är omöjligt, så en  <span>rot</span> av grad  <span>0</span> är  <span>odefinierad</span>. ",targets:"en  <span>rot</span> med grad  <span>0</span> ",returns:" <span>odefinierad</span> ",effect:"Detta är en  <span>integritetsoperation</span> eftersom vi ersatt en förbjuden  <span>rot</span> med  <span>odefinierat</span>. ",steps:{rewritetofrac:"Först skriver vi om  <span>roten</span> som den  <span>potens</span> den egentligen är.",exptoundef:"Eftersom  <span>rotgraden</span> var  <span>0</span> blev  <span>exponentens</span>  <span>nämnare</span>  <span>0</span>, vilket inte är definierat.",nowalltoundef:"Då en del av  <span>uttrycket</span> är  <span>odefinierat</span> så är hela  <span>uttrycket</span>  <span>odefinierat</span>."}},en:{name:"forbid root with grade 0",explanation:"A  <span>root</span> with  <span>grade</span>  <span>0</span> represents the  <span>number</span> that multiplied with itself  <span>0</span> times becomes  <span>the radicand</span>. This makes no sense, and so a  <span>root</span> with  <span>grade</span>  <span>0</span> is  <span>undefined</span>. ",targets:"a  <span>root</span> with  <span>grade</span>  <span>0</span> ",returns:" <span>undefined</span> ",effect:"This is an integrity checking  <span>operation</span> since we have replaced an illegal  <span>root</span> with  <span>undefined</span>. ",steps:{rewritetofrac:"First we rewrite the  <span>root</span> as the  <span>power</span> it is.",exptoundef:"Since the  <span>root grade</span> was  <span>0</span> the  <span>exponent</span>  <span>denominator</span> became  <span>0</span>, which isn't defined.",nowalltoundef:"Now a part of the  <span>expression</span> is  <span>undefined</span>, which makes the whole  <span>expression</span>  <span>undefined</span>."}}},rootToOneNumFracExpPow:{id:225,sv:{name:"skriv rot som potens",explanation:"En  <span>rot</span> är bara ett specialfall av en  <span>potens</span>, och kan därför skrivas ut som den  <span>potensen</span>!  <span>Radikanden</span> blir  <span>roten</span>, och  <span>exponenten</span> är en  <span>kvot</span> med  <span>1</span> som  <span>täljare</span> och  <span>rotens grad</span> som  <span>nämnare</span>. ",targets:"en  <span>rot</span> ",returns:"en  <span>potens</span> med kvotexponent med  <span>täljare</span>  <span>1</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom vi vill markera dessa  <span>potensers</span> speciella egenskaper genom att skriva dem som  <span>rötter</span>. "},en:{name:"rewrite root as power",explanation:"A  <span>root</span> is just a special case of a  <span>power</span>, and can therefore be rewritten as that  <span>power</span>.  <span>The radicand</span> becomes the  <span>base</span>, and the  <span>exponent</span> is a  <span>fraction</span> with  <span>1</span> as  <span>numerator</span> and the  <span>root</span> degree as  <span>denominator</span>. ",targets:"a  <span>root</span> ",returns:"a  <span>power</span> with a  <span>fraction</span>  <span>exponent</span> ",effect:"This is a  <span>complicating operation</span>, since we want to note the special characteristics of this kind of  <span>power</span> by writing them as  <span>roots</span>. "}},rootOfZeroIsZero:{id:223,sv:{name:"kollapsa rot med radikand 0 till 0",explanation:"Om  <span>radikanden</span> är  <span>0</span> så är  <span>roten</span>  <span>0</span>, oavsett vilken graden är. Detta beror på att  <span>0</span> kan skrivas om till en  <span>potens</span> med  <span>0</span> som  <span>bas</span> och vilken  <span>exponent</span> som helst. ",targets:"en  <span>rot</span> med  <span>radikanden</span>  <span>0</span> ",returns:" <span>talet 0</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi ersatt en  <span>rot</span> med  <span>talet 0</span>. ",steps:{firstturn0topow:"Först delar vi  <span>radikanden</span>  <span>0</span> till en  <span>potens</span> där  <span>exponenten</span> är  <span>rotens grad</span>.",thencollapseroot:"Vi har nu en  <span>rot</span> av en  <span>potens</span> där  <span>exponenten</span> är lika med  <span>rotens grad</span>, vilket vi kan  <span>kollapsa</span> till  <span>potensens</span>  <span>bas</span>, det vill säga  <span>0</span>!"}},en:{name:"collapse root with radicand 0 to 0",explanation:"If  <span>the radicand</span> is  <span>0</span> then the  <span>root</span> is  <span>0</span>, no matter what the degree is. This is because  <span>0</span> can be rewritten as an  <span>exponent</span> with  <span>base</span>  <span>0</span> and any  <span>exponent</span>. ",targets:"a  <span>root</span> with  <span>radicand</span>  <span>0</span> ",returns:"the  <span>number 0</span> ",effect:"This is a  <span>simplifying operation</span> since we have replaced a  <span>root</span> with the  <span>number 0</span>. ",steps:{firstturn0topow:"First we  <span>split</span>  <span>the radicand</span>  <span>0</span> into a  <span>power</span> where the  <span>exponent</span> is the  <span>root</span> degree.",thencollapseroot:"That gave us a  <span>root</span> of a  <span>power</span> where the  <span>exponent</span> is equal to the  <span>root</span> degree, which we can  <span>collapse</span> to the  <span>power base</span>, which is  <span>0</span>!"}}},fracExpPowToRoot:{id:222,sv:{name:"skriv om potens med kvotexponent",explanation:"En  <span>potens</span> med kvotexponent kan omformuleras till en  <span>rot</span> av en ny  <span>potens</span>. ",targets:"en  <span>potens</span> med kvotexponent ",returns:"en  <span>rot</span> av en  <span>potens</span> ",effect:"Vi har egentligen bara omformulerat  <span>uttrycket</span> men  <span>operationen</span> räknas ändå som  <span>förenklande</span>, eftersom vi tydliggör rotdelen vilket möjliggör vidare  <span>förenkling</span>. ",steps:{extractnum:"Först bryter vi ut  <span>täljaren</span> från kvotexponenten, för att frigöra en  <span>kvot</span> med  <span>täljare</span>  <span>1</span>.",buildtower:"Nu har vi en  <span>potens</span> med  <span>produktexponent</span>, vilket vi kan omformulera till en  <span>potens</span> med  <span>potens</span> som  <span>bas</span>.",thenrootify:"Vår nya  <span>potens</span> har en  <span>kvot</span> med  <span>täljare</span>  <span>1</span> som  <span>exponent</span>, vilket vi kan skriva om som en  <span>rot</span>!"}},en:{name:"rewrite power with fraction exponent",explanation:"A  <span>power</span> with a  <span>fraction</span>  <span>exponent</span> can be rewritten as a  <span>root</span> of a  <span>power</span>. ",targets:"a  <span>power</span> with a  <span>fraction</span>  <span>exponent</span> ",returns:"a  <span>root</span> of a  <span>power</span> ",effect:"We have really just rephrased the  <span>expression</span>, but the  <span>operations</span> can still be said to be  <span>simplifying</span> since a  <span>root</span> part is now clearly expressed, which is easier to  <span>approximate</span> or  <span>simplify</span> further. ",steps:{extractnum:"First we extract the  <span>numerator</span> from the  <span>fraction</span>  <span>exponent</span>, which frees a  <span>fraction</span> with  <span>numerator</span>  <span>1</span>.",buildtower:"Now we have a  <span>power</span> with a  <span>product exponent</span>, which we can  <span>rephrase</span> as a  <span>power</span> with a  <span>power base</span>.",thenrootify:"Our new  <span>power</span> has a  <span>fraction</span> with  <span>numerator</span>  <span>1</span> as  <span>exponent</span>, and this we can rewrite as a  <span>root</span>!"}}},oneNumFracExpPowToRoot:{id:221,sv:{name:"skriv potens som rot",explanation:" <span>Potenser</span> där  <span>exponenten</span> är en  <span>kvot</span> med  <span>täljare</span>  <span>1</span> har väldigt speciella egenskaper och har därför fått ett eget namn och skrivsätt, nämligen  <span>rot</span>. ",targets:"en  <span>potens</span> där  <span>exponenten</span> är en  <span>kvot</span> med  <span>täljare</span>  <span>1</span> ",returns:"en  <span>rot</span> där  <span>radikanden</span> är  <span>potensens</span>  <span>bas</span> och graden är  <span>exponentens</span>  <span>nämnare</span> ",effect:"Trots att detta bara är en omskrivning så räknar vi detta som en  <span>förenklande operation</span>, eftersom det nu är tydligt att denna  <span>potens</span> har rotegenskaper. "},en:{name:"rewrite power as root",explanation:" <span>Powers</span> where the  <span>exponent</span> is a  <span>fraction</span> with  <span>numerator</span>  <span>1</span> have very special qualities and have therefore received their own name and notation, namely  <span>roots</span>. ",targets:"a  <span>power</span> where the  <span>exponent</span> is a  <span>fraction</span> with  <span>numerator</span>  <span>1</span> ",returns:"a  <span>root</span> where  <span>the radicand</span> is the  <span>power base</span> and the  <span>root grade</span> is the  <span>exponent</span>  <span>denominator</span> ",effect:" <span>Even though</span> this is just a  <span>rephrasing</span> we consider this a  <span>simplifying operation</span>, since it is now clear that the  <span>power</span> has  <span>root</span> characteristics. "}},rootOfFracToFracOfRootsAndSimplify:{id:180,sv:{name:"förenkla rot av kvot",explanation:"En  <span>rot</span> av en  <span>kvot</span> kan skrivas som en  <span>kvot</span> av  <span>rötter</span>, vilket är fördelaktigt om vi också kan förenkla  <span>roten</span> i  <span>täljaren</span> och/eller  <span>nämnaren</span>. ",targets:"en  <span>rot</span> av en  <span>kvot</span> ",returns:"en  <span>kvot</span> av  <span>rötter</span> där en eller båda förenklats ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi kunde förenkla  <span>täljaren</span> och/eller  <span>nämnaren</span> efter omskrivningen. ",steps:{firstmakeintofrac:"Först  <span>omformulerar</span> vi  <span>roten</span> till en  <span>kvot</span> av  <span>rötter</span>.",nowwesimplifynumerbycollapserootandsimplify:"I  <span>täljaren</span> fick vi en  <span>rot</span> av en  <span>potens</span> med samma  <span>exponent</span> som  <span>rotens grad</span>, vilket vi kan  <span>kollapsa</span>!",nowwesimplifydenombycollapserootandsimplify:"I  <span>nämnaren</span> fick vi en  <span>rot</span> av en  <span>potens</span> med samma  <span>exponent</span> som  <span>rotens grad</span>, vilket vi kan  <span>kollapsa</span>!",nowwesimplifynumerbycollapseinnerexpnumroot:"I  <span>täljaren</span> fick vi en  <span>rot</span> av en  <span>potens</span> vars  <span>exponent</span> är delbar med  <span>rotens grad</span>, vilket vi kan  <span>kollapsa</span>!",nowwesimplifydenombycollapseinnerexpnumroot:"I  <span>nämnaren</span> fick vi en  <span>rot</span> av en  <span>potens</span> vars  <span>exponent</span> är delbar med  <span>rotens grad</span>, vilket vi kan  <span>kollapsa</span>!",nowwesimplifynumerbycollapsesecretnumroot:"I  <span>täljaren</span> fick vi en  <span>rot</span> av ett  <span>heltal</span> som kan skrivas som en  <span>potens</span> med samma  <span>exponent</span> som  <span>rotens grad</span>. Det kan vi  <span>kollapsa</span>!",nowwesimplifydenombycollapsesecretnumroot:"I  <span>nämnaren</span> fick vi en  <span>rot</span> av ett  <span>heltal</span> som kan skrivas som en  <span>potens</span> med samma  <span>exponent</span> som  <span>rotens grad</span>. Det kan vi  <span>kollapsa</span>!",nowwesimplifynumerbycollapsenegnquareroot:"I  <span>täljaren</span> fick vi en kvadratrot av en  <span>negation</span>, vilket vi kan förenkla!",nowwesimplifydenombycollapsenegsquareroot:"I  <span>täljaren</span> fick vi en kvadratrot av en  <span>negation</span>, vilket vi kan förenkla!"}},en:{name:"simplify root of fraction",explanation:"A  <span>root</span> of a  <span>fraction</span> can be written as a  <span>fraction</span> of  <span>roots</span>, which is advantageous only if we can then  <span>simplify</span> the  <span>root</span> in the  <span>numerator</span> and/or  <span>denominator</span>. ",targets:"a  <span>root</span> of a  <span>fraction</span> ",returns:"a  <span>fraction</span> of  <span>roots</span> where one or both have been  <span>simplified</span> ",effect:"This is a  <span>simplifying operation</span> since we could  <span>simplify</span> the  <span>numerator</span> and/or  <span>denominator</span> after the rewrite of the  <span>root</span> to a  <span>fraction</span>. ",steps:{firstmakeintofrac:"First we  <span>rephrase</span> the  <span>root</span> as a  <span>fraction</span> of  <span>roots</span>.",nowwesimplifynumerbycollapserootandsimplify:"In the  <span>numerator</span> we got a  <span>root</span> of a  <span>power</span> with the same  <span>exponent</span> as the  <span>root grade</span>, which we can  <span>collapse</span>!",nowwesimplifydenombycollapserootandsimplify:"In the  <span>denominator</span> we got a  <span>root</span> of a  <span>power</span> with the same  <span>exponent</span> as the  <span>root grade</span>, which we can  <span>collapse</span>!",nowwesimplifynumerbycollapseinnerexpnumroot:"In the  <span>numerator</span> we got a  <span>root</span> of a  <span>power</span> with an  <span>exponent</span> that is divisible by the  <span>root grade</span>. This can be  <span>simplified</span>!",nowwesimplifydenombycollapseinnerexpnumroot:"In the  <span>numerator</span> we got a  <span>root</span> of a  <span>power</span> with an  <span>exponent</span> that is divisible by the  <span>root grade</span>. This can be  <span>simplified</span>!",nowwesimplifynumerbycollapsesecretnumroot:"In the  <span>numerator</span> we got a  <span>root</span> of an  <span>integer</span> which can be written as a  <span>power</span> with the same  <span>exponent</span> as the  <span>root grade</span>. This can be  <span>simplified</span>!",nowwesimplifydenombycollapsesecretnumroot:"In the  <span>denominator</span> we got a  <span>root</span> of an  <span>integer</span> which can be written as a  <span>power</span> with the same  <span>exponent</span> as the  <span>root grade</span>. This can be  <span>simplified</span>!",nowwesimplifynumerbycollapsenegnquareroot:"In the  <span>numerator</span> we got a  <span>root</span> of a  <span>negation</span>, which can be  <span>simplified</span>!",nowwesimplifydenombycollapsenegsquareroot:"In the  <span>denominator</span> we got a  <span>root</span> of a  <span>negation</span>, which can be  <span>simplified</span>!"}}},fracOfRootsToRootOfFrac:{id:178,sv:{name:"omvandla kvot av rötter till rot",explanation:"En  <span>kvot</span> av  <span>rötter</span> med samma grad kan skrivas om som en enda  <span>rot</span>, där den nya  <span>radikanden</span> blir  <span>kvoten</span> av  <span>radikanderna</span>. ",targets:"en  <span>kvot</span> av  <span>rötter</span> med samma grad ",returns:"en  <span>rot</span> av en  <span>kvot</span> ",effect:"Egentligen är detta inte  <span>förenklande</span>, men det är brukligt att göra denna omskrivning när varken täljarroten eller nämnarroten går att förenkla. ",steps:{rewritenumerator:"Först skriver vi om täljarroten som en  <span>potens</span>...",rewritedenominator:"...och sedan skriver vi om nämnarroten på samma sätt.",nowchangetopow:"Nu har vi en  <span>kvot</span> av två  <span>potenser</span> med identiska  <span>exponenter</span>, vilket vi kan göra om till en  <span>potens</span> av en  <span>kvot</span>.",finallywriteasroot:"Den  <span>potensen</span> skriver vi om som en  <span>rot</span>, och vi är klara!"}},en:{name:"transform fraction of roots to root",explanation:"A  <span>fraction</span> of  <span>roots</span> with identical degrees can be rewritten as a single  <span>root</span>, where the new  <span>radicand</span> is a  <span>fraction</span> of the old  <span>radicands</span>. ",targets:"a  <span>fraction</span> of  <span>roots</span> with identical degrees ",returns:"a  <span>root</span> with  <span>fraction</span>  <span>radicand</span> ",effect:"This isn't really  <span>simplifying</span>, but for some reason it is customary to make this rewrite when neither the  <span>numerator</span> nor the  <span>denominator</span>  <span>root</span> can be  <span>simplified</span>. ",steps:{rewritenumerator:"First we rewrite the  <span>numerator</span> as a  <span>power</span>...",rewritedenominator:"...and then the  <span>denominator</span>.",nowchangetopow:"Now we have a  <span>fraction</span> of  <span>powers</span> with identical  <span>exponents</span>, which we can rewrite as a  <span>power</span> of a  <span>fraction</span>.",finallywriteasroot:"That  <span>power</span> we rewrite as a  <span>root</span>, and we are done!"}}},rootOfFracToFracOfRoots:{id:179,sv:{name:"omvandla rot av kvot till kvot",explanation:"En  <span>rot</span> där  <span>radikanden</span> är en  <span>kvot</span> kan skrivas om som en  <span>kvot</span> av  <span>rötter</span>. ",targets:"en  <span>rot</span> där  <span>radikanden</span> är en  <span>kvot</span> ",returns:"en  <span>kvot</span> där  <span>täljaren</span> och  <span>nämnaren</span> är  <span>rötter</span> ",effect:"Detta är en  <span>komplicerande operation</span>, i ljuset av att det är brukligt att behålla  <span>radikanden</span> som en  <span>kvot</span>. ",steps:{rewriteasfrac:"Först skriver vi om  <span>roten</span> som en  <span>potens</span>.",tofracofpows:"En  <span>potens</span> med  <span>kvot</span> som  <span>bas</span> kan vi göra om till en  <span>kvot</span> av  <span>potenser</span>.",rewritenumer:"Nu skriver vi om  <span>potensen</span> i  <span>täljaren</span> som en  <span>rot</span>...",rewritedenom:"...och även den i  <span>nämnaren</span>. Nu har vi en  <span>kvot</span> av  <span>rötter</span>!"}},en:{name:"transform root of fraction to fraction",explanation:"A  <span>root</span> where  <span>the radicand</span> is a  <span>fraction</span> can be rewritten as a  <span>fraction</span> of  <span>roots</span>. ",targets:"a  <span>root</span> with a  <span>fraction</span>  <span>radicand</span> ",returns:"a  <span>fraction</span> where the  <span>numerator</span> and  <span>denominator</span> are  <span>roots</span> ",effect:"This is a  <span>complicating operation</span> because it is customary to keep  <span>the radicand</span> as a  <span>fraction</span>. ",steps:{rewriteasfrac:"First we rewrite the  <span>root</span> as a  <span>power</span>.",tofracofpows:"A  <span>power</span> with a  <span>fraction base</span> can be rewritten as a  <span>fraction</span> of  <span>powers</span>.",rewritenumer:"Now we rewrite the  <span>numerator</span>  <span>power</span> as a  <span>root</span>...",rewritedenom:"...and then the  <span>denominator</span>. Now we have a  <span>fraction</span> of  <span>roots</span>!"}}},collapseRoot:{id:147,sv:{name:"kollapsa rot av potens",explanation:" <span>Roten</span> representerar det  <span>uttryck</span> som skall multipliceras med sig själv samma antal gånger som  <span>rotens grad</span>, för att resultatet skall bli samma som  <span>uttrycket</span> vi drar  <span>roten</span> ur. Därför kan  <span>roten</span> ur en  <span>potens</span> där  <span>rotens grad</span> matchar  <span>potensens</span>  <span>exponent</span>  <span>kollapsas</span> till  <span>potensens</span>  <span>bas</span>. Om  <span>exponenten</span> är delbar med 2 så gäller dock att resultatet inte kan vara negativt, vilket gör att resultatet blir en  <span>logisk förgrening</span>! ",targets:"en  <span>rot</span> av  <span>potens</span> där  <span>exponenten</span> matchar  <span>rotens</span> ordning ",returns:"en  <span>logisk förgrening</span> ",effect:"Detta är ett  <span>förenklande</span>  <span>uttryck</span>, eftersom vi inte längre har någon  <span>rot</span>. "},en:{name:"collapse root of power",explanation:"The  <span>root</span> represents the  <span>expression</span> that should be multiplied with itself  <span>the number of</span> times stated by the  <span>root</span> index, so the result matches  <span>the radicand</span>. Therefore the  <span>root</span> of a  <span>power</span> where the  <span>exponent</span> matches the  <span>root</span> index can be  <span>collapsed</span> to the  <span>power base</span>. However, if the  <span>exponent</span> is divisible by 2, the result cannot be  <span>negative</span>! Therefore the result is a  <span>logic branching</span>. ",targets:"a  <span>root</span> of a  <span>power</span> where the  <span>exponent</span> matches the  <span>root</span> index ",returns:"a  <span>logic branching</span> ",effect:"This is a  <span>simplifying operation</span>, since we no longer have a  <span>root</span>. "}},collapseInnerExpNumRoot:{id:148,sv:{name:"kollapsa rot av delbar exponent",explanation:"En  <span>rot</span> av en  <span>potens</span> där  <span>exponenten</span> har en  <span>faktor</span> som delas av  <span>rotens grad</span> kan  <span>kollapsas</span>. ",targets:"en  <span>rot</span> av  <span>potens</span> där exponentfaktor delas av  <span>rotens grad</span> ",returns:"en  <span>potens</span> med förkortad  <span>exponent</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi inte längre har en  <span>rot</span> och  <span>exponenten</span> är lägre. ",steps:{extractrootorderdivrestinexp:"Först exponerar vi en  <span>faktor</span> i  <span>exponenten</span> som är identisk med  <span>rotens</span> ordning.",buildpowtoflatten:"Nu låter vi den  <span>faktorn</span> bli  <span>exponent</span> i en yttre  <span>potens</span>.",finallycollapseroot:"Den  <span>potensen</span> har nu samma  <span>exponent</span> som  <span>roten</span>, vilket gör att vi kan  <span>kollapsa</span>!"}},en:{name:"collapse root of divisible exponent",explanation:"The  <span>root</span> of a  <span>power</span> where the  <span>exponent</span> has a  <span>factor</span> that is divided by the  <span>root</span> index can be  <span>collapsed</span>. ",targets:"a  <span>root</span> of  <span>power</span> with  <span>exponent</span>  <span>factor</span> dividable by the  <span>root</span> index ",returns:"a  <span>power</span> with  <span>simplified</span>  <span>exponent</span> ",effect:"This is a  <span>simplifying operation</span> since we no longer have a  <span>root</span> and the  <span>exponent</span> is lower. ",steps:{extractrootorderdivrestinexp:"First we expose a  <span>factor</span> in the  <span>exponent</span> that is equal to the  <span>root grade</span>.",buildpowtoflatten:"Then we let that  <span>factor</span> become the  <span>exponent</span> for an outer  <span>power</span>.",finallycollapseroot:"That  <span>power</span> has the same  <span>exponent</span> as the  <span>root grade</span>, which means we can  <span>collapse</span> the  <span>root</span>!"}}},collapseSecretNumRoot:{id:149,sv:{name:"kollapsa rot av tal med ordningsfaktor",explanation:"Vi kan  <span>kollapsa</span> en  <span>rot</span> ur ett  <span>tal</span>, om  <span>talet</span> kan  <span>faktoriseras</span> till en  <span>potens</span> där  <span>exponenten</span> matchar  <span>rotens grad</span>. ",targets:"en  <span>rot</span> av  <span>tal</span> som kan  <span>faktoriseras</span> till  <span>potens</span> som matchar rotordningen ",returns:"ett  <span>heltal</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi ersätter en  <span>rot</span> med ett  <span>heltal</span>. ",steps:{factorisetofacpow:"Först  <span>faktoriserar</span> vi  <span>bastalet</span> till ett antal likadana  <span>faktorer</span>, lika många som  <span>rotens grad</span>.",mergefacstopower:"Vi samlar ihop  <span>faktorerna</span> till en  <span>potens</span>, där  <span>exponenten</span> blir samma som  <span>rotens grad</span>.",finallycollapseroot:"Sedan  <span>kollapsar</span> vi  <span>roten</span>, och är klara!"}},en:{name:"collapse root of integer with grade factor",explanation:"We can  <span>collapse</span> the  <span>root</span> of a  <span>number</span>, if the  <span>number</span> can be  <span>factorised</span> to a  <span>power</span> where the  <span>exponent</span> matches the  <span>root</span> index. ",targets:"a  <span>root</span> of  <span>number</span> that can be  <span>factorised</span> into  <span>power</span> with  <span>exponent</span> that matches  <span>root</span> index ",returns:"an  <span>integer</span> ",effect:"This is a  <span>simplifying operation</span> since we replace a  <span>root</span> with an  <span>integer</span>. ",steps:{factorisetofacpow:"First we  <span>factorise</span> the  <span>base number</span> to equal  <span>factors</span>, as many as the  <span>root</span> index says.",mergefacstopower:"We gather the  <span>factors</span> to a  <span>power</span>, where the  <span>power</span> becomes the same as the  <span>root</span> index.",finallycollapseroot:"Finally we  <span>collapse</span> the  <span>root</span>, and we are done!"}}},collapseRootBasePow:{id:150,sv:{name:"kollapsa potens av rot",explanation:"En  <span>potens</span> där  <span>basen</span> är en  <span>rot</span> vars ordning matchar  <span>exponenten</span> kan  <span>kollapsas</span>. ",targets:"en  <span>potens</span> med rotbas där graden matchar  <span>exponenten</span> ",returns:" <span>rotens</span>  <span>bas</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi  <span>kollapsar</span> två strukturer ((<span>potensen</span> och  <span>roten</span>). ",steps:{rewritetofrac:"Först skriver vi om  <span>roten</span> på potensform.",flattentower:"Nu har vi en  <span>potens</span> med  <span>potens</span> som  <span>bas</span>, vilket vi kan förenkla till en  <span>potens</span> med  <span>produktexponent</span>. Denna  <span>exponent</span> kommer bli omvandla till  <span>1</span>.",multin:"Vi multiplicerar in exponentfaktorn i rotgradskvoten, vilket ger oss en  <span>kvot</span> med identisk  <span>täljare</span> och  <span>nämnare</span>.",collapseexp:"Den  <span>kvoten</span> kan vi  <span>kollapsa</span>, vilket ger oss  <span>exponenten</span>  <span>1</span>!",remove1exp:" <span>Exponenten</span>  <span>1</span> kan vi  <span>ta bort</span>, och slutligen har vi bara den ursprungliga  <span>radikanden</span> kvar!"}},en:{name:"collapse power of root",explanation:"A  <span>power</span> where the  <span>base</span> is a  <span>root</span> with  <span>grade</span> identical to the  <span>exponent</span> can be  <span>collapsed</span>. ",targets:"a  <span>power</span> with  <span>root</span>  <span>base</span> where the  <span>root grade</span> is identical to the  <span>exponent</span> ",returns:"the  <span>root</span>  <span>base</span> ",effect:"This is a  <span>simplifying operation</span>, as we are collapsing two structures (the  <span>power</span> and the  <span>root</span>). ",steps:{rewritetofrac:"First we rewrite the  <span>root</span> as a  <span>power</span>.",flattentower:"That gives us a  <span>power</span> with a  <span>power base</span>, which we can  <span>simplify</span> to a  <span>power</span> with a  <span>product exponent</span>. This  <span>exponent</span> will be turned to  <span>1</span>.",multin:"We move the  <span>exponent</span>  <span>factor</span> into the  <span>root</span> degree  <span>fraction</span>, giving us a  <span>fraction</span> with identical  <span>numerator</span> and  <span>denominator</span>.",collapseexp:"This  <span>fraction</span> we can  <span>collapse</span> to  <span>1</span>.",remove1exp:"Finally we  <span>remove</span> the  <span>exponent</span>  <span>1</span>, leaving us with only the original  <span>radicand</span>!"}}},collapseRootBaseProdExpPow:{id:151,sv:{name:"kollapsa potens med rotbasfaktor",explanation:"En  <span>potens</span> där  <span>basen</span> är en  <span>rot</span> vars grad finns som  <span>faktor</span> i  <span>exponenten</span> kan  <span>kollapsas</span>. ",targets:"en  <span>potens</span> med rotbas där graden återfinns som  <span>faktor</span> i  <span>exponenten</span> ",returns:"en  <span>potens</span> med  <span>rotens</span>  <span>bas</span> som  <span>bas</span> och förkortad  <span>exponent</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi  <span>kollapsar</span>  <span>roten</span> och  <span>tar bort</span> en exponentfaktor. ",steps:{buildpowtoflatten:"Först bygger vi en inre  <span>potens</span> med endast den rotordningsmatchande  <span>faktorn</span> som  <span>exponent</span>.",nowcollapsematchingpowroot:"Nu kan vi  <span>kollapsa</span> den inre  <span>potensen</span>!"}},en:{name:"collapse power with root base factor",explanation:"A  <span>power</span> where the  <span>base</span> is a  <span>root</span> with index matching an  <span>exponent</span>  <span>factor</span> can be  <span>collapsed</span>. ",targets:"a  <span>power</span> with  <span>root</span>  <span>base</span> where the index matches  <span>exponent</span>  <span>factor</span> ",returns:"a  <span>power</span> with  <span>root</span>  <span>base</span> as  <span>base</span> and shortened  <span>exponent</span> ",effect:"This is a  <span>simplifying operation</span> since we  <span>collapse</span> the  <span>root</span> and  <span>remove</span> an  <span>exponent</span>  <span>factor</span>. ",steps:{buildpowtoflatten:"First we build an inner  <span>power</span> with an  <span>exponent</span> of the  <span>factor</span> matching the  <span>root</span> index.",nowcollapsematchingpowroot:"Now we can  <span>collapse</span> the inner  <span>power</span>!"}}},collapseRootBaseInnerFacProdExpPow:{id:152,sv:{name:"kollapsa potens med dold rotbasfaktor",explanation:"En  <span>potens</span> där  <span>basen</span> är en  <span>rot</span> och en exponentfaktor delas av  <span>rotens grad</span> kan  <span>kollapsas</span>. ",targets:"en  <span>potens</span> med rotbas där graden delar en av exponentfaktorerna ",returns:"en  <span>potens</span> med  <span>rotens</span>  <span>bas</span> som  <span>bas</span> och förkortad  <span>exponent</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi  <span>kollapsar</span>  <span>roten</span> och förkortar en exponentfaktor. ",steps:{exposerootorderinfac:"Först  <span>faktoriserar</span> vi exponentfaktorn för att frilägga en  <span>faktor</span> som matchar  <span>rotens grad</span>.",flattenexpprod:"Vi  <span>jämnar ut</span> exponentprodukten genom att absorbera den skapade  <span>produktfaktorn</span>.",nowcollapsematchingpowroot:"Nu  <span>kollapsar</span> vi rotbasen med hjälp av den frilagda  <span>faktorn</span>!"}},en:{name:"collapse power with hidden root base",explanation:"A  <span>power</span> where the  <span>base</span> is a  <span>root</span> with index dividing an  <span>exponent</span>  <span>factor</span> can be  <span>collapsed</span>. ",targets:"a  <span>power</span> with  <span>root</span>  <span>base</span> where the index divides an  <span>exponent</span>  <span>factor</span> ",returns:"a  <span>power</span> with  <span>root</span>  <span>base</span> as  <span>base</span> and shortened  <span>exponent</span>  <span>factor</span> ",effect:"This is a  <span>simplifying operation</span> since we  <span>collapse</span> the  <span>root</span> and shorten an  <span>exponent</span>  <span>factor</span>. ",steps:{exposerootorderinfac:"First we  <span>factorise</span> an  <span>exponent</span>  <span>factor</span> to free the inner  <span>factor</span> matching the  <span>root</span> index.",flattenexpprod:"We  <span>flatten</span> the  <span>exponent</span>  <span>product</span> by absorbing the created  <span>product factor</span>.",nowcollapsematchingpowroot:"Now we  <span>collapse</span> the  <span>root</span>  <span>base</span> by using the freed  <span>factor</span>!"}}},collapseRootProd:{id:188,sv:{name:"dela upp rot av produkt",explanation:"En  <span>rot</span> av en  <span>produkt</span> är samma sak som  <span>produkten</span> av  <span>rötterna</span> av  <span>faktorerna</span>. ",targets:"en  <span>rot</span> där  <span>radikanden</span> är en  <span>produkt</span> ",returns:"en  <span>produkt</span> där varje  <span>faktor</span> är en  <span>rot</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom omskrivningen möjliggör fortsatta  <span>förenklingar</span>. ",steps:{writeaspow:"Först skriver vi om  <span>roten</span> som en  <span>potens</span>.",powtoprod:"Det ger oss en  <span>potens</span> med  <span>produkt</span> som  <span>bas</span>, vilket vi kan dela upp i en  <span>produkt</span> där varje  <span>faktor</span> är en  <span>potens</span>.",powtoroot:"Nu skriver vi om varje  <span>faktor</span> som en  <span>rot</span>."}},en:{name:"split root of product",explanation:"A  <span>root</span> of a  <span>product</span> is the same thing as the  <span>product</span> of the  <span>roots</span> of the  <span>factors</span>. ",targets:"a  <span>root</span> with a  <span>product</span>  <span>radicand</span>. ",returns:"a  <span>product</span> where each  <span>factor</span> is a  <span>root</span> ",effect:"This is a  <span>simplifying operation</span>, since the new form is easier to  <span>simplify</span> further. ",steps:{writeaspow:"First we rewrite the  <span>root</span> as a  <span>power</span>.",powtoprod:"That gives us a  <span>power</span> with a  <span>product base</span>, which we can  <span>split</span> into a  <span>product</span> where each  <span>factor</span> is a  <span>power</span>.",powtoroot:"Now we rewrite each individual  <span>factor</span> as a  <span>root</span>."}}},collapsePartNumRoot:{id:189,sv:{name:"kollapsa rot av heltal med potensfaktor",explanation:"Vi kan  <span>kollapsa</span> en  <span>rot</span> av ett  <span>heltal</span> om  <span>heltalet</span> kan  <span>faktoriseras</span> till att innehålla en  <span>potens</span> med samma  <span>exponent</span> som  <span>rotens grad</span>. ",targets:"en  <span>rot</span> av ett  <span>heltal</span> ",returns:"en  <span>produkt</span> av ett lägre  <span>heltal</span> och en  <span>rot</span> av ett lägre  <span>heltal</span> ",effect:"Detta är en  <span>förenklande operation</span>. Även om vi nu har en  <span>produkt</span> med en  <span>rot</span> istället för endast en  <span>rot</span> så är  <span>radikanden</span> lägre, vilket gör  <span>uttrycket</span> mer exakt. ",steps:{factorisenumber:"Först  <span>faktoriserar</span> vi  <span>talet</span> så att vi frigör lika många identiska  <span>faktorer</span> som  <span>rotens grad</span>.",collect:"De  <span>faktorerna</span> samlar vi ihop till en  <span>potens</span>, som då får samma  <span>exponent</span> som  <span>rotens grad</span>.",collapserootprod:"Nu har vi en  <span>rot</span> av en  <span>produkt</span>, vilket vi delar upp till en  <span>produkt</span> av  <span>rötter</span>.",nowcollapsenumroot:"Slutligen  <span>kollapsar</span> vi  <span>roten</span> av vår nya  <span>potens</span>!"}},en:{name:"Collapse root of integer with power factor",explanation:"We can  <span>collapse</span> a  <span>root</span> of an  <span>integer</span> if the  <span>integer</span> can be  <span>factorised</span> to contain a  <span>power</span> with the same  <span>exponent</span> as the  <span>root grade</span>. ",targets:"a  <span>root</span> of an  <span>integer</span> ",returns:"a  <span>product</span> of a lower  <span>integer</span> and a  <span>root</span> of a lower  <span>integer</span> ",effect:"This is a  <span>simplifying operation</span>.  <span>Even though</span> we now have a  <span>product</span> with a  <span>root</span> instead of just a  <span>root</span>,  <span>the radicand</span> is lower which makes the  <span>expression</span> more exact. ",steps:{factorisenumber:"First we  <span>factorise</span> the  <span>integer</span> freeing  <span>a number of</span> identical  <span>factors</span>, as many as dictated by the  <span>root grade</span>.",collect:"Those  <span>factors</span> we now collect into a  <span>power</span>, which gets the same  <span>exponent</span> as the  <span>root grade</span>.",collapserootprod:"We now have a  <span>power</span> of a  <span>product</span>, which we can  <span>split</span> into a  <span>product</span> of  <span>powers</span>.",nowcollapsenumroot:"Finally we  <span>collapse</span> the  <span>root</span> of our new  <span>exponent</span>!"}}},collapseNumBasePowRoot:{id:190,sv:{name:"kollapsa rot av potens med talbas",explanation:"Om en  <span>radikand</span> är en  <span>potens</span> med samma  <span>exponent</span> som  <span>rotens grad</span>, och  <span>potensen</span> har en talbas, så kan vi först  <span>kollapsa</span>  <span>roten</span> och sedan förenkla ett eventuellt uppkommet  <span>absolutbeloppet</span>. ",targets:"en  <span>rot</span> av en  <span>potens</span> där  <span>exponenten</span> och  <span>rotens grad</span> är lika, och  <span>potensen</span>  <span>bas</span> är ett  <span>tal</span> ",returns:" <span>basen</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi ersatt en  <span>rot</span> av en  <span>potens</span> med ett  <span>tal</span>. ",steps:{collapseroot:"Först  <span>kollapsar</span> vi  <span>roten</span>, vilket ger oss en  <span>logisk förgrening</span> som representerar huruvida  <span>rotgraden</span> är delbar med 2 eller ej.",andcollapseabsnum:"I  <span>så-grenen</span> så kan vi  <span>kollapsa</span>  <span>absolutbeloppet</span>.",nowcollapse:"Nu har båda grenarna samma värde, så förgreningen kan  <span>kollapsas</span>!"}},en:{name:"collapse root of power with number base",explanation:"If a  <span>radicand</span> is a  <span>power</span> with the same  <span>exponent</span> as the  <span>root grade</span>, and the  <span>power</span> has a  <span>number</span>  <span>base</span>, then we can first  <span>collapse</span> the  <span>root</span> and then  <span>simplify</span> the created  <span>absolute value</span>. ",targets:"a  <span>root</span> of a  <span>power</span> where the  <span>exponent</span> and  <span>root grade</span> are equal, and the  <span>power base</span> is a  <span>number</span> ",returns:"the  <span>base</span> ",effect:"This is a  <span>simplifying operation</span> since we have replaced a  <span>root</span> of a  <span>power</span> with a  <span>number</span>. ",steps:{collapseroot:"First we  <span>collapse</span> the  <span>root</span>, which gives us a  <span>logic branching</span> that represents whether or not the  <span>root grade</span> is divisible by 2.",andcollapseabsnum:"In the  <span>then-branch</span> we can  <span>collapse</span> the  <span>absolute value</span>.",nowcollapse:"That meant both branches are equal, and the branching  <span>collapses</span>!"}}},collapseNegSquareRoot:{id:191,sv:{name:"kollapsa kvadratrot av negation",explanation:"Vi kan  <span>kollapsa</span> en kvadratrot av en  <span>negation</span> genom att göra om den till ett  <a href='#' class='wordlink' linkto='complexnum'>komplext tal</a>. ",targets:"en kvadratrot med  <span>negativ</span>  <span>radikand</span> ",returns:"en  <span>produkt</span> av kvadratrot med positiv  <span>radikand</span> och  <span>den komplexa konstanten i</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi slipper ha en  <span>negativ</span>  <span>radikand</span>. ",steps:{firstexpandneg:"Först expanderar vi  <span>negationen</span>, så vi får en fristående  <span>faktor</span>  <span>-1</span>.",splitrootprod:"Nu har vi en  <span>rot</span> av en  <span>produkt</span>, vilket vi kan dela upp i en  <span>produkt</span> av två  <span>rötter</span>.",buildisquare:"Vi  <span>omformulerar</span>  <span>radikanden</span>  <span>-1</span> till en  <span>potens</span> av  <span>den komplexa konstanten i</span>.",collapserootofi:"Det ger oss en  <span>rot</span> vi kan  <span>kollapsa</span>, och kvar blir  <span>den komplexa konstanten i</span>."}},en:{name:"collapse square root of negation",explanation:"We can  <span>collapse</span> a  <span>square root</span> of a  <span>negation</span> by first remaking it into a  <a href='#' class='wordlink' linkto='complexnum'>complex number</a>. ",targets:"a  <span>square root</span> of a  <span>negative</span>  <span>radicand</span> ",returns:"a  <span>product</span> of a  <span>root</span> with a positive  <span>radicand</span> and  <span>the complex constant i</span> ",effect:"This is a  <span>simplifying operation</span> since we got rid of a  <span>negative</span>  <span>radicand</span>. ",steps:{firstexpandneg:"First we expand the  <span>negation</span>, giving us a  <span>factor</span>  <span>-1</span>.",splitrootprod:"Now we have a  <span>root</span> of a  <span>product</span>, which we can  <span>split</span> into a  <span>product</span> of two  <span>roots</span>.",buildisquare:"We  <span>rephrase</span>  <span>the radicand</span>  <span>-1</span> into a  <span>power</span> of  <span>the complex constant i</span>.",collapserootofi:"Now we can  <span>collapse</span> the  <span>root</span>, leaving just  <span>the complex constant i</span>."}}},divRelSidesAndFix:{id:267,sv:{name:"dividera relation och utvärdera",explanation:"Vi kan dividera en  <span>relation</span> med vad vi vill (förutom  <span>0</span>), och sedan städa upp  <span>logiken</span> beroende på  <span>relationens</span> typ och vad vi dividerade med. ",targets:"en  <span>relation</span> ",returns:"en  <span>relation</span> av  <span>kvoter</span>, möjligen i en  <span>konjunktion</span>,  <span>disjunktion</span> eller  <span>logisk förgrening</span> ",effect:"Detta är en  <span>komplicerande operation</span>. Även om vi lyckas städa upp i  <span>logiken</span> efter divisionen så har vi  <span>introducerat</span> två nya  <span>nämnare</span>. ",steps:{wediv:"Först dividerar vi  <span>relationen</span>.",solveifelsecond:"Eftersom  <span>relationen</span> är en  <span>jämförelse</span> så får vi en  <span>logisk förgrening</span>. Vi utvärderar dess villkor som testar om vår  <span>nämnare</span> är  <span>negativ</span>.",nowcollapsetrue:"Det var den, så vi behåller  <span>så-grenen</span>.",nowcollapsefalse:"Det var den inte, så vi behåller  <span>annars-grenen</span>.",isdenomzero:"Vi utvärderar huruvida vår  <span>introducerade</span>  <span>nämnare</span> var  <span>0</span>.",denomcouldbezero:"Vi substituerar in  <span>0</span> i  <span>relationen</span> för att kontrollera.",sidetozero:"Ena sidan i  <span>relationen</span> blev  <span>0</span>.",relaftersubst:"Efter substitionen kan vi utvärdera  <span>relationen</span>.",zerocontr:"Att  <span>nämnaren</span> är  <span>0</span> innebär en motsägelse.",denomzerobranchisfalse:"Det var den inte, så vi kan  <span>kollapsa</span> den  <span>konjunktionen</span>.",denomzerobranchistrue:" <span>Nämnaren</span> var  <span>0</span>, så vi  <span>tar bort</span>  <span>sanningsvärdet</span>.",removedenomzerobranch:"Vi  <span>tar bort</span> den  <span>falska</span> resten av  <span>konjunktionen</span> som representerade möjligheten att  <span>nämnaren</span> var  <span>0</span>.",evalzerotest:"Vi utvärderar  <span>relationen</span> som representerar att  <span>nämnaren</span> inte är lika med  <span>0</span>.",removenotzerotrue:"Slutligen  <span>tar vi bort</span> den  <span>sanna</span> resten från kontrollen, och endast vår dividerade  <span>relation</span> återstår!",collapseandsincefalse:"Slutligen  <span>kollapsar</span> vi  <span>konjunktionen</span> eftersom  <span>nämnaren</span> var  <span>0</span>."}},en:{name:"divide relation and evaluate",explanation:"We can divide a  <span>relation</span> with whatever we want (except  <span>0</span>), and then clean up the  <span>logic</span> depending on the  <span>relation</span> type and what we divided with. ",targets:"a  <span>relation</span> ",returns:"a  <span>relation</span> of  <span>fractions</span>, possibly inside a  <span>conjunction</span>,  <span>disjunction</span> or  <span>logic branching</span> ",effect:"This is a  <span>complicating operation</span>.  <span>Even</span> if we manage to clean up the  <span>logic</span> after the  <span>division</span>, we have still  <span>introduced</span> two new  <span>denominators</span>. ",steps:{wediv:"First we divide the  <span>relation</span>.",solveifelsecond:"Because the  <span>relation</span> is a  <span>comparison</span>, we now have a  <span>logic branching</span>. We evaluate the condition to see which branch to follow, depending on whether or not our  <span>denominator</span> was  <span>negative</span>.",nowcollapsetrue:"It was, so we keep the  <span>then-branch</span>.",nowcollapsefalse:"It wasn't, so we keep the  <span>else-branch</span>.",isdenomzero:"We evaluate whether or not our  <span>introduced</span> denomiantor was  <span>0</span>.",denomcouldbezero:"We substitute  <span>0</span> into the  <span>relation</span> in order to check.",sidetozero:"One side of the  <span>relation</span> became  <span>0</span>.",relaftersubst:"After the substitution we can now evaluate the  <span>relation</span>.",zerocontr:"That the  <span>denominator</span> is  <span>0</span> means a contradiction.",denomzerobranchisfalse:"It wasn't, so we can  <span>collapse</span> the  <span>conjunction</span> representing that possibility.",denomzerobranchistrue:"The  <span>denominator</span> was  <span>0</span>, so we  <span>remove</span> that  <span>truth value</span>.",removedenomzerobranch:"We  <span>remove</span> the  <span>false</span> residue of the  <span>conjunction</span> representing the possibility that the  <span>denominator</span> was  <span>0</span>.",evalzerotest:"We evaluate the  <span>relation</span> representing the case where the  <span>denominator</span> wasn't  <span>0</span>.",removenotzerotrue:"Finally we  <span>remove</span> the truth residue of that check, and only our divided  <span>relation</span> remains!",collapseandsincefalse:"Finally we  <span>collapse</span> the  <span>conjunction</span> because the  <span>denominator</span> was  <span>0</span>."}}},multRelSidesAndFix:{id:270,sv:{name:"multiplicera relation och utvärdera",explanation:"Vi kan multiply en  <span>relation</span> med vad vi vill (förutom  <span>0</span>), och sedan städa upp  <span>logiken</span> beroende på  <span>relationens</span> typ och vad vi multiplicerade med. ",targets:"en  <span>relation</span> ",returns:"en  <span>relation</span> av  <span>produkter</span>, möjligen i en  <span>konjunktion</span> eller  <span>logisk förgrening</span> ",effect:"Detta är en  <span>komplicerande operation</span>. Även om vi lyckas städa upp i  <span>logiken</span> efter  <span>multiplikationen</span> så har vi  <span>introducerat</span> två nya  <span>faktorer</span>. ",steps:{wemult:"Först multiplicerar vi  <span>relationen</span>.",solveifelsecond:"Eftersom  <span>relationen</span> är en  <span>jämförelse</span> så får vi en  <span>logisk förgrening</span>. Vi utvärderar dess villkor som testar om vår  <span>faktor</span> är  <span>negativ</span>.",nowcollapsetrue:"Det var den, så vi behåller  <span>så-grenen</span>.",nowcollapsefalse:"Det var den inte, så vi behåller  <span>annars-grenen</span>.",evalzerotest:"Vi utvärderar den förbjudna  <span>likheten</span> mellan vår  <span>faktor</span> och  <span>0</span>.",removenotzerotrue:"Den var inte  <span>0</span> så vi  <span>tar bort</span>  <span>sant</span> från  <span>konjunktionen</span>, och nu återstår endast vår multiplicerade  <span>relation</span>!",collapseandsincefalse:"Slutligen  <span>kollapsar</span> vi  <span>konjunktionen</span> eftersom  <span>faktorn</span> var  <span>0</span>."}},en:{name:"multiply relation and evaluate",explanation:"We can multiply a  <span>relation</span> with whatever we want (except  <span>0</span>), and then clean up the  <span>logic</span> depending on the  <span>relation</span> type and what we multiplied with. ",targets:"a  <span>relation</span> ",returns:"a  <span>relation</span> of  <span>products</span>, possibly inside a  <span>conjunction</span> or  <span>logic branching</span> ",effect:"This is a  <span>complicating operation</span>.  <span>Even</span> if we manage to clean up the  <span>logic</span> after  <span>the multiplication</span>, we have still  <span>introduced</span> two new  <span>factors</span>. ",steps:{wemult:"First we multiply both sides of the  <span>relation</span>.",solveifelsecond:"Because the  <span>relation</span> is a  <span>comparison</span>, we now have a  <span>logic branching</span>. We evaluate the condition to see which branch to follow, depending on whether or not our  <span>factor</span> was  <span>negative</span>.",nowcollapsetrue:"It was, so we keep the  <span>then-branch</span>.",nowcollapsefalse:"It wasn't, so we keep the  <span>else-branch</span>.",evalzerotest:"We evaluate the  <span>forbidden equality</span> between our  <span>introduced</span>  <span>factor</span> and  <span>0</span>.",removenotzerotrue:"It wasn't  <span>0</span>, so we  <span>remove</span>  <span>true</span> from the  <span>conjunction</span>, leaving only our multiplied  <span>relation</span>!",collapseandsincefalse:"Finally we  <span>collapse</span> the  <span>conjunction</span> because the  <span>factor</span> was  <span>0</span>."}}},liftVarFromDenomInRel:{id:262,sv:{name:"lyft upp variabel från nämnare",explanation:"Att ha en  <span>variabel</span> i  <span>nämnaren</span> gör  <span>relationen</span> svårhanterlig. Vi kan dock få upp  <span>variabeln</span> därifrån genom att multiplicera  <span>relationen</span> med  <span>nämnaren</span> och  <span>eliminera</span> den! ",targets:"en  <span>relation</span> med  <span>variabel</span> i  <span>nämnare</span> ",returns:"en  <span>relation</span> utan  <span>variabel</span> i  <span>nämnare</span> ",effect:"Detta är en  <span>förenklande operation</span>. Visserligen har vi  <span>introducerat</span> nya  <span>faktorer</span>, men att inte ha  <span>variabler</span> i  <span>nämnare</span> är en stor fördel för vidare ekvationslösning! ",steps:{ditchneg:"Vi flyttar  <span>negationen</span> från  <span>kvoten</span> till  <span>täljaren</span> så att den är ur vägen.",multrelwithdenomfac:"Vi multiplicerar  <span>relationen</span> med  <span>nämnaren</span> vi vill flytta upp.",dist:"Eftersom ledet var en  <span>summa</span> så måste vi  <span>distribuera</span> in den  <span>introducerade</span>  <span>faktorn</span>.",multinthefac:"Nu multiplicerar vi in den nya  <span>faktorn</span> i  <span>kvoten</span> med  <span>variabel</span> i  <span>nämnaren</span>.",nowcleansame:"Eftersom  <span>täljaren</span> var  <span>1</span> så kan vi nu enkelt  <span>kollapsa</span> hela  <span>kvoten</span>!  <span>Nämnaren</span> är borta, och  <span>variabeln</span> återfinns nu som vanlig  <span>faktor</span>.",nowclean:"Vi kan nu förkorta bort  <span>nämnaren</span>! Nu återfinns  <span>variabeln</span> bara som vanlig  <span>faktor</span>."}},en:{name:"lift up variable from denominator",explanation:"Having a  <span>variable</span> in a  <span>denominator</span> makes the  <span>relation</span> difficult to deal with. We can, however, lift up the  <span>variable</span> from there by multiplying the  <span>relation</span> with the  <span>denominator</span> and  <span>eliminating</span> it! ",targets:"a  <span>relation</span> with  <span>variable</span> in a  <span>denominator</span> ",returns:"en  <span>relation</span> without  <span>variable</span> in a  <span>denominator</span> ",effect:"This is a  <span>simplifying operation</span>. We might have  <span>introduced</span> new  <span>factors</span>, but not having  <span>variables</span> in a  <span>denominator</span> is a huge advantage for further  <span>equation</span> solving. ",steps:{ditchneg:"We move the  <span>negation</span> from the  <span>fraction</span> into the  <span>numerator</span> so that it is out of the way.",multrelwithdenomfac:"We multiply the  <span>relation</span> with the  <span>denominator</span> we want to move up.",dist:"Because the side with the  <span>fraction</span> was a  <span>sum</span>, we must  <span>distribute</span> our new  <span>factor</span> into that  <span>sum</span>.",multinthefac:"Now we move our new  <span>factor</span> into the  <span>fraction</span>, planning to use it to  <span>eliminate</span> the  <span>denominator</span>.",nowcleansame:"Because the  <span>numerator</span> was  <span>1</span> we can now  <span>collapse</span> the entire  <span>fraction</span>! The  <span>denominator</span> is gone, and the  <span>variable</span> is now found as a normal  <span>factor</span>.",nowclean:"We can now  <span>eliminate</span> the  <span>denominator</span>! The  <span>variable</span> can now be found as a normal  <span>factor</span>."}}},absToPlusMinusInEq:{id:259,sv:{name:"undersök absolutbelopp i likhet",explanation:"Om ena ledet i en  <span>likhet</span> är ett  <span>absolutbelopp</span> så betyder det att  <span>absolutbeloppets</span> innehåll är lika med det andra ledet eller en  <span>negation</span> av det andra ledet. Vi kan därför byta ut  <span>absolutbeloppet</span> mot att sätta  <span>plus minus</span> runt det andra ledet. ",targets:"en  <span>likhet</span> där ena ledet är ett  <span>absolutbelopp</span> ",returns:"en  <span>likhet</span> där andra ledet är  <span>plus minus</span> ",effect:"Detta är en  <span>förenklande operation</span>, då det är lättare att undersöka  <span>plus minus</span> vidare. "},en:{name:"explore absolute value in equality",explanation:"If one side in an  <span>equality</span> is an  <span>absolute value</span>, then the contents of the  <span>absolute value</span> is equal to the other side or a  <span>negation</span> of the other side. Therefore we can  <span>remove</span> the  <span>absolute value</span> if we instead put  <span>plus minus</span> around the other side. ",targets:"an  <span>equality</span> with an  <span>absolute value</span> on one side ",returns:"an  <span>equality</span> where the other side is  <span>plus minus</span> ",effect:"This is a  <span>simplifying operation</span>, since it is easier to explore  <span>plus minus</span> further. "}},solvePowEq:{id:258,sv:{name:"lös potensekvation",explanation:"Om en  <span>variabel</span> i en  <span>relation</span> kan isoleras till  <span>basen</span> i en enda  <span>potens</span> så kan vi lösa ut dess värde genom att omvandla  <span>relations</span> led till  <span>rötter</span>. ",targets:"en  <span>relation</span> med  <span>variabel</span> dold i  <span>bas</span> ",returns:"en  <span>relation</span> med  <span>variabeln</span> ensam i ett led ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi nu har ett  <span>uttryck</span> för  <span>variabeln</span> som inte längre är dold i en  <span>bas</span>. ",steps:{firstfreeexp:"Först ser vi till att få  <span>potensen</span> ensam i ett led.",rootsides:"Vi drar  <span>roten</span> ur båda leden, med samma grad som  <span>potensens</span>  <span>exponent</span>.",andcollapse:"Sedan  <span>kollapsar</span> vi  <span>roten</span> ur  <span>potensen</span>, vilket frigör  <span>variabeln</span> vi löser för!",expandabs:"Slutligen skriver vi ut möjligheterna för  <span>absolutbeloppet</span> som vi fick eftersom  <span>exponenten</span> var  <span>jämn</span>."}},en:{name:"solve power equation",explanation:"If a  <span>variable</span> in a  <span>relation</span> can be isolated to the  <span>base</span> of a single  <span>power</span>, then we can  <span>solve</span> for that  <span>variable</span> by taking the  <span>root</span> of both sides. ",targets:"a  <span>relation</span> with a  <span>variable</span> hidden in a  <span>power base</span> ",returns:"a  <span>relation</span> with the  <span>variable</span> alone on one side ",effect:"This is a  <span>simplifying</span>  <span>relation</span> as the  <span>variable</span> is no longer hidden in a  <span>base</span>. ",steps:{firstfreeexp:"First we make sure the  <span>power</span> is alone on one side.",rootsides:"We take the  <span>root</span> of both sides, using the same  <span>grade</span> as the  <span>exponent</span>.",andcollapse:"We then  <span>collapse</span> the  <span>root</span> of the  <span>power</span>, which frees the  <span>variable</span> we're solving for!",expandabs:"Finally we write out the possibilities for the  <span>absolute value</span> we got because the  <span>exponent</span> was  <span>even</span>."}}},rootifyRelationSides:{id:257,sv:{name:"dra roten ur både led i relation",explanation:"Vi kan dra  <span>roten</span> ur båda leden i en  <span>relation</span> utan att påverka dess  <span>sanningsvärde</span>. ",targets:"en  <span>relation</span> ",returns:"en  <span>relation</span> med  <span>rot</span> i båda led ",effect:"Detta är en komplicerance  <span>operation</span> eftersom vi  <span>introducerat</span> två  <span>rötter</span>. "},en:{name:"root of both sides in relation",explanation:"We can take the  <span>root</span> of both sides in a  <span>relation</span> without affect the  <span>relation</span>  <span>truth value</span>. ",targets:"a  <span>relation</span> ",returns:"a  <span>relation</span> with a  <span>root</span> on both sides ",effect:"This is a  <span>complicating operation</span> since we have  <span>introduced</span> two  <span>roots</span>. "}},solveExpEq:{id:250,sv:{name:"lös exponentialekvation",explanation:"En  <span>ekvation</span> där  <span>variabeln</span> är fast i  <span>exponenten</span> i en  <span>potens</span> kan lösas genom att  <span>logaritmera</span> båda leden i  <span>relationen</span>. ",targets:"en  <span>relation</span> med en  <span>variabel</span> i en  <span>exponent</span> i en  <span>potens</span> ",returns:"en  <span>relation</span> med  <span>variabeln</span> ensam i ett led ",effect:"Detta är en  <span>förenklande operation</span>.  <span>Variabelns</span> värde kan nu avläsas, eller så har vi öppnat möjligheter för substitution. ",steps:{firstfreeexp:"Först ser vi till att få  <span>potensen</span> ensam i ett led.",logbothsides:"Vi logaritmerar båda sidorna i  <span>relationen</span>, och använder samma  <span>bas</span> i  <span>logaritmen</span> som i  <span>potensen</span>.",shootdownx:"Vi har nu en  <span>logaritm</span> av en  <span>potens</span>, vilket låter oss lyfta ut  <span>exponenten</span> som en  <span>faktor</span> utanför  <span>logaritmen</span>.",collapselogtoone:" <span>Logaritmen</span> av ett  <span>tal</span> som är samma som  <span>logaritmens</span>  <span>bas</span> kan  <span>kollapsas</span> till  <span>1</span>.",removeone:"Vi  <span>tar bort</span>  <span>faktorn</span>  <span>1</span>, och endast den befriade  <span>exponenten</span> återstår!"}},en:{name:"solve exponential equation",explanation:"An  <span>equation</span> where the  <span>variable</span> is stuck in the  <span>exponent</span> of a  <span>power</span> can be solved through turning both sides of the  <span>relation</span> into a  <span>logarithm</span>. ",targets:"a  <span>relation</span> with the  <span>variable</span> stuck in an  <span>exponent</span> of a  <span>power</span> ",returns:"a  <span>relation</span> with the  <span>variable</span> alone on one side ",effect:"This is a  <span>simplifying operation</span>. The  <span>variable</span> value can now be read, or we have opened up the possibility for substitution. ",steps:{firstfreeexp:"First we make sure the  <span>power</span> is alone on one side of the  <span>relation</span>.",logbothsides:"We turn both sides of the  <span>relation</span> into a  <span>logarithm</span> with the same  <span>base</span> as the  <span>power</span>.",shootdownx:"Now we have a  <span>logarithm</span> of a  <span>power</span>, from which we can extract the  <span>exponent</span> as a  <span>factor</span>.",collapselogtoone:"The  <span>logarithm</span> of a  <span>number</span> that is identical to the  <span>logarithm</span>  <span>base</span> can be  <span>collapsed</span> to  <span>1</span>.",removeone:"We  <span>remove</span> the  <span>factor</span>  <span>1</span>, and now only the freed  <span>exponent</span> remains!"}}},logifyRelationSides:{id:249,sv:{name:"logaritmera båda leden i ekvation",explanation:"Vi kan  <span>logaritmera</span> båda leden i en  <span>likhet</span> utan att påverka dess sanningshalt. ",targets:"en  <span>likhet</span> ",returns:"en  <span>likhet</span> av  <span>logaritmer</span> ",effect:"Detta är en  <span>komplicerande operation</span> eftersom vi har två nya  <span>logaritmer</span>. "},en:{name:"logarithmify both sides in equation",explanation:"We can wrap both sides of an  <span>equality</span> in a  <span>logarithm</span> without affecting the  <span>truth value</span> of the  <span>equality</span>. ",targets:"an  <span>equality</span> ",returns:"an  <span>equality</span> of  <span>logarithms</span> ",effect:"This is a  <span>complicating operation</span> since we now have two new  <span>logarithms</span>. "}},solveLogEq:{id:248,sv:{name:"lös logaritmekvation",explanation:"En  <span>ekvation</span> där  <span>variabeln</span> ingår i en  <span>logaritm</span> kan lösas genom att byta  <span>bas</span> i båda led i  <span>relationen</span>. ",targets:"en  <span>relation</span> med en  <span>variabel</span> som ingår i en  <span>logaritm</span> ",returns:"en  <span>relation</span> med  <span>variabeln</span> ensam i ett led ",effect:"Detta är en  <span>förenklande operation</span>.  <span>Variabelns</span> värde kan nu avläsas, eller så har vi öppnat möjligheter för substitution. ",steps:{firstfreeroot:"Först ser vi till att få  <span>logaritmen</span> ensam i ett led i  <span>relationen</span>.",baseup:"Vi byter  <span>bas</span> på båda sidor av  <span>relationen</span>, till samma  <span>bas</span> som  <span>logaritmen</span>.",flatten:"Ledet med  <span>logaritmen</span> är nu en  <span>potens</span> där  <span>exponenten</span> är en  <span>logaritm</span> med samma  <span>bas</span> som  <span>potensen</span>, vilket vi kan  <span>kollapsa</span>!"}},en:{name:"solve logarithm equation",explanation:"An  <span>equation</span> with a  <span>variable</span> that's part of a  <span>logarithm</span> can be solved through changing  <span>base</span> on both sides of the  <span>relation</span>. ",targets:"a  <span>relation</span> with a  <span>variable</span> that's part of a  <span>relation</span> ",returns:"a  <span>relation</span> with the  <span>variable</span> alone on one side ",effect:"This is a  <span>simplifying operation</span>. The  <span>variable</span> value can now be read, or we have opened up the possibility for substitution. ",steps:{firstfreeroot:"First we make sure that the  <span>logarithm</span> is alone on one side of the  <span>relation</span>.",baseup:"We change  <span>base</span> on both sides of the  <span>relation</span>, to the same  <span>base</span> as the  <span>logarithm</span>.",flatten:"The side with the  <span>logarithm</span> is now a  <span>power</span> where the  <span>exponent</span> is a  <span>logarithm</span> with the same  <span>base</span> as the  <span>power</span>, which can be  <span>collapsed</span>!"}}},powerifyRelationSides:{id:247,sv:{name:"upphöj båda leden i ekvation",explanation:"I en  <span>likhet</span> så kan vi upphöja båda leden med samma  <span>exponent</span>, och  <span>likheten</span> gäller fortfarande. Algebra Explorer har ännu inte lärt sig att hantera detta i  <span>jämförelser</span>, men det kommer! ",targets:"en  <span>likhet</span> ",returns:"en  <span>likhet</span> av  <span>potenser</span> ",effect:"Detta är en  <span>komplicerande operation</span> eftersom vi  <span>introducerat</span> två nya  <span>exponenter</span>. "},en:{name:"raise both sides in equation",explanation:"In an  <span>equality</span> we can raise both sides to the same  <span>power</span>, and the  <span>equality</span> will still hold. Algebra Explorer has yet to learn to do this for  <span>comparisons</span>, but that's coming! ",targets:"an  <span>equality</span> ",returns:"an  <span>equality</span> of  <span>powers</span> ",effect:"This is a  <span>complicating operation</span> since we  <span>introduced</span> two new  <span>exponents</span>. "}},solveRootEq:{id:246,sv:{name:"lös rotekvation",explanation:"Vi kan lösa en  <span>ekvation</span> där  <span>variabeln</span> är dold i en  <span>rot</span> genom att upphöja  <span>ekvationen</span>. Algebra Explorer har ännu inte lärt sig att hantera detta i  <span>jämförelser</span>, men det kommer! ",targets:"en  <span>ekvation</span> där  <span>variabeln</span> är dold i en  <span>radikand</span> ",returns:"en  <span>ekvation</span> där  <span>radikanden</span> är frilagd i ena ledet ",effect:"Detta är en  <span>förenklande operation</span> eftersom  <span>variabeln</span> inte längre är dold i en  <span>rot</span>. ",steps:{firstfreeroot:"Först löser vi ut  <span>roten</span> så att den är ensam i ena ledet.",powerup:"Vi upphöjer  <span>ekvationen</span> med  <span>rotens</span> grad",andfree:"Nu  <span>kollapsar</span> vi ledet med  <span>roten</span>, och  <span>radikanden</span> är frilagd!"}},en:{name:"solve root equation",explanation:"We can  <span>solve</span> an equatione where the variabel is hidden in a  <span>root</span> by raising the  <span>equation</span> to a  <span>power</span> equal to the  <span>root grade</span>. So far Algebra Explorer hasn't learned to do this with  <span>comparisons</span>, but that's coming! ",targets:"an  <span>equation</span> where the  <span>variable</span> is hidden in a  <span>radicand</span> ",returns:"an  <span>equation</span> with the former  <span>radicand</span> free on one side ",effect:"This is a  <span>simplifying operation</span> since the  <span>variable</span> is no longer hidden inside a  <span>root</span>. ",steps:{firstfreeroot:"First we make the  <span>root</span> alone on one side of the  <span>relation</span>.",powerup:"We raise the  <span>equation</span> to the  <span>power</span> of the  <span>root grade</span>.",andfree:"Now we  <span>collapse</span> the side with the  <span>root</span>, and  <span>the radicand</span> is free!"}}},solveLinearEq:{id:245,sv:{name:"lös linjär ekvation",explanation:"En  <span>ekvation</span> med en  <span>variabel</span> som inte ingår i en  <span>potens</span> eller liknande kallas linjär, och kan lösas genom grundläggande algebraisk manipulering. ",targets:"en  <span>relation</span> med en  <span>variabel</span> som inte ingår i en  <span>potens</span> eller liknande ",returns:"en  <span>relation</span> med  <span>variabeln</span> ensam i ett led ",effect:"Detta är en  <span>förenklande operation</span>.  <span>Variabelns</span> värde kan nu avläsas, eller så har vi öppnat möjligheter för substitution. ",steps:{gatherononeside:"Vi samlar alla  <span>termer</span> som innehåller  <span>variabeln</span> i samma led i  <span>relationen</span>.",moveotherstuffaway:"Alla  <span>termer</span> som inte innehåller  <span>variabeln</span> flyttar vi till andra sidan.",mashxtogether:"Vi slår ihop alla  <span>termer</span> som innehåller  <span>variabeln</span>, så att  <span>variabeln</span> nu är isolerad till en enda  <span>term</span>.",multeqwithxdenom:"Eftersom  <span>variabeln</span> är fast i en  <span>kvot</span> så multiplicerar vi  <span>relationen</span> med variabelkvotens  <span>nämnare</span>, för att sedan kunna förkorta bort  <span>nämnaren</span>.",multintorid:"Nu multiplicerar vi in den  <span>introducerade</span>  <span>faktorn</span> i  <span>kvoten</span>...",kill:"...och förkortar bort  <span>nämnaren</span>. Nu har vi befriat  <span>variabeln</span> från  <span>kvoten</span>!",extractsolvefor:"Eftersom  <span>variabeln</span> är fast i en  <span>produkt</span> så  <span>faktoriserar</span> vi ut  <span>variabeln</span> för att sedan kunna dividera bort övriga  <span>faktorer</span>.",divrel:"Vi delar  <span>relationen</span> med  <span>variabelns</span>  <span>koefficienter</span> för att kunna förkorta bort den.",flattenstuffout:"Vi  <span>jämnar ut</span>  <span>konjunktionen</span>.",removecoeff:"Nu kan vi förkorta bort  <span>koefficienten</span>, och  <span>variabeln</span> är ensam i sitt led!"}},en:{name:"solve linear equation",explanation:"An  <span>equation</span> with a  <span>variable</span> that isn't part of a  <span>power</span> or similar is called linear, and can be solved through basic algebraic manipulation. ",targets:"a  <span>relation</span> with a  <span>variable</span> that isn't part of a  <span>power</span> or similar ",returns:"a  <span>relation</span> with the  <span>variable</span> alone on one side ",effect:"This is a  <span>simplifying operation</span>. The  <span>variable</span> value can now be read, or we have opened up the possibility for substitution. ",steps:{gatherononeside:"We gather all  <span>terms</span> containing the  <span>variable</span> to one side of the  <span>relation</span>.",moveotherstuffaway:"All  <span>terms</span> not containing the  <span>variable</span> are moved to the other side.",mashxtogether:"We  <span>merge</span> all  <span>terms</span> containing the  <span>variable</span>. Now the  <span>variable</span> is isolated to a single  <span>term</span>!",multeqwithxdenom:"Since the  <span>variable</span> is stuck inside a  <span>fraction</span> we multiply the  <span>relation</span> with the  <span>denominator</span> of that  <span>fraction</span>, which will let us  <span>eliminate</span> it.",multintorid:"First we multiply the  <span>introduced</span>  <span>factor</span> into the  <span>fraction</span>...",kill:"...and then we  <span>eliminate</span> the  <span>denominator</span>. We have now freed the  <span>variable</span> from the  <span>fraction</span>!",extractsolvefor:"As the  <span>variable</span> is stuck inside a  <span>product</span> we  <span>factor</span> it out, in order to be able to divide away the other  <span>factors</span>.",divrel:"We divide the  <span>relation</span> with the  <span>variable</span>  <span>coefficient</span>.",flattenstuffout:"We  <span>flatten</span> the resulting  <span>conjunction</span>.",removecoeff:"Now we can  <span>eliminate</span> the  <span>coefficient</span>, and the  <span>variable</span> is alone on one side of the  <span>relation</span>!"}}},solveQuadHiddenInRoot:{id:244,sv:{name:"lös andragradsekvation dold i rot",explanation:"En  <span>ekvation</span> där en  <span>variabel</span> återfinns som  <span>faktor</span> och som kvadratrot kan göras om till en andragradsekvation! Detta kan egentligen tillämpas även på  <span>olikheter</span>, men Algebra Explorer har ännu inte lärt sig det.  ",targets:"en  <span>ekvation</span> ",returns:"en löst  <span>ekvation</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom  <span>variabeln</span> inte längre förekommer med olika  <span>exponenter</span>. ",steps:{bigtorootprod:"Först  <span>faktoriserar</span> vi  <span>variabeln</span> till två kvadratrötter.",bigtosquare:"Dessa  <span>rötter</span> slår vi ihop till en  <span>potens</span>. Med avseende på kvadratrot av  <span>variabeln</span> så har vi nu en andragradsekvation!",introducevar:"För att hantera detta som en andragradsekvation så inför vi en ny  <span>variabel</span> som är lika med denna kvadratrot.",changebig:"Vi substituerar den första kvadratroten mot  <span>variabeln</span>...",changesmall:"...och sedan också den andra. Nu har vi en 'äkta' andragradsekvation!",nowsolve:"Vi tillämpar lösningsmetoden för en andragradsekvation, vilket ger oss ett  <span>uttryck</span> för vår nya  <span>variabel</span>.",changeback:"Slutligen substituerar vi tillbaka kvadratroten och tar samtidigt bort vår tillfälliga  <span>variabel</span>. Vi har nu ett  <span>uttryck</span> för kvadratroten på  <span>variabeln</span>, vilket vi förhoppningsvis enkelt kan förenkla vidare!"}},en:{name:"solve second degree root equation",explanation:"An  <span>equation</span> where a  <span>variable</span> is found as a  <span>factor</span> and as a  <span>square root</span> can be transformed into a second degree  <span>equation</span>! This can be used also with  <span>inequalities</span>, but Algebra Explorer has yet to learn that. ",targets:"an  <span>equation</span> ",returns:"a solved  <span>equation</span> ",effect:"This is a  <span>simplifying operation</span> since the variabel no longer appears with different  <span>exponents</span>. ",steps:{bigtorootprod:"First we  <span>factorise</span> the  <span>variable</span> into a  <span>product</span> of two  <span>square roots</span>.",bigtosquare:"The  <span>roots</span> we  <span>merge</span> into a  <span>power</span>. With regards to the  <span>square root</span>, we now have a second degree  <span>equation</span>!",introducevar:"In order to be able to deal with this as a second degree  <span>equation</span> we  <span>introduce</span> a new  <span>variable</span> equal to the  <span>square root</span>.",changebig:"We substitute the first  <span>square root</span> for this new  <span>variable</span>...",changesmall:"...and then the second  <span>square root</span>. Now we have a 'true' second degree  <span>equation</span>!",nowsolve:"We apply the metod to  <span>solve</span> a second degree  <span>equation</span>, which gives us an  <span>expression</span> for the new  <span>variable</span>.",changeback:"Finally we substitute the  <span>square root</span> back,  <span>removing</span> our temporary new  <span>variable</span> in the process. Now we have an  <span>expression</span> for the  <span>square root</span> of the  <span>variable</span>, which we can hopefully  <span>simplify</span> further."}}},solveQuadHiddenInHigher:{id:243,sv:{name:"lös andragradsekvation dold i högre",explanation:"En  <span>ekvation</span> med två olika  <span>exponenter</span> på  <span>variablerna</span>, och där den ena  <span>exponenten</span> är dubbelt så stor som den andra, kan göras om till en andragradsekvation! Detta kan egentligen tillämpas även på  <span>olikheter</span>, men Algebra Explorer har ännu inte lärt sig det. ",targets:"en  <span>ekvation</span> där en  <span>variabel</span> förekommer med två olika  <span>exponenter</span>, den ena dubbelt så stor som den andra ",returns:"en löst  <span>ekvation</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom  <span>variabeln</span> inte längre förekommer med olika  <span>exponenter</span>. ",steps:{splitbigexp:"Först  <span>faktoriserar</span> vi ut en  <span>faktor</span> 2 ur den högre  <span>exponenten</span>. Efter som den var dubbelt så stor som den andra  <span>exponenten</span> så blir resten identisk med den andra!",buildsquarepow:"Nu lyfter vi upp  <span>faktorn</span> 2 till en egen  <span>exponent</span>.  <span>Basen</span> i denna nya  <span>potens</span> är nu identisk med den andra variabelpotensen, så i avseende på dessa så har vi en andragradsekvation!",introducevar:"För att hantera detta som en andragradsekvation så inför vi en ny  <span>variabel</span> som är lika med denna  <span>potens</span>.",changebig:"Vi substituerar den första  <span>potensen</span> mot  <span>variabeln</span>...",changesmall:"...och sedan också den andra. Nu har vi en 'äkta' andragradsekvation!",nowsolve:"Vi tillämpar lösningsmetoden för en andragradsekvation, vilket ger oss ett  <span>uttryck</span> för vår nya  <span>variabel</span>.",changeback:"Slutligen substituerar vi tillbaka  <span>potensen</span> och tar samtidigt bort vår tillfälliga  <span>variabel</span>! Vi har nu ett  <span>uttryck</span> för kvadraten på  <span>variabeln</span>, vilket är lättare att jobba vidare med!"}},en:{name:"solve hidden second degree equation",explanation:"An  <span>equation</span> with only two different  <span>exponents</span> for the  <span>variable</span>  <span>terms</span>, and where one  <span>exponent</span> is twice as big as the other, can be transformed into a second degree  <span>equation</span>! This can be used also with  <span>inequalities</span>, but Algebra Explorer has yet to learn that. ",targets:"an  <span>equation</span> where a  <span>variable</span> appears with two different  <span>exponents</span>, one twice the size of the other ",returns:"a solved  <span>equation</span> ",effect:"This is a  <span>simplifying operation</span> since the variabel no longer appears with different  <span>exponents</span>. ",steps:{splitbigexp:"First we extract a  <span>factor</span> 2 from the higher  <span>exponent</span>. Since it was twice as big as the other  <span>exponent</span>, the remainder after the factorising is identical to the other  <span>exponent</span>!",buildsquarepow:"Now we promote the  <span>factor</span> 2 to an  <span>exponent</span> of its own. The  <span>base</span> in this new  <span>power</span> is now identical to the other  <span>variable</span>  <span>power</span>, so with regards to this  <span>power</span> we now have a second degree  <span>equation</span>!",introducevar:"In order to be able to deal with this as a second degree  <span>equation</span> we  <span>introduce</span> a new  <span>variable</span> equal to the  <span>variable</span>  <span>power</span>.",changebig:"We substitute the first  <span>power</span> for this new  <span>variable</span>...",changesmall:"...and then the second  <span>power</span>. Now we have a 'true' second degree  <span>equation</span>!",nowsolve:"We apply the metod to  <span>solve</span> a second degree  <span>equation</span>, which gives us an  <span>expression</span> for the new  <span>variable</span>.",changeback:"Finally we substitute the  <span>power</span> back,  <span>removing</span> our temporary new  <span>variable</span> in the process. We now have an  <span>expression</span> for the square  <span>power</span> of the  <span>variable</span>, which we can hopefully easilly  <span>simplify</span> further!"}}},moveTermsBetweenSidesInRel:{id:241,sv:{name:"flytta termer mellan led i relation",explanation:"Vi kan flytta  <span>termer</span> från ena ledet till det andra i en  <span>relation</span> genom att addera  <span>termernas</span> motsats till  <span>relationen</span>. De kommer då ta ut varandra på sidan vi vill flytta från, och dyka upp med  <span>omvänt tecken</span> på andra sidan. ",targets:"en  <span>relation</span> ",returns:"en  <span>relation</span> med omflyttade  <span>termer</span> ",effect:"Detta är en  <span>villkorligt förenklande</span>  <span>operation</span>, då omflyttningen är  <span>förenklande</span> om den innebär att alla  <span>termer</span> med en viss  <span>variabel</span> blir grupperade på en sida. ",steps:{collecttermstomove:"Vi samlar ihop alla  <span>termer</span> vi vill flytta i en  <span>summaterm</span>.",addmirroroftermtomove:"Vi adderar  <span>termen</span> vi vill flytta till  <span>relationen</span> fast med  <span>omvänt tecken</span>.",flattenfromside:"Vi  <span>jämnar ut</span>  <span>summan</span> på sidan vi vill flytta ifrån för att kunna låta  <span>termerna</span> ta ut varandra.",addthenumbers:"Vi slår ihop  <span>termerna</span> som tar ut varandra.",smashthemtozero:"Vi slår ihop  <span>termerna</span> som tar ut varandra.",removebehindzero:"Vi  <span>tar bort</span>  <span>termen</span>  <span>0</span> som uppkom.",removetosidezero:"Sidan vi flyttar till var  <span>0</span>, så vi  <span>tar bort</span> den  <span>termen</span> som inte längre behövs.",collapsethenegsum:"Eftersom vi flyttade flera  <span>termer</span> så blev resultatet på andra sidan en  <span>negativ summa</span>, som vi  <span>jämnar ut</span> genom att  <span>distribuera</span> in  <span>negationen</span>.",finallyflattenotherside:"Slutligen jämnar vi ut  <span>summan</span> i ledet vi flyttade till."}},en:{name:"move terms between sides in relation",explanation:"We can move  <span>terms</span> from one side of a  <span>relation</span> to another by adding the  <span>terms</span> with reversed  <span>negation</span> sign to the  <span>relation</span>. They will then cancel each other out on the side we're moving from, and appear with  <span>switched negation signs</span> on the other side. ",targets:"a  <span>relation</span> ",returns:"a  <span>relation</span> with moved  <span>terms</span> ",effect:"This is a  <span>conditionally simplifying operation</span>, since the move is advantageous if it means that all  <span>terms</span> with a specific  <span>variable</span> are collected on one side of the  <span>relation</span>. ",steps:{collecttermstomove:"We collect all  <span>terms</span> we want to move into a  <span>sum term</span>.",addmirroroftermtomove:"We add the  <span>term</span> we want to move to the  <span>relation</span> but with  <span>switched negation sign</span>.",flattenfromside:"We  <span>flatten</span> the  <span>sum</span> on the side we're moving form in order to let the  <span>terms</span> cancel each other out.",addthenumbers:"Now we let the  <span>terms</span> cancel each other out.",smashthemtozero:"Now we let the  <span>terms</span> cancel each other out.",removebehindzero:"We  <span>remove</span> the resulting  <span>term</span>  <span>0</span>.",removetosidezero:"The  <span>relation</span> side we're moving to was  <span>0</span>, so we need to clean up that  <span>0</span>  <span>term</span> which is no longed needed.",collapsethenegsum:"Because we were moving many  <span>terms</span>, we now have a  <span>negative sum</span>. We  <span>flatten</span> that by distributing the  <span>negation</span> into the  <span>sum</span>.",finallyflattenotherside:"Finally we  <span>flatten</span> the  <span>sum</span> on the side we moved to, and we're done!"}}},addToRelationSides:{id:134,sv:{name:"addera till båda leden i relation",explanation:"I en  <span>relation</span> kan vi addera en identisk  <span>term</span> till båda leden, utan att påverka  <span>relationens</span>  <span>sanningsvärde</span>. ",targets:"en  <span>relation</span> ",returns:"en  <span>relation</span> med en extra  <span>term</span> i varje led ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom vi har  <span>introducerat</span> två nya  <span>termer</span>. "},en:{name:"add to both sides in a relation",explanation:"In a  <span>relation</span> we can add an identical  <span>term</span> to both sides without affecting the  <span>truth value</span> of the  <span>relation</span>. ",targets:"a  <span>relation</span> ",returns:"a  <span>relation</span> with an extra  <span>term</span> on each side ",effect:"This is a  <span>complicating operation</span> since we have  <span>introduced</span> two new  <span>terms</span>. "}},purgeEqualTermsFromRelation:{id:135,sv:{name:"ta bort identiska relationstermer",explanation:"Om båda leden i en  <span>relation</span> innehåller identiska  <span>termer</span> så kan dessa  <span>tas bort</span>, genom att vi  <span>introducerar</span> samma  <span>term</span> med  <span>omvänt tecken</span> till  <span>relationen</span>. ",targets:"en  <span>relation</span> med identisk  <span>term</span> i båda led ",returns:"en  <span>relation</span> med två färre  <span>termer</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi  <span>tagit bort</span> två  <span>termer</span>. ",steps:{addmirroroftermtodelete:"Först  <span>introducerar</span> vi  <span>termen</span> vi vill  <span>ta bort</span> fast med  <span>omvänt tecken</span>.",flattenrelsidesum0:"Vi  <span>jämnar ut</span>  <span>summan</span> i vänsterledet för att kunna  <span>slå ihop</span>  <span>termerna</span>.",collapsemirrors0:"Vi slår ihop  <span>termerna</span> i vänsterledet som tar ut varandra.",flattenrelsidesum1:"Vi  <span>jämnar ut</span>  <span>summan</span> i högerledet för att kunna  <span>slå ihop</span>  <span>termerna</span>.",collapsemirrors1:"Vi slår ihop  <span>termerna</span> i högerledet som tar ut varandra.",clearzero:"Den kvarvarande  <span>termen</span>  <span>0</span>  <span>tar vi bort</span>."}},en:{name:"remove identical terms in relation",explanation:"If both sides of a  <span>relation</span> contain identical  <span>terms</span> then these can be  <span>removed</span>, by  <span>introducing</span> the same  <span>term</span> with  <span>switched sign</span> to the  <span>relation</span>. ",targets:"a  <span>relation</span> with identical  <span>terms</span> on both sides ",returns:"a  <span>relation</span> with two fewer  <span>terms</span> ",effect:"This is a  <span>simplifying operation</span> since we have  <span>removed</span> two  <span>terms</span>. ",steps:{addmirroroftermtodelete:"First we  <span>introduce</span> the  <span>term</span> we want to  <span>remove</span>, only with  <span>switched sign</span>.",flattenrelsidesum0:"We  <span>flatten</span> the  <span>sum</span> on the left side in order to be able to  <span>merge</span> the  <span>terms</span>.",collapsemirrors0:"We  <span>merge</span> the  <span>terms</span> on the left sides, making them cancel each other out.",flattenrelsidesum1:"We  <span>flatten</span> the  <span>sum</span> on the right side in order to be able to  <span>merge</span> the  <span>terms</span>.",collapsemirrors1:"We  <span>merge</span> the  <span>terms</span> on the right sides, making them cancel each other out.",clearzero:"The remaining  <span>term</span>  <span>0</span> can be  <span>removed</span>."}}},divEquality:{id:138,sv:{name:"dividera båda sidor i en likhet",explanation:"Vi kan dividera båda sidor i en  <span>likhet</span> (eller en  <span>förbjuden likhet</span>) utan att påverka dess  <span>sanningsvärde</span>. Vi måste också komma ihåg att  <span>nämnaren</span> vi  <span>introducerar</span> inte får vara lika med  <span>0</span>, och i så fall behålla ursprungsrelationen. Vi åstadkommer detta genom en  <span>disjunktion</span> med två  <span>utsagor</span>. Den första  <span>utsagan</span> är den nya  <span>relationen</span> där vi delat båda led, och den andra  <span>utsagan</span> är en  <span>konjunktion</span> av ursprungsrelationen och en  <span>likhet</span> mellan vår tilltänkta  <span>nämnare</span> och  <span>0</span>. ",targets:"en  <span>likhet</span> (eller  <span>förbjuden likhet</span>) ",returns:"en  <span>disjunktion</span> av  <span>relationen</span> med ny  <span>nämnare</span> i båda led och en  <span>konjunktion</span> av ursprungsrelationen och en  <span>likhet</span> mellan den  <span>introducerade</span>  <span>nämnaren</span> och  <span>0</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom vi ersatt en  <span>likhet</span> med en  <span>disjunktion</span>. "},en:{name:"divide both sides in an equality",explanation:"We can divide both sides in an  <span>equality</span> (or a  <span>forbidden equality</span>) without affecting its  <span>truth value</span>. However, we must remember that the  <span>denominator</span> we  <span>introduce</span> cannot be  <span>0</span>, and if it is, we want to keep the original  <span>relation</span>. This can be accomplished through a  <span>disjunction</span> with two values. The first is the new  <span>relation</span> where have divided both sides, and the second is a  <span>conjunction</span> of the original  <span>relation</span> and an  <span>equality</span> between the  <span>introduced</span>  <span>denominator</span> and  <span>0</span>. ",targets:"an  <span>equality</span> (or a  <span>forbidden equality</span>) ",returns:"a  <span>disjunction</span> of the  <span>relation</span> with  <span>introduced</span>  <span>denominators</span> and a  <span>conjunction</span> of the original  <span>relation</span> and an  <span>equality</span> between the  <span>introduced</span>  <span>denominator</span> and  <span>0</span> ",effect:"This is a  <span>complicating operation</span>, since we have replaced an  <span>equality</span> with a  <span>disjunction</span>. "}},divInequality:{id:306,sv:{name:"dividera båda sidor i jämförelse",explanation:"Att dividera en  <span>jämförelse</span> är  <span>komplicerat</span>. Om värdet vi delar med är negativt så måste vi vända på  <span>jämförelsen</span>, och om värdet är  <span>0</span> så vill vi behålla den urpsrungliga  <span>jämförelsen</span>. Resultatet blir därför en  <span>disjunktion</span> mellan en  <span>logisk förgrening</span> som täcker båda möjligheterna för positiv och  <span>negativ</span>  <span>nämnare</span>, och sedan en  <span>konjunktion</span> med den ursprungliga  <span>jämförelsen</span> och en  <span>likhet</span> mellan  <span>nämnaren</span> och  <span>0</span>. ",targets:"en  <span>jämförelse</span> ",returns:"en  <span>disjunktion</span> av en  <span>logisk förgrening</span> och en  <span>konjunktion</span> ",effect:"Detta är en  <span>komplicerande operation</span> eftersom vi ersatt en  <span>jämförelse</span> med en  <span>disjunktion</span> av en  <span>logisk förgrening</span> och en  <span>konjunktion</span>. "},en:{name:"divide both sides in comparison",explanation:"To divide a  <span>comparison</span> is  <span>complicated</span>. If the value we divide with was  <span>negative</span> we need to reverse the  <span>comparison</span>, and if the value is  <span>0</span> we want to keep the original  <span>comparison</span>. Therefore the result is a  <span>disjunction</span> between a  <span>logic branching</span> that covers both possibilities of positive or  <span>negative</span>  <span>denominator</span>, and a  <span>conjunction</span> between the original  <span>comparison</span> and an  <span>equality</span> between the  <span>denominator</span> and  <span>0</span>. ",targets:"a  <span>comparison</span> ",returns:"a  <span>disjunction</span> between a  <span>logic branching</span> and a  <span>conjunction</span> between the original  <span>relation</span> and an  <span>equality</span> between the  <span>denominator</span> and  <span>0</span> ",effect:"This is a  <span>complicating operation</span> since we have replaced a  <span>comparison</span> with a  <span>disjunction</span> of a  <span>logic branching</span> and a  <span>conjunction</span>. "}},multEquality:{id:144,sv:{name:"multiplicera båda sidor i likhet",explanation:"Vi kan multiplicera båda sidor i en  <span>likhet</span> (eller en  <span>förbjuden likhet</span>) utan att påverka dess  <span>sanningsvärde</span>. Vi måste också komma ihåg att  <span>faktorn</span> vi  <span>introducerar</span> inte får vara lika med  <span>0</span>. Resultatet blir därför en  <span>konjunktion</span> av den multipicerade  <span>relationen</span> och en  <span>förbjuden likhet</span> mellan den  <span>introducerade</span>  <span>faktorn</span> och  <span>0</span>. ",targets:"en  <span>likhet</span> (eller  <span>förbjuden likhet</span>) ",returns:"en  <span>konjunktion</span> av den multiplicerade  <span>relationen</span> och en  <span>förbjuden likhet</span> mellan den  <span>introducerade</span>  <span>faktorn</span> och  <span>0</span> ",effect:"Detta är en  <span>komplicerande operation</span>, eftersom vi ersatt en  <span>likhet</span> med en  <span>konjunktion</span>. "},en:{name:"multiply both sides in an equality",explanation:"We can multiply both sides in an  <span>equality</span> (or a  <span>forbidden equality</span>) without affecting its  <span>truth value</span>. However, we must remember that the  <span>factor</span> we  <span>introduce</span> cannot be 0The result is therefore a  <span>conjunction</span> of the multiplied  <span>relation</span> and a  <span>forbidden equality</span> between the  <span>introduced</span>  <span>factor</span> and  <span>0</span>. ",targets:"an  <span>equality</span> (or a  <span>forbidden equality</span>) ",returns:"a  <span>conjunction</span> of the multiplied  <span>relation</span> and a  <span>forbidden equality</span> between the  <span>introduced</span>  <span>factor</span> and  <span>0</span> ",effect:"This is a  <span>complicating operation</span>, since we have replaced an  <span>equality</span> with a  <span>conjunction</span>. "}},multInequality:{id:307,sv:{name:"multiplicera båda sidor i jämförelse",explanation:"Att multiplicera en  <span>jämförelse</span> medför två möjlighter. Om värdet vi multiplicerar med är negativt så måste vi vända på  <span>jämförelsen</span>. Om inte så förblir  <span>jämförelsen</span> vänd åt samma håll, men då måste vi också komma ihåg att den  <span>introducerade</span>  <span>faktorn</span> inte får vara  <span>0</span>. ",targets:"en  <span>jämförelse</span> ",returns:"en  <span>logisk förgrening</span> ",effect:"Detta är en  <span>komplicerande operation</span> eftersom vi ersatt en  <span>jämförelse</span> med en  <span>logisk förgrening</span>. "},en:{name:"multiply both sides in comparison",explanation:"Multiplying a  <span>comparison</span> means we have two cases. If the value we multiply with was  <span>negative</span> we need to reverse the  <span>comparison</span>. If not the  <span>comparison</span> stays the same way, but then we need to remember that the  <span>introduced</span>  <span>factor</span> cannot be  <span>0</span>. ",targets:"a  <span>comparison</span> ",returns:"a  <span>logic branching</span> ",effect:"This is a  <span>complicating operation</span> since we have replaced a  <span>comparison</span> with a  <span>logic branching</span>. "}},eliminateSameFacsFromRelationSides:{id:139,sv:{name:"eliminera faktorer i relation",explanation:"Om en reell  <span>faktor</span> förekommer i båda led i en  <span>relation</span> så kan dessa  <span>elimineras</span> genom att  <span>relationen</span> först divideras med denna  <span>faktor</span>. ",targets:"en  <span>relation</span> med gemensam  <span>faktor</span> i leden ",returns:"en  <span>relation</span> med färre  <span>faktorer</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi  <span>eliminerat</span>  <span>faktorer</span>. ",steps:{dividerelwithfacstoremove:"Först delar vi båda led med  <span>faktorn</span> som skall  <span>elimineras</span>.",eliminateonleftside:"Sedan eliminerar vi den från vänsterledet...",eliminateonrightside:"...och också från högerledet."}},en:{name:"eliminate factors in relation",explanation:"If both sides in a  <span>relation</span> contains the same  <span>real</span>  <span>factor</span>, those  <span>factors</span> can be  <span>eliminated</span> by first dividing the  <span>relation</span> with that  <span>factor</span>. ",targets:"a  <span>relation</span> with a common  <span>factor</span> on both sides ",returns:"a  <span>relation</span> with fewer  <span>factors</span> ",effect:"This is a  <span>simplifying operation</span> since we have  <span>eliminated</span>  <span>factors</span>. ",steps:{dividerelwithfacstoremove:"First we divide both sides of the  <span>relation</span> with the  <span>factor</span> to be  <span>eliminated</span>.",eliminateonleftside:"We then  <span>eliminate</span> it from the left side...",eliminateonrightside:"...and the right side."}}},eliminateCommonInnerFacsInRel:{id:140,sv:{name:"eliminera inre numeriska faktorer i relation",explanation:"Om alla  <span>termer</span> på båda sidor i en  <span>relation</span> är delbara med samma  <span>tal</span>, så kan detta  <span>tal</span> förkortas bort. ",targets:" <span>Relation</span> där alla  <span>termer</span> har en gemensam inre numerisk  <span>faktor</span> ",returns:" <span>Relation</span> med förkortade  <span>termer</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi har reducerat eller  <span>eliminerat</span> flera  <span>faktorer</span>. ",steps:{dividewithinnerfactoelim:"Först delar vi båda sidor i  <span>relationen</span> med den gemensamma inre  <span>faktorn</span>.",lonezerodividesawayanything:"På nollsidan kan vi  <span>ta bort</span>  <span>nämnaren</span>.",collapseinnerfacsinsidefrac:"Nu eliminerar vi den inre  <span>faktorn</span> från ledet."}},en:{name:"eliminate common inner factors in relation",explanation:"If all  <span>terms</span> in a  <span>relation</span> are dividable with the same  <span>number</span>, that  <span>number</span> can be  <span>eliminated</span> from all  <span>terms</span>. ",targets:" <span>Relation</span> where all  <span>term</span> have a common inner numeric  <span>factor</span> ",returns:"Reduced  <span>relation</span> ",effect:"This is a  <span>simplifying operation</span> since we have reduced or  <span>eliminated</span> several  <span>factors</span>. ",steps:{dividewithinnerfactoelim:"First we divide both sides of the  <span>relation</span> with the common inner numeric  <span>factor</span>.",lonezerodividesawayanything:"On the zero side we can  <span>remove</span> the  <span>denominator</span>.",collapseinnerfacsinsidefrac:"We  <span>eliminate</span> the inner  <span>factor</span> from the  <span>relation</span> side."}}},collapseNegationsInSumsInRelation:{id:146,sv:{name:"eliminera negationer i relation",explanation:"Om varje  <span>term</span> i båda led i en  <span>relation</span> innehåller en  <span>negativ faktor</span> så kan dessa  <span>negationer</span>  <span>elimineras</span>! ",targets:"en  <span>relation</span> där varje  <span>term</span> innehåller en  <span>negativ faktor</span> ",returns:"en  <span>relation</span> utan  <span>negationer</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi  <span>tagit bort</span>  <span>negationer</span>. ",steps:{dividewithnegonetoelim:"Vi delar först  <span>relationen</span> med  <span>-1</span>, som vi kommer använda för att  <span>eliminera</span>  <span>negationerna</span> i våra  <span>termer</span>.",lonezerodividesawayanything0:"Vänsterledet var  <span>0</span>, så där försvinner vår  <span>introducerade</span>  <span>nämnare</span>.",lonezerodividesawayanything1:"Högerledet var  <span>0</span>, så där försvinner vår  <span>introducerade</span>  <span>nämnare</span>.",collapsenegsinsidefrac0:"Vi  <span>tar bort</span>  <span>negationerna</span> i vänsterledet.",collapsenegsinsidefrac1:"Vi  <span>tar bort</span>  <span>negationerna</span> i högerledet."}},en:{name:"eliminate negations in relation",explanation:"If every  <span>term</span> on both sides of a  <span>relation</span> contains a  <span>negative factor</span>, these  <span>negations</span> can be  <span>eliminated</span>! ",targets:"a  <span>relation</span> where every  <span>term</span> contains a  <span>negative factor</span> ",returns:"a  <span>relation</span> without  <span>negations</span> ",effect:"This is a  <span>simplifying operation</span> since we  <span>remove</span>  <span>negations</span>. ",steps:{dividewithnegonetoelim:"First we divide the  <span>relation</span> with  <span>-1</span>, which we will use to  <span>eliminate</span> the  <span>negations</span> in our  <span>terms</span>.",lonezerodividesawayanything0:"The left side was  <span>0</span>, so there our  <span>introduced</span>  <span>denominator</span> disappears.",lonezerodividesawayanything1:"The right side was  <span>0</span>, so there our  <span>introduced</span>  <span>denominator</span> disappears.",collapsenegsinsidefrac0:"We  <span>remove</span> the  <span>negations</span> from the left side.",collapsenegsinsidefrac1:"We  <span>remove</span> the  <span>negations</span> from the right side."}}},mergeNumFracFacOnOppRelSides:{id:151,sv:{name:"integrera nämnarfaktor i relation",explanation:"Om ena ledet i en  <span>relation</span> har en heltalsfaktor, och det andra ledet har en  <span>nämnare</span> med heltalsfaktor, så kan dessa två  <span>slås ihop</span>. ",targets:"en  <span>relation</span> med heltalsfaktor i ena ledet och heltalfaktor i andra ledets  <span>nämnare</span> ",returns:"en  <span>relation</span> med heltalsfaktorerna ihopslagna ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi slagit ihop  <span>faktorer</span>. ",steps:{digoutnum:"Vi bryter ur heltalsfaktorn.",movenegtonum:"Eftersom  <span>kvoten</span> var  <span>negativ</span> så flyttar vi dess  <span>negation</span> till  <span>täljaren</span> för att kunna komma åt  <span>faktorn</span> i  <span>nämnaren</span>.",multwithnumtorid:"Nu multiplicerar vi båda leden med nämnarfaktorn för att kunna förkorta bort den.",flattenrelsideprod:"Vi  <span>jämnar ut</span>  <span>produkten</span> efter mutlipliceringen.",multnumsonnondenomside:"Nu slår vi ihop  <span>heltalen</span> i ledet som inte var en  <span>kvot</span>.",multnumintofrac:"Vi multiplicerar in den  <span>introducerade</span>  <span>faktorn</span> i  <span>kvoten</span>.",killnumondenomside:"Slutligen eliminerar vi  <span>faktorerna</span> i  <span>faktorn</span>, och vi är klara!"}},en:{name:"integrate relation denominator factor",explanation:"If one side in a  <span>relation</span> has an  <span>integer</span>  <span>factor</span>, and the other side has an  <span>integer</span>  <span>factor</span> in its  <span>denominator</span>, then these two  <span>factors</span> can be  <span>merged</span>! ",targets:"a  <span>relation</span> with an  <span>integer</span>  <span>factor</span> on one side and an  <span>integer</span>  <span>factor</span> in the  <span>denominator</span> on the other side ",returns:"a  <span>relation</span> with these two  <span>factors</span>  <span>merged</span> ",effect:"This is a  <span>simplifying operation</span> since we  <span>merged</span> two  <span>factors</span>. ",steps:{digoutnum:"We extract the  <span>integer</span>  <span>factor</span>.",movenegtonum:"Because the  <span>fraction</span> was  <span>negative</span> we first move the  <span>negation</span> to the  <span>numerator</span>, in order to reach the  <span>factor</span> in the  <span>denominator</span> that we want to ger rid of.",multwithnumtorid:"Now we multiply both sides of the  <span>relation</span> with the same  <span>factor</span> as found in the  <span>denominator</span>.",flattenrelsideprod:"We  <span>flatten</span> the  <span>product</span> after  <span>the multiplication</span> of the  <span>relation</span>.",multnumsonnondenomside:"Now we  <span>merge</span> the  <span>integer</span>  <span>factors</span> on the side that wasn't a  <span>fraction</span>.",multnumintofrac:"We move the  <span>introduced</span>  <span>factor</span> into the  <span>fraction numerator</span>.",killnumondenomside:"Finally we  <span>eliminate</span> the  <span>factors</span> from the  <span>fraction</span>, and we are done!"}}},zeroProdMethod:{id:153,sv:{name:"tillämpa nollproduktsmetoden",explanation:"Om ena sidan i en  <span>likhet</span> är  <span>talet 0</span>, och den andra sidan är en  <span>produkt</span>, så måste någon av  <span>faktorerna</span> i  <span>produkten</span> vara lika med  <span>0</span>. ",targets:"en  <span>likhet</span> mellan  <span>0</span> och  <span>produkt</span> ",returns:"en  <span>disjunktion</span> med en  <span>likhet</span> med  <span>0</span> för varje  <span>faktor</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi lättare kan utvärdera  <span>likheterna</span> med de enskilda  <span>relationerna</span>. "},en:{name:"apply zero product method",explanation:"If one side of an  <span>equality</span> is the  <span>number 0</span> and the other side is a  <span>product</span>, then at least one of the  <span>factors</span> in the  <span>product</span> must be equal to  <span>0</span>. ",targets:"an  <span>equality</span> between  <span>0</span> and a  <span>product</span> ",returns:"a  <span>disjunction</span> with an  <span>equality</span> with  <span>0</span> for each  <span>factor</span> ",effect:"This is a  <span>simplifying operation</span>, since we can more easily evaluate the  <span>equalities</span> with individual  <span>factors</span>. "}},solveEqWithNoConstant:{id:155,sv:{name:"lös ekvation utan konstant",explanation:"Om alla  <span>termer</span> på båda sidor i en  <span>likhet</span> har en gemensam  <span>faktor</span>, så kan vi samla alla  <span>termer</span> på en sida och bryta ut den gemensamma  <span>faktorn</span>. Det gör att vi får en  <span>produkt</span> som är lika med  <span>0</span>, och då kan vi tillämpa nollproduktsmetoden. ",targets:"en  <span>likhet</span> där alla  <span>termer</span> har gemensam  <span>faktor</span> ",returns:"en  <span>disjunktion</span> av  <span>likheter</span> med  <span>0</span> ",effect:"Detta är en  <span>förenklande operation</span> eftersom det är lättare att utvärdera enkla  <span>likheter</span> med  <span>0</span>. ",steps:{movetosame:"Vi flyttar  <span>termen</span> till ledet där vi samlar alla  <span>termer</span>.",extractthecommonpartfrompow:"Vi extraherar den gemensamma  <span>faktorn</span> från  <span>potensen</span>.",flattentermprod:"Efter att ha extraherat från  <span>potensen</span> så absorberar vi resultatet i den yttre  <span>produkten</span>.",pickoutvar:"Nu bryter vi ut den gemensamma  <span>faktorn</span> från alla  <span>termerna</span>.",flatten:"Vi fick ut en  <span>potens</span> med  <span>exponent</span>  <span>1</span>, vilket vi passar på att förenkla.",extractcommonfac:"Vi bryter ut  <span>faktorn</span> som finns i varje  <span>term</span>.",turntozeroprod:"Slutligen, nu när vi har en  <span>produkt</span> som är lika med  <span>0</span>, så tillämpar vi nollproduktsmetoden!",cleanup:"Vi städar upp den dubbla  <span>negationen</span> som skapades."}},en:{name:"solve equation without constant",explanation:"If all  <span>terms</span> on both sides in a  <span>relation</span> has a  <span>factor</span> in common, we can gather all  <span>terms</span> on one side and extract the common  <span>factor</span>. That leaves us with a  <span>product</span> that equals  <span>0</span>, which can then be targeted with the zero  <span>product</span> method. ",targets:"an  <span>equality</span> where all  <span>terms</span> have a common  <span>factor</span> ",returns:"a  <span>disjunction</span> of  <span>equalities</span> with  <span>0</span> ",effect:"This is a  <span>simplifying operation</span> since it is easier to evaluate the simple  <span>equalities</span> with  <span>0</span>. ",steps:{movetosame:"We move the  <span>term</span> to the side where we gather all  <span>terms</span>.",extractthecommonpartfrompow:"We extract the common  <span>factor</span> from the  <span>power</span>.",flattentermprod:"After having extracted from the  <span>power</span> we absorb the result in the outer  <span>product</span>.",pickoutvar:"Now we extract the common  <span>factor</span> from all  <span>terms</span>.",flatten:"We got out a  <span>power factor</span> with  <span>exponent</span>  <span>1</span>, which we take the opportunity to  <span>simplify</span>.",extractcommonfac:"We extract the  <span>factor</span> which is found in every  <span>term</span>.",turntozeroprod:"And finally, now that we have a  <span>product</span> that equals zero, we apply the zero  <span>product</span> method!",cleanup:"We  <span>collapse</span> the double  <span>negation</span> that was created."}}},collapseRootInZeroRel:{id:157,sv:{name:"förenkla likhet med rot och 0",explanation:"Om en  <span>rot</span> är lika med  <span>0</span> så är enda möjligheten att  <span>radikanden</span> också är lika med  <span>0</span>, eftersom enda sättet att multiplicera fram  <span>0</span> är att använda  <span>faktorn</span>  <span>0</span>. ",targets:"en  <span>likhet</span> mellan  <span>rot</span> och  <span>talet 0</span> ",returns:"en  <span>likhet</span> mellan  <span>radikanden</span> och  <span>talet 0</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi ersatt  <span>roten</span> med dess  <span>radikand</span>. "},en:{name:"simplify equality with root and 0",explanation:"If a  <span>root</span> is equal to  <span>0</span> then the only possibility is that  <span>the radicand</span> is also  <span>0</span>, since the only way to arrive at  <span>0</span> through  <span>multiplication</span> is to use the  <span>factor</span>  <span>0</span>. ",targets:"an  <span>equality</span> between  <span>root</span> and the  <span>number 0</span> ",returns:"an  <span>equality</span> between  <span>the radicand</span> and the  <span>number 0</span> ",effect:"This is a  <span>simplifying operation</span>, since we have replaced the  <span>root</span> with its  <span>radicand</span>. "}},collapsePowInZeroRel:{id:158,sv:{name:"förenkla likhet med potens och 0",explanation:"Om en  <span>potens</span> är lika med  <span>0</span> så är enda möjligheten att  <span>basen</span> också är lika med  <span>0</span>, eftersom enda sättet att multiplicera fram  <span>0</span> är att använda  <span>faktorn</span>  <span>0</span>. ",targets:"en  <span>likhet</span> mellan  <span>potens</span> och  <span>talet 0</span> ",returns:"en  <span>konjunktion</span> med  <span>likhet</span> mellan  <span>basen</span> och  <span>talet 0</span>, samt  <span>förbjuden likhet</span> mellan  <span>exponenten</span> och  <span>talet 0</span> ",effect:"Detta är en  <span>förenklande operation</span>, eftersom vi ersatt  <span>potensen</span> med dess  <span>bas</span>. "},en:{name:"simplify equality with power and 0",explanation:"If a  <span>power</span> is equal to  <span>0</span> then the only possibility is that the  <span>base</span> is also  <span>0</span>, since the only way to arrive at  <span>0</span> through  <span>multiplication</span> is to use the  <span>factor</span>  <span>0</span>. ",targets:"an  <span>equality</span> between  <span>power</span> and the  <span>number 0</span> ",returns:"a  <span>conjunction</span> with  <span>equality</span> between the  <span>base</span> and the  <span>number 0</span>, and  <span>forbidden equality</span> between the  <span>exponent</span> and the  <span>number 0</span> ",effect:"This is a  <span>simplifying operation</span>, since we have replaced a  <span>power</span> with its  <span>base</span>. "}},backwardsQuadrify:{id:172,sv:{name:"kvadrera baklänges",explanation:"Vi kan  <span>faktorisera</span> en  <span>summa</span> som innehåller två  <span>potenser</span> med  <span>exponent 2</span> och en  <span>produkt</span> av båda  <span>potensernas</span>  <span>baser</span> och  <span>faktorn</span> 2. Detta är ett viktigt verktyg för att kunna lösa andragradsekvationer! ",targets:"en  <span>summa</span> med två  <span>potenser</span> med  <span>exponent 2</span> och en  <span>produktterm</span> av båda  <span>potensernas</span>  <span>baser</span> och  <span>faktorn</span> 2 ",returns:"en  <span>potens</span> där  <span>basen</span> är  <span>summan</span> av potenstermernas  <span>baser</span> och  <span>exponenten</span> är 2 ",effect:"Detta är en  <span>komplicerande operation</span> eftersom  <span>uttrycket</span> nu är djupare nästlat. ",steps:{collectingterms:"Innan vi börjar så samlar vi potenstermerna och  <span>produkttermen</span> i en egen  <span>summaterm</span>. Denna  <span>summaterm</span> blir nu det vi kommer  <span>faktorisera</span>.",movetermsright:"Vi flyttar  <span>termerna</span> så att vi först har den ena  <span>potensen</span>, sedan  <span>produkten</span>, sedan den andra  <span>potensen</span>.",fixthisshit:"Vi flyttar bort  <span>negationen</span> från  <span>faktorn</span> 2 till att istället omfatta hela  <span>produkten</span>.",twotoones:"Vi delar upp  <span>faktorn</span> 2 i en  <span>summa</span> av  <span>termer</span>  <span>1</span>, för att att senare kunna dela upp  <span>produkttermen</span> i två.",multin:"Nu distribuerar vi in  <span>produkten</span> i vår  <span>summa</span> av ettor, vilket resulterar i att vi får två  <span>produkter</span>!",skipones:"Vi  <span>tar bort</span>  <span>faktorn</span>  <span>1</span> från den första  <span>produkttermen</span>.",skipones2:"Vi  <span>tar bort</span>  <span>faktorn</span>  <span>1</span> från den andra  <span>produkttermen</span>.",negifysum:"Vi distribuerar in  <span>summans</span>  <span>negation</span> och  <a href='#' class='wordlink' linkto='swapsign'>byter tecken</a> på  <span>produkttermerna</span>.",flattenout:"Vi  <span>jämnar ut</span> hela  <span>summan</span>.",extractingfirstbase:"Nu bryter vi ut den första  <span>basen</span> från den första  <span>potensen</span> och ena  <span>produkttermen</span>.",extractingsecondbase:"Vi gör likadant med den andra  <span>potensen</span> och den andra  <span>produkttermen</span>.",addingnegstoturnlast:"Vi  <span>introducerar</span>  <span>negativa faktorer</span> för att kunna  <a href='#' class='wordlink' linkto='swapsign'>byta tecken</a>.",neggingsumterm:"Först byter vi tecken på  <span>summatermen</span>.",neggingsecondbase:"Sedan byter vi tecken på den andra  <span>basen</span>.",extractingsum:"Nu bryter vi ut  <span>summafaktorerna</span>, vilket ger oss en  <span>produkt</span> av två identiska  <span>summafaktorer</span>!",mergingsumfacs:"Slutligen slår vi ihop  <span>summafaktorerna</span> till en  <span>potens</span>, och vi har nu kvadrerat baklänges!"}},en:{name:"quadify backwards",explanation:"We can  <span>factorise</span> a  <span>sum</span> if it contains two  <span>powers</span> with  <span>exponent 2</span> and a  <span>product term</span> made up by  <span>factors</span> equal to the  <span>power bases</span> and a  <span>factor</span> 2. This is used when solving quadratic  <span>equations</span>. ",targets:"a  <span>sum</span> containing two  <span>powers</span> with  <span>exponent 2</span> and a  <span>product term</span> made up by  <span>factors</span> equal to the  <span>power bases</span> and a  <span>factor</span> 2 ",returns:"a  <span>power</span> where the  <span>base</span> is a  <span>sum</span> of the  <span>power bases</span> and the  <span>exponent</span> is 2 ",effect:"This is a  <span>complicating operation</span> as the  <span>expression</span> is now more deeply nested. ",steps:{collectingterms:"Before we start we collect the  <span>power</span>  <span>terms</span> and the  <span>product term</span> into a  <span>sum term</span> of their own. This  <span>sum term</span> is what we will  <span>factorise</span>.",movetermsright:"We rearrange the  <span>terms</span> so that we first have one of the  <span>powers</span>, then the  <span>product</span>, and then the other  <span>power</span>.",fixthisshit:"We move the  <span>negation</span> from the  <span>factor</span> 2 to instead envelop the whole  <span>product</span>.",twotoones:"We  <span>split</span> the  <span>factor</span> 2 into a  <span>sum</span> of  <span>terms</span>  <span>1</span>, in order to later be able to  <span>split</span> the  <span>product term</span> into two.",multin:"Now we  <span>distribute</span> the  <span>product</span> into our  <span>sum</span> of ones, resulting in two  <span>product terms</span>!",skipones:"We  <span>remove</span> the  <span>factor</span>  <span>1</span> from the first  <span>product term</span>.",skipones2:"We  <span>remove</span> the  <span>factor</span>  <span>1</span> from the second  <span>product term</span>.",negifysum:"We  <span>distribute</span> the  <span>negation</span> into the  <span>sum</span>, switching signs on the  <span>product terms</span>.",flattenout:"Now we  <span>flatten</span> the whole  <span>sum</span>.",extractingfirstbase:"Now we extract the first  <span>base</span> from the first  <span>power</span> and one of the  <span>product term</span>.",extractingsecondbase:"We do the same with the second  <span>power</span> and the second  <span>product term</span>.",addingnegstoturnlast:"We  <span>introduce</span>  <span>negative factors</span> so we can switch signs.",neggingsumterm:"First we switch signs on the  <span>sum term</span>.",neggingsecondbase:"Then we switch signs on the second  <span>base</span>.",extractingsum:"Now we extract the  <span>sum factors</span>, which gives us a  <span>product</span> of two identical  <span>sum factors</span>!",mergingsumfacs:"Finally we  <span>merge</span> the  <span>sum factors</span> into a  <span>power</span>, and we have now successfully quadified backwards!"}}},solveQuadraticEquation:{id:177,en:{name:"solve quadratic equation",explanation:"An  <span>equation</span> or  <span>equality</span> where the  <span>variable</span> can be found both in a  <span>power</span> with  <span>exponent 2</span> and as a  <span>factor</span> of its own, and where we also have  <span>terms</span> not containing the  <span>variable</span>, can be solved using square completion. ",targets:"a  <span>relation</span> with a  <span>variable</span> in a  <span>power</span> with  <span>exponent 2</span> and in a free  <span>factor</span>, and also with  <span>terms</span> not containing the  <span>variable</span> ",returns:"a  <span>relation</span> with the  <span>variable</span> alone on one side ",effect:"This is a  <span>simplifying operation</span> since we now have an  <span>expression</span> representing the value of the  <span>variable</span>. ",steps:{movenegpowterm:"We move the  <span>power</span> to the same side as the  <span>factor</span>, which at the same time also switches signs and makes it positive.",cleanupafterpowmove:"We  <span>remove</span> the  <span>term</span>  <span>0</span> that appeared after the moving of the  <span>power</span>.",movenegvarterm:"We move the  <span>variable</span>  <span>factor</span> to the same side as the  <span>power</span>.",cleanupaftervarmove:"We  <span>remove</span> the  <span>term</span>  <span>0</span> that appeared after the moving of the  <span>factor</span>.",extractvar:"We extract the  <span>variable</span>.",movenegtofreevar:"We move the  <span>negation</span> to a  <span>factor</span> so we can reach the  <span>variable</span>.",cleannegmove:"We clean up the  <span>negations</span> in order to free the  <span>variable</span>.",extractpow:"We extract the  <span>power</span>.",divwithfactodestroy:"We divide the  <span>relation</span> with the  <span>power</span>  <span>coefficients</span>, aiming to get the  <span>power</span> completely alone.",cleanotherside:"We clean up the other side after the  <span>division</span>, as it was  <span>0</span>.",preptofix:"We  <span>split</span> the side into  <span>fraction terms</span> in another step towards freeing the  <span>power</span>.",freepow:"Now we  <span>eliminate</span> from the  <span>power</span>  <span>fraction</span>, making it completely free!",moveoutx:"We extract the  <span>variable</span>  <span>factor</span>.",flattenfracs:"We clean up the  <span>fraction term</span> after the  <span>division</span>.",cleanprod:"We clean up the  <span>product term</span>.",extracting2:"We create a  <span>factor</span> 2 in the  <span>variable</span>  <span>term</span> since we need that to be able to quadify backwards.",smoothingout:"We  <span>flatten</span> the  <span>variable</span>  <span>term</span> to one single  <span>product</span>.",fixingp:"We  <span>flatten</span> the  <span>numerator</span>  <span>fraction</span> that was created.",fixingpdenom:"We  <span>simplify</span> the denominator",addingmissingpart:"Now we  <span>introduce</span> the  <span>term</span> we need in order to be able to quadify backwards.",removeresultingzero:"We  <span>remove</span> the  <span>0</span>  <span>term</span> that isn't needed anymore.",flatteningsum:"We  <span>flatten</span> the  <span>sum</span> after the introduction of the new  <span>term</span>.",quadrifybackwards:"Now we can quadify backwards!",collectingotherterms:"We gather the other  <span>terms</span> so we can move them.",movingthemover:"We move the other  <span>terms</span> away.",solveforsub:"Now we  <span>solve</span> the  <span>power</span>  <span>equation</span>, freeing the  <span>base</span>.",finallymoveb:"We move away the other  <span>base</span>  <span>term</span>, and we are done!",cleanb:"We do some final cleanup on the other side.",flattenpath:"We clean up the  <span>logic</span> that was created because our  <span>relation</span> is a  <span>comparison</span>.",LOGICPATHDOUBLE:"We do the same cleanup in the other  <span>logic</span> path."}},sv:{name:"lös andragradsekvation",explanation:"En  <span>relation</span> där  <span>variabeln</span> återfinns både i en  <span>potens</span> med  <span>exponent 2</span> och som en egen  <span>faktor</span>, och som också har  <span>termer</span> som inte innehåller  <span>variabeln</span>, kan lösas med kvadratkomplettering. ",targets:"en  <span>relation</span> med en  <span>variabel</span> i en  <span>potens</span> med  <span>exponent 2</span> och i en egen  <span>faktor</span>, och som också har  <span>termer</span> utan  <span>variabeln</span> ",returns:"en  <span>relation</span> där  <span>variabeln</span> är ensam på ena sidan ",effect:"Detta är en  <span>förenklande operation</span> eftersom vi nu har ett  <span>uttryck</span> som representerar  <span>variabelns</span> värde. ",steps:{movenegpowterm:"Vi flyttar  <span>potensen</span> till samma sida som  <span>faktorn</span>, vilket samtidigt  <a href='#' class='wordlink' linkto='swapsign'>byter tecken</a> och gör den positiv.",cleanupafterpowmove:"Vi  <span>tar bort</span>  <span>termen</span>  <span>0</span> som uppstod på andra sidan efter flytten.",movenegvarterm:"Vi flyttar variabelfaktorn till samma sida som  <span>potensen</span>.",extractvar:"Nu bryter vi ut  <span>variabeln</span> ur sin  <span>term</span>.",movenegtofreevar:"Vi flyttar  <span>negationen</span> till en  <span>faktor</span> för att kunna komma åt  <span>variabeln</span>.",cleannegmove:"Vi städar upp  <span>negationerna</span> för att frigöra  <span>variabeln</span>.",extractpow:"Vi bryter ut  <span>potensen</span>.",divwithfactodestroy:"Vi delar  <span>relationen</span> med  <span>potensens</span>  <span>koefficienter</span> för att kunna få den helt ensam.",cleanotherside:"Vi städar upp det andra ledet efter divisionen eftersom det var  <span>0</span>.",preptofix:"Vi delar upp ledet i  <span>kvoter</span> i ännu ett steg mot att frigöra  <span>potensen</span>.",freepow:"Nu förkortar vi  <span>kvoten</span> med  <span>potensen</span>, som blir helt fri!",moveoutx:"Vi bryter ut variabelfaktorn.",flattenfracs:"Vi städar i  <span>kvottermen</span> efter divisionen.",cleanprod:"Vi städar upp i  <span>produkttermen</span>.",extracting2:"Vi skapar en  <span>faktor</span> 2 i variabeltermen, då den kommer behövas för att kvadrera baklänges.",smoothingout:"Vi  <span>jämnar ut</span> variabeltermen till en enda  <span>produkt</span>.",fixingp:"Vi  <span>jämnar ut</span>  <span>täljarkvoten</span> som uppstod.",fixingpdenom:"Vi  <span>förenklar</span>  <span>nämnaren</span>.",addingmissingpart:"Nu  <span>introducerar</span> vi den  <span>term</span> vi behöver för att kunna kvadrera baklänges.",removeresultingzero:"Vi  <span>tar bort</span> den uppkomna  <span>termen</span>  <span>0</span>.",flatteningsum:"Vi  <span>jämnar ut</span> summaledet efter introduktionen av den nya  <span>termen</span>.",quadrifybackwards:"Nu kan vi kvadrera baklänges!",collectingotherterms:"Vi samlar ihop de andra  <span>termerna</span> för att kunna flytta bort dem.",movingthemover:"Vi flyttar bort de andra  <span>termerna</span>.",solveforsub:"Nu löser vi potensekvationen med avsikt på  <span>potensens</span>  <span>bas</span>.",finallymoveb:"Vi flyttar den andra  <span>termen</span> från  <span>basen</span> till andra sidan, och vi är klara!",cleanb:"Vi gör en sista uppstädning på andra sidan.",flattenpath:"Vi gör i ordning  <span>logiken</span> som uppkom eftersom vår  <span>relation</span> är en  <span>jämförelse</span>.",LOGICPATHDOUBLE:"Vi utför samma uppstädning i den andra logiska versionen."}}}};
